// Code generated by goyacc -o mysql_sql.go mysql_sql.y. DO NOT EDIT.

//line mysql_sql.y:16
package mysql

import (
	__yyfmt__ "fmt"
	__yyunsafe__ "unsafe"
)

//line mysql_sql.y:16

import (
	"fmt"
	"go/constant"
	"strings"

	"github.com/matrixorigin/matrixone/pkg/defines"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/tree"
	"github.com/matrixorigin/matrixone/pkg/sql/parsers/util"
)

const LEX_ERROR = 57346
const EMPTY = 57347
const UNION = 57348
const EXCEPT = 57349
const INTERSECT = 57350
const MINUS = 57351
const LOWER_THAN_ORDER = 57352
const ORDER = 57353
const SELECT = 57354
const INSERT = 57355
const UPDATE = 57356
const DELETE = 57357
const FROM = 57358
const WHERE = 57359
const GROUP = 57360
const HAVING = 57361
const BY = 57362
const LIMIT = 57363
const OFFSET = 57364
const FOR = 57365
const CONNECT = 57366
const MANAGE = 57367
const GRANTS = 57368
const OWNERSHIP = 57369
const REFERENCE = 57370
const LOWER_THAN_SET = 57371
const SET = 57372
const ALL = 57373
const DISTINCT = 57374
const DISTINCTROW = 57375
const AS = 57376
const EXISTS = 57377
const ASC = 57378
const DESC = 57379
const INTO = 57380
const DUPLICATE = 57381
const DEFAULT = 57382
const LOCK = 57383
const KEYS = 57384
const NULLS = 57385
const FIRST = 57386
const LAST = 57387
const AFTER = 57388
const INSTANT = 57389
const INPLACE = 57390
const COPY = 57391
const DISABLE = 57392
const ENABLE = 57393
const UNDEFINED = 57394
const MERGE = 57395
const TEMPTABLE = 57396
const DEFINER = 57397
const INVOKER = 57398
const SQL = 57399
const SECURITY = 57400
const CASCADED = 57401
const VALUES = 57402
const NEXT = 57403
const VALUE = 57404
const SHARE = 57405
const MODE = 57406
const SQL_NO_CACHE = 57407
const SQL_CACHE = 57408
const JOIN = 57409
const STRAIGHT_JOIN = 57410
const LEFT = 57411
const RIGHT = 57412
const INNER = 57413
const OUTER = 57414
const CROSS = 57415
const NATURAL = 57416
const USE = 57417
const FORCE = 57418
const LOWER_THAN_ON = 57419
const ON = 57420
const USING = 57421
const SUBQUERY_AS_EXPR = 57422
const LOWER_THAN_STRING = 57423
const ID = 57424
const AT_ID = 57425
const AT_AT_ID = 57426
const STRING = 57427
const VALUE_ARG = 57428
const LIST_ARG = 57429
const COMMENT = 57430
const COMMENT_KEYWORD = 57431
const QUOTE_ID = 57432
const STAGE = 57433
const CREDENTIALS = 57434
const STAGES = 57435
const INTEGRAL = 57436
const HEX = 57437
const BIT_LITERAL = 57438
const FLOAT = 57439
const HEXNUM = 57440
const NULL = 57441
const TRUE = 57442
const FALSE = 57443
const LOWER_THAN_CHARSET = 57444
const CHARSET = 57445
const UNIQUE = 57446
const KEY = 57447
const OR = 57448
const PIPE_CONCAT = 57449
const XOR = 57450
const AND = 57451
const NOT = 57452
const BETWEEN = 57453
const CASE = 57454
const WHEN = 57455
const THEN = 57456
const ELSE = 57457
const END = 57458
const ELSEIF = 57459
const LOWER_THAN_EQ = 57460
const LE = 57461
const GE = 57462
const NE = 57463
const NULL_SAFE_EQUAL = 57464
const IS = 57465
const LIKE = 57466
const REGEXP = 57467
const IN = 57468
const ASSIGNMENT = 57469
const ILIKE = 57470
const SHIFT_LEFT = 57471
const SHIFT_RIGHT = 57472
const DIV = 57473
const MOD = 57474
const UNARY = 57475
const COLLATE = 57476
const BINARY = 57477
const UNDERSCORE_BINARY = 57478
const INTERVAL = 57479
const OUT = 57480
const INOUT = 57481
const BEGIN = 57482
const START = 57483
const TRANSACTION = 57484
const COMMIT = 57485
const ROLLBACK = 57486
const WORK = 57487
const CONSISTENT = 57488
const SNAPSHOT = 57489
const CHAIN = 57490
const NO = 57491
const RELEASE = 57492
const PRIORITY = 57493
const QUICK = 57494
const BIT = 57495
const TINYINT = 57496
const SMALLINT = 57497
const MEDIUMINT = 57498
const INT = 57499
const INTEGER = 57500
const BIGINT = 57501
const INTNUM = 57502
const REAL = 57503
const DOUBLE = 57504
const FLOAT_TYPE = 57505
const DECIMAL = 57506
const NUMERIC = 57507
const DECIMAL_VALUE = 57508
const TIME = 57509
const TIMESTAMP = 57510
const DATETIME = 57511
const YEAR = 57512
const CHAR = 57513
const VARCHAR = 57514
const BOOL = 57515
const CHARACTER = 57516
const VARBINARY = 57517
const NCHAR = 57518
const TEXT = 57519
const TINYTEXT = 57520
const MEDIUMTEXT = 57521
const LONGTEXT = 57522
const BLOB = 57523
const TINYBLOB = 57524
const MEDIUMBLOB = 57525
const LONGBLOB = 57526
const JSON = 57527
const ENUM = 57528
const UUID = 57529
const VECF32 = 57530
const VECF64 = 57531
const GEOMETRY = 57532
const POINT = 57533
const LINESTRING = 57534
const POLYGON = 57535
const GEOMETRYCOLLECTION = 57536
const MULTIPOINT = 57537
const MULTILINESTRING = 57538
const MULTIPOLYGON = 57539
const INT1 = 57540
const INT2 = 57541
const INT3 = 57542
const INT4 = 57543
const INT8 = 57544
const S3OPTION = 57545
const SQL_SMALL_RESULT = 57546
const SQL_BIG_RESULT = 57547
const SQL_BUFFER_RESULT = 57548
const LOW_PRIORITY = 57549
const HIGH_PRIORITY = 57550
const DELAYED = 57551
const CREATE = 57552
const ALTER = 57553
const DROP = 57554
const RENAME = 57555
const ANALYZE = 57556
const ADD = 57557
const RETURNS = 57558
const SCHEMA = 57559
const TABLE = 57560
const SEQUENCE = 57561
const INDEX = 57562
const VIEW = 57563
const TO = 57564
const IGNORE = 57565
const IF = 57566
const PRIMARY = 57567
const COLUMN = 57568
const CONSTRAINT = 57569
const SPATIAL = 57570
const FULLTEXT = 57571
const FOREIGN = 57572
const KEY_BLOCK_SIZE = 57573
const SHOW = 57574
const DESCRIBE = 57575
const EXPLAIN = 57576
const DATE = 57577
const ESCAPE = 57578
const REPAIR = 57579
const OPTIMIZE = 57580
const TRUNCATE = 57581
const MAXVALUE = 57582
const PARTITION = 57583
const REORGANIZE = 57584
const LESS = 57585
const THAN = 57586
const PROCEDURE = 57587
const TRIGGER = 57588
const STATUS = 57589
const VARIABLES = 57590
const ROLE = 57591
const PROXY = 57592
const AVG_ROW_LENGTH = 57593
const STORAGE = 57594
const DISK = 57595
const MEMORY = 57596
const CHECKSUM = 57597
const COMPRESSION = 57598
const DATA = 57599
const DIRECTORY = 57600
const DELAY_KEY_WRITE = 57601
const ENCRYPTION = 57602
const ENGINE = 57603
const MAX_ROWS = 57604
const MIN_ROWS = 57605
const PACK_KEYS = 57606
const ROW_FORMAT = 57607
const STATS_AUTO_RECALC = 57608
const STATS_PERSISTENT = 57609
const STATS_SAMPLE_PAGES = 57610
const DYNAMIC = 57611
const COMPRESSED = 57612
const REDUNDANT = 57613
const COMPACT = 57614
const FIXED = 57615
const COLUMN_FORMAT = 57616
const AUTO_RANDOM = 57617
const ENGINE_ATTRIBUTE = 57618
const SECONDARY_ENGINE_ATTRIBUTE = 57619
const INSERT_METHOD = 57620
const RESTRICT = 57621
const CASCADE = 57622
const ACTION = 57623
const PARTIAL = 57624
const SIMPLE = 57625
const CHECK = 57626
const ENFORCED = 57627
const RANGE = 57628
const LIST = 57629
const ALGORITHM = 57630
const LINEAR = 57631
const PARTITIONS = 57632
const SUBPARTITION = 57633
const SUBPARTITIONS = 57634
const CLUSTER = 57635
const TYPE = 57636
const ANY = 57637
const SOME = 57638
const EXTERNAL = 57639
const LOCALFILE = 57640
const URL = 57641
const PREPARE = 57642
const DEALLOCATE = 57643
const RESET = 57644
const EXTENSION = 57645
const INCREMENT = 57646
const CYCLE = 57647
const MINVALUE = 57648
const PUBLICATION = 57649
const SUBSCRIPTIONS = 57650
const PUBLICATIONS = 57651
const PROPERTIES = 57652
const PARSER = 57653
const VISIBLE = 57654
const INVISIBLE = 57655
const BTREE = 57656
const HASH = 57657
const RTREE = 57658
const BSI = 57659
const ZONEMAP = 57660
const LEADING = 57661
const BOTH = 57662
const TRAILING = 57663
const UNKNOWN = 57664
const EXPIRE = 57665
const ACCOUNT = 57666
const ACCOUNTS = 57667
const UNLOCK = 57668
const DAY = 57669
const NEVER = 57670
const PUMP = 57671
const MYSQL_COMPATIBILITY_MODE = 57672
const MODIFY = 57673
const CHANGE = 57674
const SECOND = 57675
const ASCII = 57676
const COALESCE = 57677
const COLLATION = 57678
const HOUR = 57679
const MICROSECOND = 57680
const MINUTE = 57681
const MONTH = 57682
const QUARTER = 57683
const REPEAT = 57684
const REVERSE = 57685
const ROW_COUNT = 57686
const WEEK = 57687
const REVOKE = 57688
const FUNCTION = 57689
const PRIVILEGES = 57690
const TABLESPACE = 57691
const EXECUTE = 57692
const SUPER = 57693
const GRANT = 57694
const OPTION = 57695
const REFERENCES = 57696
const REPLICATION = 57697
const SLAVE = 57698
const CLIENT = 57699
const USAGE = 57700
const RELOAD = 57701
const FILE = 57702
const TEMPORARY = 57703
const ROUTINE = 57704
const EVENT = 57705
const SHUTDOWN = 57706
const NULLX = 57707
const AUTO_INCREMENT = 57708
const APPROXNUM = 57709
const SIGNED = 57710
const UNSIGNED = 57711
const ZEROFILL = 57712
const ENGINES = 57713
const LOW_CARDINALITY = 57714
const AUTOEXTEND_SIZE = 57715
const ADMIN_NAME = 57716
const RANDOM = 57717
const SUSPEND = 57718
const ATTRIBUTE = 57719
const HISTORY = 57720
const REUSE = 57721
const CURRENT = 57722
const OPTIONAL = 57723
const FAILED_LOGIN_ATTEMPTS = 57724
const PASSWORD_LOCK_TIME = 57725
const UNBOUNDED = 57726
const SECONDARY = 57727
const RESTRICTED = 57728
const USER = 57729
const IDENTIFIED = 57730
const CIPHER = 57731
const ISSUER = 57732
const X509 = 57733
const SUBJECT = 57734
const SAN = 57735
const REQUIRE = 57736
const SSL = 57737
const NONE = 57738
const PASSWORD = 57739
const SHARED = 57740
const EXCLUSIVE = 57741
const MAX_QUERIES_PER_HOUR = 57742
const MAX_UPDATES_PER_HOUR = 57743
const MAX_CONNECTIONS_PER_HOUR = 57744
const MAX_USER_CONNECTIONS = 57745
const FORMAT = 57746
const VERBOSE = 57747
const CONNECTION = 57748
const TRIGGERS = 57749
const PROFILES = 57750
const LOAD = 57751
const INFILE = 57752
const TERMINATED = 57753
const OPTIONALLY = 57754
const ENCLOSED = 57755
const ESCAPED = 57756
const STARTING = 57757
const LINES = 57758
const ROWS = 57759
const IMPORT = 57760
const DISCARD = 57761
const MODUMP = 57762
const OVER = 57763
const PRECEDING = 57764
const FOLLOWING = 57765
const GROUPS = 57766
const DATABASES = 57767
const TABLES = 57768
const SEQUENCES = 57769
const EXTENDED = 57770
const FULL = 57771
const PROCESSLIST = 57772
const FIELDS = 57773
const COLUMNS = 57774
const OPEN = 57775
const ERRORS = 57776
const WARNINGS = 57777
const INDEXES = 57778
const SCHEMAS = 57779
const NODE = 57780
const LOCKS = 57781
const ROLES = 57782
const TABLE_NUMBER = 57783
const COLUMN_NUMBER = 57784
const TABLE_VALUES = 57785
const TABLE_SIZE = 57786
const NAMES = 57787
const GLOBAL = 57788
const PERSIST = 57789
const SESSION = 57790
const ISOLATION = 57791
const LEVEL = 57792
const READ = 57793
const WRITE = 57794
const ONLY = 57795
const REPEATABLE = 57796
const COMMITTED = 57797
const UNCOMMITTED = 57798
const SERIALIZABLE = 57799
const LOCAL = 57800
const EVENTS = 57801
const PLUGINS = 57802
const CURRENT_TIMESTAMP = 57803
const DATABASE = 57804
const CURRENT_TIME = 57805
const LOCALTIME = 57806
const LOCALTIMESTAMP = 57807
const UTC_DATE = 57808
const UTC_TIME = 57809
const UTC_TIMESTAMP = 57810
const REPLACE = 57811
const CONVERT = 57812
const SEPARATOR = 57813
const TIMESTAMPDIFF = 57814
const CURRENT_DATE = 57815
const CURRENT_USER = 57816
const CURRENT_ROLE = 57817
const SECOND_MICROSECOND = 57818
const MINUTE_MICROSECOND = 57819
const MINUTE_SECOND = 57820
const HOUR_MICROSECOND = 57821
const HOUR_SECOND = 57822
const HOUR_MINUTE = 57823
const DAY_MICROSECOND = 57824
const DAY_SECOND = 57825
const DAY_MINUTE = 57826
const DAY_HOUR = 57827
const YEAR_MONTH = 57828
const SQL_TSI_HOUR = 57829
const SQL_TSI_DAY = 57830
const SQL_TSI_WEEK = 57831
const SQL_TSI_MONTH = 57832
const SQL_TSI_QUARTER = 57833
const SQL_TSI_YEAR = 57834
const SQL_TSI_SECOND = 57835
const SQL_TSI_MINUTE = 57836
const RECURSIVE = 57837
const CONFIG = 57838
const DRAINER = 57839
const SOURCE = 57840
const STREAM = 57841
const HEADERS = 57842
const CONNECTOR = 57843
const MATCH = 57844
const AGAINST = 57845
const BOOLEAN = 57846
const LANGUAGE = 57847
const WITH = 57848
const QUERY = 57849
const EXPANSION = 57850
const WITHOUT = 57851
const VALIDATION = 57852
const ADDDATE = 57853
const BIT_AND = 57854
const BIT_OR = 57855
const BIT_XOR = 57856
const CAST = 57857
const COUNT = 57858
const APPROX_COUNT = 57859
const APPROX_COUNT_DISTINCT = 57860
const APPROX_PERCENTILE = 57861
const CURDATE = 57862
const CURTIME = 57863
const DATE_ADD = 57864
const DATE_SUB = 57865
const EXTRACT = 57866
const GROUP_CONCAT = 57867
const MAX = 57868
const MID = 57869
const MIN = 57870
const NOW = 57871
const POSITION = 57872
const SESSION_USER = 57873
const STD = 57874
const STDDEV = 57875
const MEDIAN = 57876
const STDDEV_POP = 57877
const STDDEV_SAMP = 57878
const SUBDATE = 57879
const SUBSTR = 57880
const SUBSTRING = 57881
const SUM = 57882
const SYSDATE = 57883
const SYSTEM_USER = 57884
const TRANSLATE = 57885
const TRIM = 57886
const VARIANCE = 57887
const VAR_POP = 57888
const VAR_SAMP = 57889
const AVG = 57890
const RANK = 57891
const ROW_NUMBER = 57892
const DENSE_RANK = 57893
const NEXTVAL = 57894
const SETVAL = 57895
const CURRVAL = 57896
const LASTVAL = 57897
const ARROW = 57898
const ROW = 57899
const OUTFILE = 57900
const HEADER = 57901
const MAX_FILE_SIZE = 57902
const FORCE_QUOTE = 57903
const PARALLEL = 57904
const UNUSED = 57905
const BINDINGS = 57906
const DO = 57907
const DECLARE = 57908
const LOOP = 57909
const WHILE = 57910
const LEAVE = 57911
const ITERATE = 57912
const UNTIL = 57913
const CALL = 57914
const SPBEGIN = 57915
const BACKEND = 57916
const SERVERS = 57917
const CLOUD_USER = 57918
const KILL = 57919
const BACKUP = 57920
const FILESYSTEM = 57921
const QUERY_RESULT = 57922

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"LEX_ERROR",
	"EMPTY",
	"UNION",
	"EXCEPT",
	"INTERSECT",
	"MINUS",
	"LOWER_THAN_ORDER",
	"ORDER",
	"SELECT",
	"INSERT",
	"UPDATE",
	"DELETE",
	"FROM",
	"WHERE",
	"GROUP",
	"HAVING",
	"BY",
	"LIMIT",
	"OFFSET",
	"FOR",
	"CONNECT",
	"MANAGE",
	"GRANTS",
	"OWNERSHIP",
	"REFERENCE",
	"LOWER_THAN_SET",
	"SET",
	"ALL",
	"DISTINCT",
	"DISTINCTROW",
	"AS",
	"EXISTS",
	"ASC",
	"DESC",
	"INTO",
	"DUPLICATE",
	"DEFAULT",
	"LOCK",
	"KEYS",
	"NULLS",
	"FIRST",
	"LAST",
	"AFTER",
	"INSTANT",
	"INPLACE",
	"COPY",
	"DISABLE",
	"ENABLE",
	"UNDEFINED",
	"MERGE",
	"TEMPTABLE",
	"DEFINER",
	"INVOKER",
	"SQL",
	"SECURITY",
	"CASCADED",
	"VALUES",
	"NEXT",
	"VALUE",
	"SHARE",
	"MODE",
	"SQL_NO_CACHE",
	"SQL_CACHE",
	"JOIN",
	"STRAIGHT_JOIN",
	"LEFT",
	"RIGHT",
	"INNER",
	"OUTER",
	"CROSS",
	"NATURAL",
	"USE",
	"FORCE",
	"LOWER_THAN_ON",
	"ON",
	"USING",
	"SUBQUERY_AS_EXPR",
	"'('",
	"')'",
	"LOWER_THAN_STRING",
	"ID",
	"AT_ID",
	"AT_AT_ID",
	"STRING",
	"VALUE_ARG",
	"LIST_ARG",
	"COMMENT",
	"COMMENT_KEYWORD",
	"QUOTE_ID",
	"STAGE",
	"CREDENTIALS",
	"STAGES",
	"INTEGRAL",
	"HEX",
	"BIT_LITERAL",
	"FLOAT",
	"HEXNUM",
	"NULL",
	"TRUE",
	"FALSE",
	"LOWER_THAN_CHARSET",
	"CHARSET",
	"UNIQUE",
	"KEY",
	"OR",
	"PIPE_CONCAT",
	"XOR",
	"AND",
	"NOT",
	"'!'",
	"BETWEEN",
	"CASE",
	"WHEN",
	"THEN",
	"ELSE",
	"END",
	"ELSEIF",
	"LOWER_THAN_EQ",
	"'='",
	"'<'",
	"'>'",
	"LE",
	"GE",
	"NE",
	"NULL_SAFE_EQUAL",
	"IS",
	"LIKE",
	"REGEXP",
	"IN",
	"ASSIGNMENT",
	"ILIKE",
	"'|'",
	"'&'",
	"SHIFT_LEFT",
	"SHIFT_RIGHT",
	"'+'",
	"'-'",
	"'*'",
	"'/'",
	"DIV",
	"'%'",
	"MOD",
	"'^'",
	"'~'",
	"UNARY",
	"COLLATE",
	"BINARY",
	"UNDERSCORE_BINARY",
	"INTERVAL",
	"'.'",
	"','",
	"OUT",
	"INOUT",
	"BEGIN",
	"START",
	"TRANSACTION",
	"COMMIT",
	"ROLLBACK",
	"WORK",
	"CONSISTENT",
	"SNAPSHOT",
	"CHAIN",
	"NO",
	"RELEASE",
	"PRIORITY",
	"QUICK",
	"BIT",
	"TINYINT",
	"SMALLINT",
	"MEDIUMINT",
	"INT",
	"INTEGER",
	"BIGINT",
	"INTNUM",
	"REAL",
	"DOUBLE",
	"FLOAT_TYPE",
	"DECIMAL",
	"NUMERIC",
	"DECIMAL_VALUE",
	"TIME",
	"TIMESTAMP",
	"DATETIME",
	"YEAR",
	"CHAR",
	"VARCHAR",
	"BOOL",
	"CHARACTER",
	"VARBINARY",
	"NCHAR",
	"TEXT",
	"TINYTEXT",
	"MEDIUMTEXT",
	"LONGTEXT",
	"BLOB",
	"TINYBLOB",
	"MEDIUMBLOB",
	"LONGBLOB",
	"JSON",
	"ENUM",
	"UUID",
	"VECF32",
	"VECF64",
	"GEOMETRY",
	"POINT",
	"LINESTRING",
	"POLYGON",
	"GEOMETRYCOLLECTION",
	"MULTIPOINT",
	"MULTILINESTRING",
	"MULTIPOLYGON",
	"INT1",
	"INT2",
	"INT3",
	"INT4",
	"INT8",
	"S3OPTION",
	"SQL_SMALL_RESULT",
	"SQL_BIG_RESULT",
	"SQL_BUFFER_RESULT",
	"LOW_PRIORITY",
	"HIGH_PRIORITY",
	"DELAYED",
	"CREATE",
	"ALTER",
	"DROP",
	"RENAME",
	"ANALYZE",
	"ADD",
	"RETURNS",
	"SCHEMA",
	"TABLE",
	"SEQUENCE",
	"INDEX",
	"VIEW",
	"TO",
	"IGNORE",
	"IF",
	"PRIMARY",
	"COLUMN",
	"CONSTRAINT",
	"SPATIAL",
	"FULLTEXT",
	"FOREIGN",
	"KEY_BLOCK_SIZE",
	"SHOW",
	"DESCRIBE",
	"EXPLAIN",
	"DATE",
	"ESCAPE",
	"REPAIR",
	"OPTIMIZE",
	"TRUNCATE",
	"MAXVALUE",
	"PARTITION",
	"REORGANIZE",
	"LESS",
	"THAN",
	"PROCEDURE",
	"TRIGGER",
	"STATUS",
	"VARIABLES",
	"ROLE",
	"PROXY",
	"AVG_ROW_LENGTH",
	"STORAGE",
	"DISK",
	"MEMORY",
	"CHECKSUM",
	"COMPRESSION",
	"DATA",
	"DIRECTORY",
	"DELAY_KEY_WRITE",
	"ENCRYPTION",
	"ENGINE",
	"MAX_ROWS",
	"MIN_ROWS",
	"PACK_KEYS",
	"ROW_FORMAT",
	"STATS_AUTO_RECALC",
	"STATS_PERSISTENT",
	"STATS_SAMPLE_PAGES",
	"DYNAMIC",
	"COMPRESSED",
	"REDUNDANT",
	"COMPACT",
	"FIXED",
	"COLUMN_FORMAT",
	"AUTO_RANDOM",
	"ENGINE_ATTRIBUTE",
	"SECONDARY_ENGINE_ATTRIBUTE",
	"INSERT_METHOD",
	"RESTRICT",
	"CASCADE",
	"ACTION",
	"PARTIAL",
	"SIMPLE",
	"CHECK",
	"ENFORCED",
	"RANGE",
	"LIST",
	"ALGORITHM",
	"LINEAR",
	"PARTITIONS",
	"SUBPARTITION",
	"SUBPARTITIONS",
	"CLUSTER",
	"TYPE",
	"ANY",
	"SOME",
	"EXTERNAL",
	"LOCALFILE",
	"URL",
	"PREPARE",
	"DEALLOCATE",
	"RESET",
	"EXTENSION",
	"INCREMENT",
	"CYCLE",
	"MINVALUE",
	"PUBLICATION",
	"SUBSCRIPTIONS",
	"PUBLICATIONS",
	"PROPERTIES",
	"PARSER",
	"VISIBLE",
	"INVISIBLE",
	"BTREE",
	"HASH",
	"RTREE",
	"BSI",
	"ZONEMAP",
	"LEADING",
	"BOTH",
	"TRAILING",
	"UNKNOWN",
	"EXPIRE",
	"ACCOUNT",
	"ACCOUNTS",
	"UNLOCK",
	"DAY",
	"NEVER",
	"PUMP",
	"MYSQL_COMPATIBILITY_MODE",
	"MODIFY",
	"CHANGE",
	"SECOND",
	"ASCII",
	"COALESCE",
	"COLLATION",
	"HOUR",
	"MICROSECOND",
	"MINUTE",
	"MONTH",
	"QUARTER",
	"REPEAT",
	"REVERSE",
	"ROW_COUNT",
	"WEEK",
	"REVOKE",
	"FUNCTION",
	"PRIVILEGES",
	"TABLESPACE",
	"EXECUTE",
	"SUPER",
	"GRANT",
	"OPTION",
	"REFERENCES",
	"REPLICATION",
	"SLAVE",
	"CLIENT",
	"USAGE",
	"RELOAD",
	"FILE",
	"TEMPORARY",
	"ROUTINE",
	"EVENT",
	"SHUTDOWN",
	"NULLX",
	"AUTO_INCREMENT",
	"APPROXNUM",
	"SIGNED",
	"UNSIGNED",
	"ZEROFILL",
	"ENGINES",
	"LOW_CARDINALITY",
	"AUTOEXTEND_SIZE",
	"ADMIN_NAME",
	"RANDOM",
	"SUSPEND",
	"ATTRIBUTE",
	"HISTORY",
	"REUSE",
	"CURRENT",
	"OPTIONAL",
	"FAILED_LOGIN_ATTEMPTS",
	"PASSWORD_LOCK_TIME",
	"UNBOUNDED",
	"SECONDARY",
	"RESTRICTED",
	"USER",
	"IDENTIFIED",
	"CIPHER",
	"ISSUER",
	"X509",
	"SUBJECT",
	"SAN",
	"REQUIRE",
	"SSL",
	"NONE",
	"PASSWORD",
	"SHARED",
	"EXCLUSIVE",
	"MAX_QUERIES_PER_HOUR",
	"MAX_UPDATES_PER_HOUR",
	"MAX_CONNECTIONS_PER_HOUR",
	"MAX_USER_CONNECTIONS",
	"FORMAT",
	"VERBOSE",
	"CONNECTION",
	"TRIGGERS",
	"PROFILES",
	"LOAD",
	"INFILE",
	"TERMINATED",
	"OPTIONALLY",
	"ENCLOSED",
	"ESCAPED",
	"STARTING",
	"LINES",
	"ROWS",
	"IMPORT",
	"DISCARD",
	"MODUMP",
	"OVER",
	"PRECEDING",
	"FOLLOWING",
	"GROUPS",
	"DATABASES",
	"TABLES",
	"SEQUENCES",
	"EXTENDED",
	"FULL",
	"PROCESSLIST",
	"FIELDS",
	"COLUMNS",
	"OPEN",
	"ERRORS",
	"WARNINGS",
	"INDEXES",
	"SCHEMAS",
	"NODE",
	"LOCKS",
	"ROLES",
	"TABLE_NUMBER",
	"COLUMN_NUMBER",
	"TABLE_VALUES",
	"TABLE_SIZE",
	"NAMES",
	"GLOBAL",
	"PERSIST",
	"SESSION",
	"ISOLATION",
	"LEVEL",
	"READ",
	"WRITE",
	"ONLY",
	"REPEATABLE",
	"COMMITTED",
	"UNCOMMITTED",
	"SERIALIZABLE",
	"LOCAL",
	"EVENTS",
	"PLUGINS",
	"CURRENT_TIMESTAMP",
	"DATABASE",
	"CURRENT_TIME",
	"LOCALTIME",
	"LOCALTIMESTAMP",
	"UTC_DATE",
	"UTC_TIME",
	"UTC_TIMESTAMP",
	"REPLACE",
	"CONVERT",
	"SEPARATOR",
	"TIMESTAMPDIFF",
	"CURRENT_DATE",
	"CURRENT_USER",
	"CURRENT_ROLE",
	"SECOND_MICROSECOND",
	"MINUTE_MICROSECOND",
	"MINUTE_SECOND",
	"HOUR_MICROSECOND",
	"HOUR_SECOND",
	"HOUR_MINUTE",
	"DAY_MICROSECOND",
	"DAY_SECOND",
	"DAY_MINUTE",
	"DAY_HOUR",
	"YEAR_MONTH",
	"SQL_TSI_HOUR",
	"SQL_TSI_DAY",
	"SQL_TSI_WEEK",
	"SQL_TSI_MONTH",
	"SQL_TSI_QUARTER",
	"SQL_TSI_YEAR",
	"SQL_TSI_SECOND",
	"SQL_TSI_MINUTE",
	"RECURSIVE",
	"CONFIG",
	"DRAINER",
	"SOURCE",
	"STREAM",
	"HEADERS",
	"CONNECTOR",
	"MATCH",
	"AGAINST",
	"BOOLEAN",
	"LANGUAGE",
	"WITH",
	"QUERY",
	"EXPANSION",
	"WITHOUT",
	"VALIDATION",
	"ADDDATE",
	"BIT_AND",
	"BIT_OR",
	"BIT_XOR",
	"CAST",
	"COUNT",
	"APPROX_COUNT",
	"APPROX_COUNT_DISTINCT",
	"APPROX_PERCENTILE",
	"CURDATE",
	"CURTIME",
	"DATE_ADD",
	"DATE_SUB",
	"EXTRACT",
	"GROUP_CONCAT",
	"MAX",
	"MID",
	"MIN",
	"NOW",
	"POSITION",
	"SESSION_USER",
	"STD",
	"STDDEV",
	"MEDIAN",
	"STDDEV_POP",
	"STDDEV_SAMP",
	"SUBDATE",
	"SUBSTR",
	"SUBSTRING",
	"SUM",
	"SYSDATE",
	"SYSTEM_USER",
	"TRANSLATE",
	"TRIM",
	"VARIANCE",
	"VAR_POP",
	"VAR_SAMP",
	"AVG",
	"RANK",
	"ROW_NUMBER",
	"DENSE_RANK",
	"NEXTVAL",
	"SETVAL",
	"CURRVAL",
	"LASTVAL",
	"ARROW",
	"ROW",
	"OUTFILE",
	"HEADER",
	"MAX_FILE_SIZE",
	"FORCE_QUOTE",
	"PARALLEL",
	"UNUSED",
	"BINDINGS",
	"DO",
	"DECLARE",
	"LOOP",
	"WHILE",
	"LEAVE",
	"ITERATE",
	"UNTIL",
	"CALL",
	"SPBEGIN",
	"BACKEND",
	"SERVERS",
	"CLOUD_USER",
	"KILL",
	"BACKUP",
	"FILESYSTEM",
	"QUERY_RESULT",
	"';'",
	"'{'",
	"'}'",
	"':'",
	"'@'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

//line mysql_sql.y:10392

//line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 117,
	21, 700,
	-2, 681,
	-1, 134,
	235, 1034,
	237, 957,
	-2, 998,
	-1, 157,
	42, 519,
	237, 519,
	264, 526,
	265, 526,
	453, 519,
	-2, 552,
	-1, 193,
	601, 1749,
	-2, 435,
	-1, 530,
	316, 135,
	427, 135,
	-2, 1659,
	-1, 593,
	81, 1454,
	-2, 1803,
	-1, 594,
	81, 1472,
	-2, 1774,
	-1, 598,
	81, 1473,
	-2, 1802,
	-1, 624,
	81, 1384,
	-2, 1871,
	-1, 625,
	81, 1385,
	-2, 1870,
	-1, 626,
	81, 1386,
	-2, 1860,
	-1, 627,
	81, 1834,
	-2, 1855,
	-1, 628,
	81, 1835,
	-2, 1856,
	-1, 629,
	81, 1836,
	-2, 1862,
	-1, 630,
	81, 1837,
	-2, 1844,
	-1, 631,
	81, 1838,
	-2, 1853,
	-1, 632,
	81, 1839,
	-2, 1863,
	-1, 633,
	81, 1840,
	-2, 1864,
	-1, 634,
	81, 1841,
	-2, 1869,
	-1, 635,
	81, 1842,
	-2, 1874,
	-1, 636,
	81, 1843,
	-2, 1875,
	-1, 638,
	81, 1451,
	-2, 1647,
	-1, 642,
	81, 1456,
	-2, 1660,
	-1, 645,
	81, 1460,
	-2, 1678,
	-1, 649,
	81, 1464,
	-2, 1720,
	-1, 650,
	81, 1465,
	-2, 1798,
	-1, 658,
	81, 1475,
	-2, 1783,
	-1, 659,
	81, 1476,
	-2, 1827,
	-1, 660,
	81, 1477,
	-2, 1793,
	-1, 661,
	81, 1478,
	-2, 1817,
	-1, 672,
	81, 1362,
	-2, 1865,
	-1, 673,
	81, 1363,
	-2, 1866,
	-1, 674,
	81, 1364,
	-2, 1867,
	-1, 678,
	21, 701,
	-2, 664,
	-1, 759,
	448, 552,
	449, 552,
	-2, 520,
	-1, 803,
	122, 1647,
	133, 1647,
	153, 1647,
	-2, 1622,
	-1, 909,
	21, 701,
	-2, 664,
	-1, 1009,
	21, 700,
	-2, 1260,
	-1, 1127,
	515, 999,
	516, 999,
	-2, 875,
	-1, 1383,
	81, 1522,
	-2, 1800,
	-1, 1384,
	81, 1523,
	-2, 1801,
	-1, 1522,
	82, 847,
	-2, 853,
	-1, 1905,
	82, 1608,
	154, 1608,
	-2, 1785,
	-1, 1906,
	82, 1608,
	154, 1608,
	-2, 1784,
	-1, 1907,
	82, 1584,
	154, 1584,
	-2, 1771,
	-1, 1908,
	82, 1585,
	154, 1585,
	-2, 1776,
	-1, 1909,
	82, 1586,
	154, 1586,
	-2, 1708,
	-1, 1910,
	82, 1587,
	154, 1587,
	-2, 1702,
	-1, 1911,
	82, 1588,
	154, 1588,
	-2, 1638,
	-1, 1912,
	82, 1589,
	154, 1589,
	-2, 1773,
	-1, 1913,
	82, 1590,
	154, 1590,
	-2, 1706,
	-1, 1914,
	82, 1591,
	154, 1591,
	-2, 1701,
	-1, 1915,
	82, 1592,
	154, 1592,
	-2, 1692,
	-1, 1916,
	82, 1608,
	154, 1608,
	-2, 1693,
	-1, 1917,
	82, 1608,
	154, 1608,
	-2, 1694,
	-1, 1919,
	82, 1597,
	154, 1597,
	-2, 1817,
	-1, 1920,
	82, 1575,
	154, 1575,
	-2, 1803,
	-1, 1921,
	82, 1606,
	154, 1606,
	-2, 1774,
	-1, 1922,
	82, 1606,
	154, 1606,
	-2, 1802,
	-1, 1923,
	82, 1606,
	154, 1606,
	-2, 1661,
	-1, 1924,
	82, 1604,
	154, 1604,
	-2, 1793,
	-1, 1925,
	82, 1601,
	154, 1601,
	-2, 1683,
	-1, 1926,
	81, 1556,
	82, 1556,
	154, 1556,
	385, 1556,
	386, 1556,
	387, 1556,
	-2, 1637,
	-1, 1927,
	81, 1557,
	82, 1557,
	154, 1557,
	385, 1557,
	386, 1557,
	387, 1557,
	-2, 1639,
	-1, 1928,
	81, 1560,
	82, 1560,
	154, 1560,
	385, 1560,
	386, 1560,
	387, 1560,
	-2, 1775,
	-1, 1929,
	81, 1562,
	82, 1562,
	154, 1562,
	385, 1562,
	386, 1562,
	387, 1562,
	-2, 1758,
	-1, 1930,
	81, 1564,
	82, 1564,
	154, 1564,
	385, 1564,
	386, 1564,
	387, 1564,
	-2, 1707,
	-1, 1931,
	81, 1566,
	82, 1566,
	154, 1566,
	385, 1566,
	386, 1566,
	387, 1566,
	-2, 1688,
	-1, 1932,
	81, 1567,
	82, 1567,
	154, 1567,
	385, 1567,
	386, 1567,
	387, 1567,
	-2, 1689,
	-1, 1933,
	81, 1569,
	82, 1569,
	154, 1569,
	385, 1569,
	386, 1569,
	387, 1569,
	-2, 1636,
	-1, 1934,
	82, 1611,
	154, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	-2, 1666,
	-1, 1935,
	82, 1611,
	154, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	-2, 1679,
	-1, 1936,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1662,
	-1, 1937,
	82, 1614,
	154, 1614,
	385, 1614,
	386, 1614,
	387, 1614,
	-2, 1723,
	-1, 1938,
	82, 1611,
	154, 1611,
	385, 1611,
	386, 1611,
	387, 1611,
	-2, 1743,
	-1, 1954,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	277, 992,
	-2, 985,
	-1, 2093,
	21, 700,
	-2, 794,
	-1, 2289,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	277, 992,
	-2, 986,
	-1, 2309,
	79, 610,
	154, 610,
	-2, 1147,
	-1, 2645,
	191, 992,
	301, 1228,
	-2, 1200,
	-1, 2786,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	-2, 1090,
	-1, 2788,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	-2, 1090,
	-1, 2798,
	79, 610,
	154, 610,
	-2, 1148,
	-1, 2806,
	191, 992,
	301, 1228,
	-2, 1201,
	-1, 2933,
	105, 992,
	149, 992,
	188, 992,
	191, 992,
	-2, 1091,
	-1, 3295,
	82, 1052,
	154, 1052,
	-2, 992,
	-1, 3299,
	82, 1052,
	154, 1052,
	-2, 992,
	-1, 3313,
	82, 1056,
	154, 1056,
	-2, 992,
	-1, 3318,
	82, 1057,
	154, 1057,
	-2, 992,
}

const yyPrivate = 57344

const yyLast = 38830

var yyAct = [...]int{
	560, 1603, 3299, 3298, 3307, 3278, 184, 1302, 1364, 539,
	3170, 541, 562, 3231, 534, 3196, 3249, 3178, 2663, 3179,
	549, 2881, 3090, 1880, 2973, 3104, 2820, 1041, 3082, 1360,
	2886, 1221, 2726, 3108, 2916, 2917, 2914, 3008, 590, 2727,
	1162, 445, 3043, 679, 2298, 2782, 802, 2884, 1292, 543,
	2998, 3091, 453, 3093, 458, 458, 1557, 2766, 2312, 2935,
	458, 474, 483, 2921, 1995, 483, 2932, 2613, 1367, 2752,
	2807, 2876, 2425, 2426, 1692, 169, 2348, 2597, 2408, 1689,
	2660, 2642, 2649, 2755, 2087, 2294, 1657, 2418, 2424, 2724,
	494, 2712, 2611, 1786, 2447, 2695, 1755, 1903, 2421, 2581,
	2280, 1998, 2578, 2614, 488, 1966, 1704, 2576, 903, 2648,
	1901, 2290, 1893, 1884, 532, 1763, 2328, 1214, 2484, 1559,
	1883, 1764, 533, 2071, 37, 1756, 538, 1782, 1502, 2135,
	2467, 2521, 1729, 1685, 808, 2269, 2088, 735, 1660, 1135,
	2330, 1658, 1288, 1996, 2076, 2264, 1586, 1595, 1781, 1965,
	1532, 180, 8, 179, 7, 1293, 1510, 6, 57, 855,
	2152, 445, 1814, 1358, 542, 1783, 1296, 1255, 1230, 1899,
	2115, 1200, 2616, 1301, 452, 1945, 796, 2227, 2615, 1793,
	1151, 116, 1111, 1568, 184, 480, 184, 1413, 846, 847,
	531, 1397, 1349, 1569, 27, 550, 840, 841, 451, 1759,
	1363, 845, 1991, 533, 766, 36, 920, 806, 1745, 1719,
	1137, 1170, 15, 1762, 1281, 1080, 1262, 444, 1357, 795,
	1199, 16, 2095, 1531, 33, 734, 2226, 1147, 467, 1419,
	1418, 497, 14, 676, 496, 1197, 24, 470, 17, 11,
	170, 1790, 1254, 482, 1163, 163, 712, 732, 716, 166,
	1106, 1042, 678, 843, 1800, 479, 754, 2769, 2719, 842,
	3033, 844, 2186, 2141, 2139, 2138, 2252, 2252, 2252, 1515,
	2136, 1269, 1265, 478, 838, 839, 839, 168, 1097, 454,
	1183, 839, 475, 2874, 1267, 476, 978, 979, 980, 977,
	2480, 2810, 2478, 477, 1734, 978, 979, 980, 977, 3004,
	2999, 2025, 2877, 463, 2725, 1506, 3095, 1036, 486, 1758,
	677, 167, 53, 159, 135, 2033, 687, 2903, 941, 2297,
	8, 2299, 7, 812, 3161, 3054, 837, 167, 167, 2822,
	167, 53, 159, 135, 167, 167, 53, 159, 135, 167,
	1098, 2753, 2813, 167, 167, 167, 809, 1539, 2173, 1787,
	2181, 2898, 2808, 3126, 1122, 1121, 1541, 2830, 2831, 1171,
	1798, 1316, 1309, 2809, 492, 493, 2544, 1526, 1127, 3055,
	811, 949, 2901, 540, 951, 2499, 2492, 1949, 2114, 2113,
	164, 667, 115, 666, 668, 669, 1334, 670, 671, 975,
	2453, 1313, 1306, 115, 1702, 1099, 164, 164, 1350, 164,
	2814, 1354, 952, 164, 164, 1669, 956, 1179, 164, 957,
	1180, 2153, 1315, 1308, 164, 2101, 775, 688, 2100, 680,
	968, 2102, 2454, 2455, 1201, 1353, 1203, 784, 1670, 1671,
	1516, 1517, 2266, 1582, 1166, 1168, 1169, 959, 1165, 1168,
	1169, 1366, 2267, 3214, 973, 805, 804, 3212, 1159, 3098,
	3157, 3182, 3183, 3097, 3156, 3096, 3155, 458, 3098, 3097,
	3096, 1871, 2894, 3200, 3201, 3006, 2485, 458, 913, 3009,
	3010, 3011, 3012, 2728, 2728, 3084, 1369, 945, 3084, 3087,
	2486, 3160, 2487, 3002, 2168, 483, 483, 923, 458, 2265,
	914, 2364, 1686, 2829, 3101, 1999, 1182, 2737, 2756, 1676,
	1680, 1794, 947, 1345, 1355, 2908, 2763, 908, 910, 1268,
	1266, 2592, 954, 2065, 950, 953, 1944, 1742, 2582, 723,
	2818, 2272, 2832, 2590, 2255, 2875, 134, 1352, 165, 961,
	3028, 2512, 962, 1275, 1274, 971, 972, 2586, 3100, 2510,
	946, 849, 2815, 2819, 2817, 2816, 970, 827, 157, 1453,
	981, 944, 1011, 527, 2178, 2031, 529, 2479, 2412, 1010,
	964, 528, 3163, 3164, 923, 2068, 2067, 1019, 907, 780,
	3020, 3031, 779, 3021, 2905, 955, 491, 2072, 2587, 2588,
	2824, 2825, 936, 807, 912, 3207, 2606, 1368, 3015, 1025,
	2661, 2662, 913, 2893, 2589, 2624, 480, 480, 3181, 909,
	2895, 2974, 2975, 2976, 2978, 2977, 1799, 3051, 3020, 3114,
	2305, 3021, 3216, 485, 2417, 948, 2284, 2285, 2286, 2287,
	484, 2844, 2832, 1951, 966, 967, 3023, 1803, 1805, 1806,
	2837, 3109, 812, 3292, 2811, 960, 1191, 3308, 1700, 1701,
	2823, 1045, 1351, 1157, 3240, 3168, 3169, 3211, 3172, 2584,
	958, 1181, 3172, 3247, 1096, 809, 1146, 3022, 785, 1375,
	1378, 1379, 2847, 3272, 3023, 2001, 479, 479, 3027, 2964,
	1376, 3252, 2042, 965, 2041, 781, 927, 925, 924, 811,
	2665, 2062, 2063, 2278, 478, 478, 2953, 1788, 822, 818,
	813, 817, 820, 475, 475, 3022, 476, 476, 963, 1104,
	453, 1107, 1210, 812, 477, 477, 3032, 3309, 1046, 916,
	917, 458, 2739, 2516, 2251, 1209, 825, 1788, 1788, 1077,
	816, 933, 1161, 1160, 2959, 934, 809, 1144, 929, 930,
	2117, 1143, 3315, 725, 735, 726, 3279, 839, 783, 2392,
	918, 1142, 839, 839, 481, 3044, 904, 1017, 839, 481,
	811, 839, 3053, 839, 925, 924, 3162, 2561, 1789, 2790,
	2137, 2299, 1815, 3052, 1994, 3303, 1801, 3081, 2828, 1270,
	2872, 823, 1112, 2011, 492, 2449, 2451, 1198, 826, 2657,
	2174, 458, 2105, 1193, 2029, 1167, 1110, 1791, 2902, 445,
	445, 941, 1118, 2004, 1164, 814, 2515, 1125, 445, 445,
	677, 2000, 1225, 1225, 54, 458, 2002, 3253, 1124, 54,
	1168, 1169, 1123, 782, 1168, 1169, 2593, 487, 824, 1687,
	2904, 2583, 136, 2271, 483, 1107, 453, 2827, 2571, 1258,
	1258, 1223, 1223, 1802, 1227, 3029, 2513, 3217, 136, 136,
	184, 136, 2585, 1257, 1257, 136, 136, 1232, 2658, 445,
	136, 1054, 1055, 2182, 136, 136, 136, 935, 815, 1158,
	2003, 2966, 2014, 2909, 2365, 1804, 2366, 2367, 1994, 2016,
	2664, 3016, 2464, 2465, 1105, 3017, 940, 1132, 2362, 2275,
	2276, 1677, 1679, 807, 2254, 1346, 1113, 1114, 1115, 1116,
	1117, 694, 1119, 3302, 2274, 2523, 2522, 1377, 1126, 1887,
	1300, 1102, 1303, 1276, 729, 730, 731, 1311, 3314, 3016,
	2661, 2662, 1519, 3092, 1889, 1888, 1108, 1219, 1220, 1013,
	1014, 1015, 1016, 2005, 1082, 1520, 2015, 1332, 1153, 1154,
	1084, 1886, 2955, 821, 1327, 1328, 2954, 3250, 3251, 1518,
	2450, 1225, 693, 1225, 913, 678, 696, 695, 1140, 1317,
	1109, 2001, 2004, 1145, 2960, 2961, 2383, 2384, 1100, 1101,
	1155, 690, 727, 2054, 691, 1205, 1207, 2940, 1173, 1174,
	819, 1176, 1177, 1178, 1217, 1218, 1192, 3255, 2010, 976,
	2692, 1134, 2008, 724, 3321, 2393, 2395, 2396, 2397, 2394,
	941, 1370, 1371, 1372, 1373, 1374, 1184, 1185, 2155, 1560,
	1250, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393,
	1394, 1395, 1396, 1172, 3320, 1560, 1175, 1408, 1409, 1290,
	1291, 1896, 1208, 1417, 1846, 1271, 1331, 1845, 1307, 2629,
	3311, 3293, 1314, 2310, 1330, 1415, 1416, 1466, 2085, 1456,
	1457, 1458, 1450, 480, 1897, 1898, 2688, 2659, 1347, 776,
	1460, 1295, 1472, 1341, 1299, 1473, 976, 1233, 463, 2779,
	1365, 1475, 812, 1874, 1298, 1243, 812, 1248, 1482, 1483,
	1362, 1279, 1259, 1282, 1283, 1249, 2173, 776, 2382, 1947,
	1260, 938, 2005, 2667, 1284, 1285, 976, 2000, 1994, 1999,
	1878, 1997, 2002, 2604, 1504, 2086, 1343, 3288, 1508, 976,
	2260, 1511, 3312, 1796, 2311, 1148, 1152, 1152, 1152, 2257,
	1380, 2160, 458, 479, 1530, 1225, 1534, 1535, 1500, 1537,
	1538, 2028, 786, 1340, 939, 1318, 1722, 458, 1148, 1148,
	1225, 478, 778, 3282, 735, 777, 2086, 1558, 3281, 681,
	475, 1359, 1225, 476, 678, 1348, 2003, 3259, 1193, 2117,
	1337, 477, 2692, 474, 1503, 1319, 1323, 939, 1465, 1787,
	778, 1336, 2086, 777, 3233, 1339, 3190, 1338, 1335, 3289,
	3184, 2311, 1581, 1361, 1356, 681, 978, 979, 980, 977,
	1587, 1587, 1668, 1193, 3136, 1193, 1193, 1989, 3075, 458,
	3074, 1530, 1530, 1946, 3070, 1225, 1654, 1655, 1667, 1399,
	1448, 1449, 1529, 1452, 1879, 1796, 1585, 1850, 1536, 1778,
	1796, 1467, 445, 3069, 1225, 830, 835, 836, 1698, 1796,
	3068, 2605, 1877, 3067, 1474, 3035, 1476, 1133, 1411, 1504,
	978, 979, 980, 977, 1504, 1504, 3234, 1211, 3191, 458,
	1530, 1225, 3036, 1709, 3276, 458, 458, 1713, 1714, 1605,
	2927, 3235, 2851, 1717, 1718, 2762, 3036, 2676, 1724, 1451,
	3076, 2607, 1970, 2987, 1720, 184, 3036, 2444, 184, 184,
	2801, 184, 1149, 2630, 2469, 1574, 2542, 2313, 1732, 1649,
	1650, 1735, 976, 941, 1738, 3036, 1477, 1740, 2176, 2175,
	1580, 1525, 3036, 1583, 1584, 3036, 2849, 3036, 1507, 1695,
	1696, 1681, 2233, 2225, 1540, 2187, 1542, 1543, 1544, 1466,
	1466, 1766, 1501, 2167, 2171, 1533, 1466, 1466, 1078, 1986,
	1841, 1773, 2928, 1673, 2117, 1675, 1826, 1588, 1706, 2677,
	1550, 1777, 1708, 2608, 1727, 1693, 1694, 1697, 993, 2086,
	1733, 1688, 1563, 1736, 1737, 1558, 1739, 2164, 1579, 1225,
	1785, 1711, 1712, 1825, 1566, 1567, 1188, 1524, 1190, 1555,
	1194, 1195, 1196, 1570, 1589, 1572, 1573, 1554, 1591, 1592,
	1565, 1576, 1577, 2162, 976, 976, 1590, 976, 1578, 1406,
	1407, 1571, 978, 979, 980, 977, 1970, 1320, 1150, 2157,
	1238, 1239, 1240, 1241, 1242, 1533, 1244, 1245, 1246, 1247,
	1022, 1779, 926, 1252, 1253, 832, 833, 834, 1808, 906,
	1767, 2150, 2148, 2146, 1812, 1813, 906, 1665, 1653, 2158,
	1656, 2144, 901, 899, 2634, 1672, 1818, 1674, 1824, 1822,
	1761, 1682, 1138, 2507, 1149, 3268, 1139, 1761, 1455, 1454,
	692, 1359, 1215, 1455, 1454, 2163, 1969, 3115, 1703, 480,
	3256, 1875, 2136, 1216, 2941, 1213, 1856, 1855, 2026, 1707,
	3034, 2158, 1844, 2957, 1835, 2956, 1834, 812, 1832, 1728,
	1833, 457, 457, 2793, 812, 1795, 1839, 465, 1730, 1324,
	2097, 2768, 2625, 2151, 2149, 2145, 1851, 2791, 1853, 2693,
	809, 3116, 2686, 2145, 1852, 1860, 1747, 809, 2942, 1857,
	1858, 1859, 1148, 2681, 1862, 1863, 1864, 1865, 1866, 1867,
	1868, 1869, 1561, 1562, 811, 1768, 1575, 2794, 1970, 479,
	2678, 811, 532, 1874, 913, 1939, 458, 1152, 976, 976,
	1770, 2792, 1776, 1771, 976, 1772, 976, 478, 976, 2599,
	1780, 458, 976, 458, 458, 458, 475, 1796, 1488, 476,
	1150, 1325, 906, 1481, 1212, 1967, 2414, 477, 2626, 812,
	2282, 2253, 1775, 2161, 697, 1974, 1193, 2107, 1129, 1128,
	1816, 915, 2717, 2194, 2130, 1971, 1979, 1807, 978, 979,
	980, 977, 809, 996, 997, 998, 999, 1000, 993, 2720,
	1193, 1731, 1414, 1809, 1821, 1414, 2471, 1399, 2203, 1263,
	1820, 1731, 2627, 2021, 980, 977, 811, 1478, 1479, 1480,
	1528, 3154, 1484, 1485, 1486, 1487, 1489, 1490, 1491, 1492,
	1493, 1494, 1495, 1496, 977, 2969, 898, 894, 895, 896,
	897, 2968, 2208, 2488, 2207, 2206, 2204, 2354, 2353, 2336,
	1904, 2334, 563, 573, 978, 979, 980, 977, 2911, 2912,
	2948, 564, 2027, 572, 565, 569, 568, 566, 567, 3297,
	3285, 3271, 1405, 2090, 2090, 1667, 2090, 1941, 3241, 2906,
	978, 979, 980, 977, 2760, 1870, 1872, 1873, 1402, 1404,
	1401, 2140, 1403, 2404, 445, 445, 1976, 1977, 1504, 2281,
	1504, 2402, 913, 3236, 1024, 3174, 1980, 1981, 1225, 458,
	2205, 978, 979, 980, 977, 1470, 570, 1023, 1504, 1504,
	2718, 458, 1890, 1948, 2400, 2389, 913, 453, 3145, 1471,
	3117, 1258, 3270, 1667, 1958, 2907, 2125, 2111, 2127, 3060,
	2761, 3123, 184, 1988, 3056, 1257, 3000, 2944, 571, 2403,
	2943, 1045, 2795, 978, 979, 980, 977, 2401, 2092, 1975,
	2096, 2094, 2196, 2103, 2759, 2104, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 1985, 2591, 2503, 1993,
	2399, 2388, 2767, 2108, 2109, 1992, 1810, 1811, 2169, 2483,
	2482, 1785, 2387, 1987, 978, 979, 980, 977, 1225, 1982,
	1225, 1983, 1225, 2132, 1984, 2386, 2385, 913, 2377, 2371,
	2006, 2007, 2370, 2012, 2369, 2368, 1750, 2131, 1046, 2124,
	1749, 1748, 978, 979, 980, 977, 2218, 2119, 1744, 2179,
	1710, 1264, 1743, 812, 1321, 1095, 1225, 2212, 2419, 2069,
	2577, 3206, 1904, 2209, 2210, 527, 2195, 2882, 529, 2122,
	2098, 3202, 2219, 528, 2213, 2214, 809, 1225, 2129, 3158,
	3103, 2915, 2216, 2217, 3079, 1223, 3064, 2211, 2221, 3059,
	1205, 1207, 3058, 3030, 3001, 2222, 2950, 2112, 2924, 2910,
	811, 2880, 2878, 2858, 905, 2535, 1223, 2855, 2220, 978,
	979, 980, 977, 2853, 911, 2120, 2409, 1263, 2123, 1504,
	2758, 2121, 2246, 2247, 1511, 2223, 913, 994, 995, 996,
	997, 998, 999, 1000, 993, 932, 2757, 2754, 978, 979,
	980, 977, 2032, 2183, 2034, 2035, 2036, 2037, 2038, 2039,
	2040, 2198, 2185, 2043, 2044, 2045, 2046, 2047, 2048, 2049,
	2050, 2051, 2052, 2053, 2534, 2055, 2056, 2057, 2058, 2059,
	2180, 2060, 2166, 2170, 2192, 1152, 2172, 1225, 2744, 2244,
	2279, 2177, 2687, 2683, 2674, 2673, 1530, 2295, 2600, 458,
	978, 979, 980, 977, 1829, 2309, 1881, 1882, 3175, 2568,
	2567, 2315, 2566, 2188, 2189, 984, 985, 986, 987, 988,
	989, 990, 982, 1885, 2202, 2514, 2481, 2324, 1359, 2458,
	2398, 2390, 913, 2380, 978, 979, 980, 977, 2378, 2374,
	2333, 2373, 2261, 2372, 623, 622, 3310, 913, 913, 913,
	1587, 1876, 2258, 913, 2291, 2344, 2345, 2346, 913, 1752,
	2350, 2351, 1746, 2352, 992, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 2248, 2245, 978, 979,
	980, 977, 1514, 1848, 2292, 1513, 2090, 1322, 1053, 1605,
	1049, 1837, 1048, 902, 689, 3119, 978, 979, 980, 977,
	2405, 2306, 3013, 2931, 2316, 1290, 1291, 167, 445, 159,
	135, 2788, 2787, 1530, 913, 1667, 1667, 1667, 1667, 2786,
	2262, 2778, 2228, 2229, 2743, 2732, 913, 1667, 2234, 2723,
	2090, 1295, 2722, 2711, 1299, 2327, 2710, 2277, 2318, 2331,
	2635, 2540, 2320, 2331, 1298, 2533, 1225, 2525, 2520, 2466,
	2338, 2259, 2256, 2147, 2308, 2143, 2142, 1836, 458, 458,
	8, 1283, 7, 1861, 2339, 2340, 2314, 1854, 1120, 2343,
	1849, 1284, 1285, 184, 2349, 1847, 164, 2326, 184, 2329,
	1843, 1842, 2335, 978, 979, 980, 977, 1533, 1840, 1831,
	1828, 2475, 1827, 2477, 1751, 1499, 2342, 1498, 2440, 1466,
	1497, 1466, 1469, 1823, 2498, 1468, 1459, 1237, 2502, 1235,
	3267, 1504, 3261, 167, 1225, 3248, 1504, 2509, 3245, 3243,
	3144, 2332, 2379, 1043, 3077, 3066, 2317, 3061, 1278, 2191,
	2427, 2982, 2967, 2963, 2321, 2322, 2866, 2323, 1189, 2864,
	2839, 2838, 2427, 2835, 2834, 2415, 2770, 2619, 2472, 2618,
	2410, 2519, 3135, 2476, 575, 117, 2428, 2429, 2430, 2431,
	117, 3107, 1231, 1289, 1280, 2441, 2443, 2442, 678, 2439,
	1136, 1503, 2406, 2539, 2337, 2303, 2497, 978, 979, 980,
	977, 2459, 164, 2302, 2413, 2301, 2268, 978, 979, 980,
	977, 1294, 1297, 1286, 2456, 2528, 2495, 2530, 2243, 117,
	2470, 913, 2501, 2156, 2474, 2506, 2473, 2888, 2106, 2580,
	2061, 2452, 464, 1968, 2511, 117, 2496, 1956, 1400, 2595,
	2494, 2489, 2493, 164, 458, 2491, 1715, 1523, 1522, 2500,
	1344, 1310, 1287, 978, 979, 980, 977, 1079, 913, 2887,
	1076, 2505, 913, 913, 913, 1075, 1074, 2517, 1073, 1072,
	1071, 1667, 1967, 1070, 2633, 1069, 812, 2518, 1439, 2841,
	2637, 1068, 1067, 812, 1066, 978, 979, 980, 977, 2360,
	2361, 2647, 2524, 2650, 1065, 2650, 2650, 1064, 2603, 2319,
	913, 2531, 2532, 2375, 2376, 978, 979, 980, 977, 2291,
	2529, 1063, 2654, 1062, 2669, 1061, 2570, 2702, 2741, 1060,
	1059, 1225, 1225, 1058, 2562, 2666, 2565, 2411, 1057, 1056,
	2569, 2572, 1052, 2668, 1051, 1050, 1047, 1904, 1040, 810,
	1039, 3133, 2538, 117, 978, 979, 980, 977, 2575, 1037,
	1223, 1223, 2670, 2671, 2620, 2621, 2622, 2631, 117, 1036,
	117, 2602, 2537, 2596, 1035, 3131, 2536, 458, 978, 979,
	980, 977, 2580, 2646, 1034, 1033, 2628, 2632, 2526, 2527,
	2655, 1032, 812, 1530, 1530, 1031, 2645, 2242, 978, 979,
	980, 977, 978, 979, 980, 977, 1030, 2636, 1029, 1028,
	1027, 2638, 2639, 2656, 2651, 2652, 1026, 1021, 1020, 943,
	2641, 2545, 2546, 978, 979, 980, 977, 2547, 2548, 2549,
	2550, 900, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558,
	2212, 3129, 1004, 2836, 1008, 1435, 2696, 2697, 1973, 2721,
	1953, 1432, 931, 3222, 812, 1434, 1431, 1433, 1437, 1438,
	1005, 1007, 1003, 1436, 1006, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 3220, 3180, 2241,
	3286, 2699, 2283, 2675, 2680, 2684, 458, 2685, 2679, 2653,
	2240, 2689, 2690, 3265, 2118, 1754, 2700, 942, 2436, 1527,
	2701, 2682, 2433, 2437, 2640, 978, 979, 980, 977, 2432,
	2438, 2704, 2082, 2083, 1545, 2691, 978, 979, 980, 977,
	2740, 2707, 2708, 2709, 2434, 3296, 2165, 2742, 2159, 2435,
	2703, 1130, 2716, 992, 991, 1001, 1002, 994, 995, 996,
	997, 998, 999, 1000, 993, 102, 992, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 2239, 2733,
	1552, 1553, 1547, 1548, 1549, 2735, 2734, 2609, 2610, 2238,
	2736, 2868, 2598, 2745, 2563, 2564, 1593, 2774, 2869, 2295,
	455, 2250, 56, 55, 978, 979, 980, 977, 2030, 2783,
	913, 2237, 2643, 2750, 2644, 978, 979, 980, 977, 2090,
	1667, 2798, 2846, 460, 1641, 1442, 1443, 1444, 1445, 1446,
	1447, 1440, 1441, 2573, 1272, 913, 2154, 978, 979, 980,
	977, 2236, 2747, 2184, 2647, 1081, 1705, 2867, 913, 2776,
	2777, 1304, 1705, 1705, 1942, 459, 1716, 2356, 913, 2749,
	461, 462, 937, 1225, 2357, 2358, 2359, 978, 979, 980,
	977, 1881, 1882, 3099, 2765, 2617, 117, 117, 810, 1530,
	2574, 2325, 2800, 913, 2775, 2263, 1963, 1504, 2235, 2751,
	1556, 1521, 1223, 3193, 2850, 2826, 1455, 1454, 1504, 3063,
	2833, 2863, 2785, 2796, 2865, 2672, 2797, 1093, 1094, 184,
	2232, 2070, 2871, 2066, 978, 979, 980, 977, 2870, 1091,
	1092, 1652, 913, 812, 1187, 2860, 2840, 1186, 2842, 2845,
	1089, 1090, 2780, 2706, 2848, 969, 978, 979, 980, 977,
	2116, 2799, 1087, 1088, 2896, 1774, 2852, 2802, 1141, 1009,
	2803, 2804, 2856, 2857, 2854, 1083, 2861, 3262, 2862, 2231,
	3166, 913, 1225, 1225, 2843, 3151, 812, 2859, 3149, 2230,
	913, 3110, 3089, 3088, 2349, 2224, 3086, 3078, 2934, 2995,
	2934, 2994, 2879, 2746, 2873, 978, 979, 980, 977, 2215,
	2730, 1223, 2922, 2920, 2883, 978, 979, 980, 977, 2427,
	2729, 978, 979, 980, 977, 1225, 2714, 2017, 1086, 2897,
	2949, 2899, 2713, 2925, 2193, 978, 979, 980, 977, 2468,
	1560, 3224, 3223, 458, 2504, 913, 913, 1955, 1830, 913,
	913, 928, 3223, 3224, 2922, 2965, 2731, 2926, 2427, 2460,
	978, 979, 980, 977, 2985, 2938, 2937, 2800, 681, 1156,
	2984, 64, 2979, 1410, 2, 1558, 2826, 2992, 1202, 2971,
	2972, 2833, 2099, 2980, 2981, 2996, 2997, 2947, 2951, 171,
	3, 682, 683, 684, 685, 1699, 681, 2918, 1229, 978,
	979, 980, 977, 1, 1512, 1085, 686, 2445, 2446, 3026,
	2705, 2989, 2448, 1792, 2416, 2771, 2772, 2773, 2064, 682,
	683, 684, 685, 3019, 681, 2988, 2945, 2946, 1943, 2594,
	1131, 2990, 728, 1461, 2078, 2081, 2082, 2083, 2079, 2783,
	2080, 2084, 1329, 829, 3038, 3046, 922, 1326, 921, 919,
	1412, 577, 1757, 1940, 3014, 2407, 3018, 2381, 3024, 2991,
	3192, 2918, 2918, 3230, 3143, 2918, 2918, 1236, 1957, 2073,
	1959, 1960, 1961, 3195, 1342, 561, 3080, 3037, 3005, 3147,
	2889, 3007, 2885, 1797, 3039, 974, 3042, 2490, 750, 3040,
	3041, 3049, 3047, 913, 614, 3048, 588, 1225, 1038, 3057,
	1312, 1305, 2543, 1978, 831, 587, 2078, 2081, 2082, 2083,
	2079, 2764, 2080, 2084, 3062, 991, 1001, 1002, 994, 995,
	996, 997, 998, 999, 1000, 993, 1223, 3071, 3072, 2273,
	2463, 3050, 1234, 828, 751, 1741, 3003, 464, 1273, 1277,
	2939, 2789, 2623, 2304, 3306, 3295, 3094, 913, 1025, 3277,
	3260, 3171, 3291, 3210, 3246, 3085, 3083, 3111, 2892, 2890,
	2891, 3239, 3167, 498, 117, 1678, 443, 793, 2983, 1753,
	499, 3106, 1972, 3159, 3065, 708, 1952, 913, 709, 711,
	3102, 2289, 3105, 2288, 1225, 1381, 3120, 3138, 3141, 983,
	1398, 2559, 2560, 3113, 1018, 2929, 2930, 537, 1819, 2270,
	3121, 2821, 2457, 3128, 3130, 3132, 3134, 63, 3118, 2918,
	3142, 3127, 62, 1223, 61, 3137, 60, 1723, 3150, 192,
	3152, 3153, 3148, 1225, 579, 3146, 1231, 191, 117, 2913,
	3140, 3197, 117, 3176, 559, 558, 557, 556, 1705, 555,
	2077, 3165, 2075, 117, 2074, 1662, 1661, 1721, 2347, 2341,
	2013, 2018, 1223, 117, 3173, 3199, 1594, 3177, 3124, 3125,
	2962, 2986, 2391, 2918, 3185, 1546, 3186, 3198, 3187, 2009,
	3188, 1611, 2363, 3189, 1608, 1607, 2355, 913, 2958, 2952,
	1638, 2293, 2781, 3203, 2933, 3094, 2805, 3204, 2806, 2812,
	1962, 854, 850, 2918, 852, 853, 851, 2201, 2197, 1990,
	2612, 1895, 3229, 1894, 3218, 1892, 1891, 3221, 3219, 3213,
	3215, 1103, 3025, 2748, 1902, 3232, 1900, 2698, 3237, 2694,
	913, 3225, 3226, 3227, 3228, 1765, 1509, 2249, 3238, 1663,
	1659, 1954, 3242, 2900, 3244, 1551, 701, 1950, 100, 149,
	50, 91, 90, 99, 147, 3199, 3258, 49, 176, 175,
	178, 3254, 177, 174, 913, 2133, 913, 3198, 2134, 173,
	3257, 1261, 3264, 172, 3266, 10, 2936, 675, 3269, 39,
	38, 34, 13, 12, 35, 22, 23, 3232, 913, 3273,
	21, 3275, 1333, 3280, 3263, 20, 3284, 3287, 872, 26,
	3290, 32, 31, 3208, 110, 109, 30, 108, 107, 3073,
	106, 105, 104, 29, 19, 3294, 43, 3301, 42, 41,
	9, 3305, 98, 3304, 96, 28, 97, 94, 95, 3313,
	92, 75, 74, 73, 88, 3301, 3318, 3317, 3316, 87,
	3305, 86, 85, 3319, 84, 83, 1365, 992, 991, 1001,
	1002, 994, 995, 996, 997, 998, 999, 1000, 993, 81,
	82, 749, 72, 71, 70, 69, 68, 93, 79, 3112,
	89, 80, 78, 77, 76, 67, 66, 65, 133, 132,
	1365, 2190, 1365, 130, 131, 3122, 129, 128, 127, 126,
	125, 124, 45, 46, 47, 48, 2300, 143, 142, 144,
	146, 148, 2307, 145, 1365, 992, 991, 1001, 1002, 994,
	995, 996, 997, 998, 999, 1000, 993, 140, 858, 138,
	141, 872, 848, 139, 137, 58, 18, 25, 4, 0,
	0, 0, 1666, 0, 0, 0, 0, 0, 880, 884,
	886, 888, 890, 891, 893, 0, 898, 894, 895, 896,
	897, 0, 875, 876, 877, 878, 856, 857, 881, 0,
	859, 0, 860, 861, 862, 863, 864, 865, 866, 867,
	868, 871, 873, 869, 870, 879, 2541, 0, 0, 0,
	0, 0, 3205, 883, 885, 887, 889, 892, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 117, 117, 0, 117, 992, 991, 1001, 1002,
	994, 995, 996, 997, 998, 999, 1000, 993, 0, 0,
	874, 0, 0, 0, 0, 0, 0, 0, 0, 992,
	991, 1001, 1002, 994, 995, 996, 997, 998, 999, 1000,
	993, 858, 0, 810, 0, 0, 0, 0, 0, 0,
	810, 0, 0, 0, 0, 2461, 2462, 0, 0, 117,
	0, 880, 884, 886, 888, 890, 891, 893, 0, 898,
	894, 895, 896, 897, 0, 875, 876, 877, 878, 856,
	857, 881, 0, 859, 0, 860, 861, 862, 863, 864,
	865, 866, 867, 868, 871, 873, 869, 870, 879, 1817,
	0, 0, 0, 0, 0, 0, 883, 885, 887, 889,
	892, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	337, 0, 0, 992, 991, 1001, 1002, 994, 995, 996,
	997, 998, 999, 1000, 993, 1009, 0, 280, 0, 0,
	307, 0, 0, 874, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1044,
	0, 0, 189, 0, 0, 563, 573, 0, 0, 257,
	190, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2601, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 570,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 384, 412, 274, 403, 0, 395, 252, 882,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 1705, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 2093,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 882, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2738, 0, 331, 408, 1666, 0, 0,
	437, 448, 0, 0, 0, 0, 117, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1439, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 872, 0, 509, 508,
	515, 505, 0, 0, 0, 0, 0, 234, 0, 0,
	512, 513, 0, 514, 518, 0, 0, 500, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 523, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 0, 0, 235, 236, 237,
	238, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 1435, 858, 0, 0, 0,
	0, 1432, 0, 117, 0, 1434, 1431, 1433, 1437, 1438,
	0, 0, 0, 1436, 0, 0, 880, 884, 886, 888,
	890, 891, 893, 0, 898, 894, 895, 896, 897, 0,
	875, 876, 877, 878, 856, 857, 881, 0, 859, 0,
	860, 861, 862, 863, 864, 865, 866, 867, 868, 871,
	873, 869, 870, 879, 0, 0, 0, 0, 0, 0,
	0, 883, 885, 887, 889, 892, 0, 0, 0, 0,
	2970, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 501, 503, 502, 0, 0, 874, 0,
	0, 0, 0, 507, 0, 0, 0, 0, 0, 1666,
	1666, 1666, 1666, 0, 0, 511, 0, 0, 0, 0,
	0, 1666, 526, 0, 0, 0, 0, 0, 0, 504,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1420, 1421, 1422, 1423, 1424, 1425,
	1426, 1427, 1428, 1429, 1430, 1442, 1443, 1444, 1445, 1446,
	1447, 1440, 1441, 0, 0, 0, 0, 117, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 117, 0, 0, 0, 0, 0, 0, 117,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 2199, 2200, 506, 510, 516, 0, 517, 519, 595,
	0, 520, 521, 522, 0, 0, 524, 525, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 551, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 117, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 190, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 535, 548,
	0, 552, 0, 0, 0, 1666, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	117, 0, 0, 0, 0, 545, 546, 882, 0, 0,
	0, 596, 0, 547, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 536, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 1463, 1462, 1464, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 117,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 117, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1666, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 667, 641, 666, 668, 669, 665,
	670, 671, 652, 554, 0, 601, 663, 662, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 117, 630, 607, 608, 609, 553, 610,
	604, 605, 606, 631, 599, 627, 628, 578, 602, 611,
	626, 612, 629, 632, 633, 672, 673, 618, 674, 615,
	634, 625, 624, 613, 600, 635, 636, 585, 580, 616,
	617, 603, 619, 620, 621, 581, 582, 583, 584, 0,
	0, 595, 405, 406, 407, 428, 391, 0, 446, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 551, 0, 0, 0, 280, 1505, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 586, 0,
	0, 366, 321, 0, 0, 0, 0, 646, 654, 0,
	0, 0, 0, 0, 0, 0, 1690, 0, 0, 544,
	0, 0, 576, 623, 622, 563, 573, 0, 0, 257,
	190, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 638, 0, 0, 0, 0, 0, 0,
	535, 548, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 546, 0,
	0, 0, 0, 596, 0, 547, 0, 0, 1691, 570,
	574, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 594, 598, 274, 660, 592, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 661, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 397, 0, 0, 644,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	593, 0, 357, 339, 657, 536, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 667, 641, 666, 668,
	669, 665, 670, 671, 652, 554, 0, 601, 663, 662,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 630, 607, 608, 609,
	553, 610, 604, 605, 606, 631, 599, 627, 628, 578,
	602, 611, 626, 612, 629, 632, 633, 672, 673, 618,
	674, 615, 634, 625, 624, 613, 600, 635, 636, 585,
	580, 616, 617, 603, 619, 620, 621, 581, 582, 583,
	584, 0, 167, 595, 405, 406, 407, 428, 391, 0,
	446, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 551, 0, 0, 0, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	1012, 0, 0, 366, 321, 0, 0, 0, 0, 646,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 544, 0, 0, 576, 623, 622, 563, 573, 0,
	0, 257, 190, 440, 0, 441, 564, 0, 572, 565,
	569, 568, 566, 567, 0, 638, 0, 0, 0, 0,
	0, 0, 535, 548, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	546, 0, 0, 0, 0, 596, 0, 547, 0, 0,
	591, 570, 574, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 571, 594, 598, 274, 660, 592, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 661, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 397, 0,
	0, 644, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 593, 0, 357, 339, 657, 536, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 642, 335, 0, 0, 0, 0,
	656, 637, 639, 640, 643, 647, 648, 649, 650, 651,
	653, 655, 659, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 597, 0, 0, 325, 326, 327,
	328, 645, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 667, 641,
	666, 668, 669, 665, 670, 671, 652, 554, 0, 601,
	663, 662, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 239, 267, 0,
	242, 0, 308, 136, 349, 285, 0, 0, 630, 607,
	608, 609, 553, 610, 604, 605, 606, 631, 599, 627,
	628, 578, 602, 611, 626, 612, 629, 632, 633, 672,
	673, 618, 674, 615, 634, 625, 624, 613, 600, 635,
	636, 585, 580, 616, 617, 603, 619, 620, 621, 581,
	582, 583, 584, 0, 0, 595, 405, 406, 407, 428,
	391, 0, 446, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 551, 0, 0,
	0, 280, 3274, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 439,
	0, 0, 586, 0, 0, 366, 321, 0, 0, 0,
	0, 646, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 0, 576, 623, 622, 563,
	573, 0, 0, 257, 190, 440, 0, 441, 564, 0,
	572, 565, 569, 568, 566, 567, 0, 638, 0, 0,
	0, 0, 0, 0, 535, 548, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 546, 0, 0, 0, 0, 596, 0, 547,
	0, 0, 591, 570, 574, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 571, 594, 598, 274, 660,
	592, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 661, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	397, 0, 0, 644, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 593, 0, 357, 339, 657, 536,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 642, 335, 0, 0,
	0, 0, 656, 637, 639, 640, 643, 647, 648, 649,
	650, 651, 653, 655, 659, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 597, 0, 0, 325,
	326, 327, 328, 645, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 239,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	630, 607, 608, 609, 553, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 581, 582, 583, 584, 0, 0, 595, 405, 406,
	407, 428, 391, 0, 446, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 551,
	0, 0, 0, 280, 1505, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 586, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 190, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 535, 548, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 546, 0, 0, 0, 0, 596,
	0, 547, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 536, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 642, 335,
	0, 0, 0, 0, 656, 637, 639, 640, 643, 647,
	648, 649, 650, 651, 653, 655, 659, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 597, 0,
	0, 325, 326, 327, 328, 645, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 667, 641, 666, 668, 669, 665, 670, 671,
	652, 554, 0, 601, 663, 662, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 239, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 630, 607, 608, 609, 553, 610, 604, 605,
	606, 631, 599, 627, 628, 578, 602, 611, 626, 612,
	629, 632, 633, 672, 673, 618, 674, 615, 634, 625,
	624, 613, 600, 635, 636, 585, 580, 616, 617, 603,
	619, 620, 621, 581, 582, 583, 584, 0, 0, 595,
	405, 406, 407, 428, 391, 0, 446, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 551, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 190, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 535, 548,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 546, 1256, 0, 0,
	0, 596, 0, 547, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 536, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 667, 641, 666, 668, 669, 665,
	670, 671, 652, 554, 0, 601, 663, 662, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 630, 607, 608, 609, 553, 610,
	604, 605, 606, 631, 599, 627, 628, 578, 602, 611,
	626, 612, 629, 632, 633, 672, 673, 618, 674, 615,
	634, 625, 624, 613, 600, 635, 636, 585, 580, 616,
	617, 603, 619, 620, 621, 581, 582, 583, 584, 0,
	0, 0, 405, 406, 407, 428, 391, 595, 446, 0,
	1838, 0, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 0, 0, 0, 551,
	0, 0, 0, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 586, 0, 0, 366, 321, 0,
	0, 0, 0, 646, 654, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 544, 0, 0, 576, 623,
	622, 563, 573, 0, 0, 257, 190, 440, 0, 441,
	564, 0, 572, 565, 569, 568, 566, 567, 0, 638,
	0, 0, 0, 0, 0, 0, 535, 548, 0, 552,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 545, 546, 0, 0, 0, 0, 596,
	0, 547, 0, 0, 591, 570, 574, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 571, 594, 598,
	274, 660, 592, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 661, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 589, 0,
	0, 0, 397, 0, 0, 644, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 593, 0, 357, 339,
	657, 536, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 642, 335,
	0, 0, 0, 0, 656, 637, 639, 640, 643, 647,
	648, 649, 650, 651, 653, 655, 659, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 658, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 597, 0,
	0, 325, 326, 327, 328, 645, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 667, 641, 666, 668, 669, 665, 670, 671,
	652, 554, 0, 601, 663, 662, 664, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 239, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 630, 607, 608, 609, 553, 610, 604, 605,
	606, 631, 599, 627, 628, 578, 602, 611, 626, 612,
	629, 632, 633, 672, 673, 618, 674, 615, 634, 625,
	624, 613, 600, 635, 636, 585, 580, 616, 617, 603,
	619, 620, 621, 581, 582, 583, 584, 0, 0, 595,
	405, 406, 407, 428, 391, 0, 446, 0, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 551, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 586, 0, 0, 366,
	321, 0, 0, 0, 0, 646, 654, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 544, 0, 0,
	576, 623, 622, 563, 573, 0, 0, 257, 190, 440,
	0, 441, 564, 0, 572, 565, 569, 568, 566, 567,
	0, 638, 0, 0, 0, 0, 0, 0, 535, 548,
	0, 552, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 545, 546, 0, 0, 0,
	0, 596, 0, 547, 0, 0, 591, 570, 574, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 571,
	594, 598, 274, 660, 592, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	661, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	589, 0, 0, 0, 397, 0, 0, 644, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 593, 0,
	357, 339, 657, 536, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	642, 335, 0, 0, 0, 0, 656, 637, 639, 640,
	643, 647, 648, 649, 650, 651, 653, 655, 659, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	658, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	597, 0, 0, 325, 326, 327, 328, 645, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 667, 641, 666, 668, 669, 665,
	670, 671, 652, 554, 0, 601, 663, 662, 664, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 630, 607, 608, 609, 553, 610,
	604, 605, 606, 631, 599, 627, 628, 578, 602, 611,
	626, 612, 629, 632, 633, 672, 673, 618, 674, 615,
	634, 625, 624, 613, 600, 635, 636, 585, 580, 616,
	617, 603, 619, 620, 621, 581, 582, 583, 584, 0,
	0, 595, 405, 406, 407, 428, 391, 0, 446, 0,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 1382,
	0, 450, 442, 551, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 586, 0,
	0, 366, 321, 0, 0, 0, 0, 646, 654, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 544,
	0, 0, 576, 623, 622, 563, 573, 0, 0, 257,
	190, 440, 0, 441, 564, 0, 572, 565, 569, 568,
	566, 567, 0, 638, 0, 0, 0, 0, 0, 0,
	0, 548, 0, 552, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 545, 546, 0,
	0, 0, 0, 596, 0, 547, 0, 0, 591, 570,
	574, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 571, 594, 598, 274, 660, 592, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 661, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 589, 0, 0, 0, 397, 0, 0, 644,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	593, 0, 357, 339, 657, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	1383, 1384, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 642, 335, 0, 0, 0, 0, 656, 637,
	639, 640, 643, 647, 648, 649, 650, 651, 653, 655,
	659, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 658, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 597, 0, 0, 325, 326, 327, 328, 645,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 667, 641, 666, 668,
	669, 665, 670, 671, 652, 554, 0, 601, 663, 662,
	664, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 630, 607, 608, 609,
	553, 610, 604, 605, 606, 631, 599, 627, 628, 578,
	602, 611, 626, 612, 629, 632, 633, 672, 673, 618,
	674, 615, 634, 625, 624, 613, 600, 635, 636, 585,
	580, 616, 617, 603, 619, 620, 621, 581, 582, 583,
	584, 0, 0, 595, 405, 406, 407, 428, 391, 0,
	446, 0, 337, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 551, 0, 0, 0, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 438, 0, 439, 0, 0,
	586, 0, 0, 366, 321, 0, 0, 0, 0, 646,
	654, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 576, 623, 622, 563, 573, 0,
	0, 257, 190, 440, 0, 441, 564, 0, 572, 565,
	569, 568, 566, 567, 0, 638, 0, 0, 0, 0,
	0, 0, 535, 548, 0, 552, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 545,
	546, 0, 0, 0, 0, 596, 0, 547, 0, 0,
	591, 570, 574, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 571, 594, 598, 274, 660, 592, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 661, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 589, 0, 0, 0, 397, 0,
	0, 644, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 593, 0, 357, 339, 657, 536, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 642, 335, 0, 0, 0, 0,
	656, 637, 639, 640, 643, 647, 648, 649, 650, 651,
	653, 655, 659, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 658, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 597, 0, 0, 325, 326, 327,
	328, 645, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 667, 641,
	666, 668, 669, 665, 670, 671, 652, 554, 0, 601,
	663, 662, 664, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 239, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 630, 607,
	608, 609, 553, 610, 604, 605, 606, 631, 599, 627,
	628, 578, 602, 611, 626, 612, 629, 632, 633, 672,
	673, 618, 674, 615, 634, 625, 624, 613, 600, 635,
	636, 585, 580, 616, 617, 603, 619, 620, 621, 581,
	582, 583, 584, 0, 0, 595, 405, 406, 407, 428,
	391, 0, 446, 0, 337, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 551, 0, 0,
	0, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 438, 0, 439,
	0, 0, 586, 0, 0, 366, 321, 0, 0, 0,
	0, 646, 654, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 544, 0, 0, 576, 623, 622, 563,
	573, 0, 0, 257, 190, 440, 0, 441, 564, 0,
	572, 565, 569, 568, 566, 567, 0, 638, 0, 0,
	0, 0, 0, 0, 0, 548, 0, 552, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 545, 546, 0, 0, 0, 0, 596, 0, 547,
	0, 0, 591, 570, 574, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 571, 594, 598, 274, 660,
	592, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 661, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 589, 0, 0, 0,
	397, 0, 0, 644, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 593, 0, 357, 339, 657, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 642, 335, 0, 0,
	0, 0, 656, 637, 639, 640, 643, 647, 648, 649,
	650, 651, 653, 655, 659, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 658, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 597, 0, 0, 325,
	326, 327, 328, 645, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	667, 641, 666, 668, 669, 665, 670, 671, 652, 554,
	0, 601, 663, 662, 664, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 239,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	630, 607, 608, 609, 553, 610, 604, 605, 606, 631,
	599, 627, 628, 578, 602, 611, 626, 612, 629, 632,
	633, 672, 673, 618, 674, 615, 634, 625, 624, 613,
	600, 635, 636, 585, 580, 616, 617, 603, 619, 620,
	621, 581, 582, 583, 584, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 167, 53, 159, 135, 0,
	0, 0, 0, 0, 0, 337, 0, 450, 442, 0,
	0, 0, 0, 160, 0, 0, 0, 0, 0, 0,
	152, 0, 280, 0, 161, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 438, 0,
	439, 0, 0, 115, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 103, 0,
	0, 0, 0, 0, 164, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 257, 190, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 181, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	134, 158, 165, 0, 101, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 182, 0, 0, 0, 370, 0,
	0, 306, 157, 151, 150, 413, 0, 357, 339, 59,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	153, 154, 155, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 392, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 185, 0, 0, 437, 193, 0, 0, 0,
	156, 0, 194, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 113,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 54,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	239, 267, 0, 242, 0, 308, 136, 349, 285, 0,
	0, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 0,
	0, 0, 235, 236, 237, 238, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 195, 40, 183, 186, 188,
	187, 0, 51, 5, 0, 0, 0, 118, 196, 442,
	167, 53, 159, 135, 0, 0, 0, 0, 0, 0,
	337, 468, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 473,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 257,
	190, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 472,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 469,
	471, 262, 420, 350, 481, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 54, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 136, 349, 285, 0, 0, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 337, 0, 0, 235, 236, 237,
	238, 0, 872, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 0,
	0, 0, 0, 257, 190, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 1926, 1928, 1929, 1930, 1931, 1932, 1933, 0,
	1938, 1934, 1935, 1936, 1937, 0, 1921, 1922, 1923, 1924,
	856, 1905, 1927, 0, 1906, 333, 1907, 1908, 1909, 1910,
	1911, 1912, 1913, 1914, 1915, 1918, 1919, 1916, 1917, 1925,
	345, 311, 346, 296, 323, 322, 324, 883, 885, 887,
	889, 892, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 1920, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 239,
	267, 0, 242, 882, 308, 0, 349, 285, 0, 0,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 337, 0,
	0, 235, 236, 237, 238, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 257, 190, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 2001, 2004, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 2005, 397, 0, 0, 0, 2000, 0,
	1999, 370, 1997, 2002, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 2003, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 0, 0, 0, 235, 236, 237, 238, 337,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 0,
	0, 1725, 0, 0, 0, 0, 280, 0, 0, 307,
	0, 450, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 1726, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 978, 979, 980, 977, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 337, 0, 0, 235, 236, 237, 238,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 792, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 799, 800, 0, 0,
	0, 0, 257, 190, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 803, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	787, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 778,
	395, 252, 777, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 790, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 791, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 794, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 801, 788, 797, 789, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 798, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 239, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 337, 0, 0,
	235, 236, 237, 238, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 257, 190, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 2020, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2019, 397, 0, 0, 0, 2024, 2022, 0,
	370, 0, 2023, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 239, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 0, 0, 0, 235, 236, 237, 238, 167, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 337, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 0, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 438, 0, 439, 0, 0, 115, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 164, 1769, 0,
	189, 0, 0, 0, 0, 0, 0, 257, 190, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 136,
	349, 285, 0, 0, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 0, 0, 0, 235, 236, 237, 238, 167,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 337,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 0, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 115, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 164, 1760,
	0, 189, 0, 0, 0, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	136, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 0, 0, 0, 235, 236, 237, 238,
	167, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	337, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 0, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 438, 0, 439, 0, 0, 115, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 1664,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 257,
	190, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 136, 349, 285, 0, 0, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 337, 0, 0, 235, 236, 237,
	238, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 799, 800, 0,
	0, 0, 0, 257, 190, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 803, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	778, 395, 252, 777, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 801, 1683, 797, 1684, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 798, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 239,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 337, 0,
	0, 235, 236, 237, 238, 0, 0, 2420, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 257, 190, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 2423, 0, 0, 2422, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 337, 0, 0, 235, 236, 237, 238, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	1228, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 1226, 0, 0,
	0, 257, 190, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	1224, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 377, 0, 239, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 337, 0, 0, 235,
	236, 237, 238, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 1222, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 1226, 0, 0, 0, 257, 190, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1224, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 239, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	337, 0, 0, 235, 236, 237, 238, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	3194, 0, 189, 623, 0, 0, 0, 0, 0, 257,
	190, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 337, 0, 0, 235, 236, 237,
	238, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 1226,
	0, 0, 0, 257, 190, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1224, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 351, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 239,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 337, 0,
	0, 235, 236, 237, 238, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 1226, 0, 0, 0, 257, 190, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2923, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 0, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 0, 0, 0, 235, 236, 237, 238, 337,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 0,
	0, 2089, 0, 0, 0, 0, 280, 0, 0, 307,
	0, 450, 442, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 2091, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 337, 0, 0, 235, 236, 237, 238,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 2110, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 1226, 0,
	0, 0, 257, 190, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 239, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 337, 0, 0,
	235, 236, 237, 238, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 3283, 0, 189,
	0, 0, 0, 0, 0, 0, 257, 190, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 239, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 337, 0, 0, 235, 236, 237, 238, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 623, 0, 0, 0, 0, 0,
	257, 190, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 239, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 337, 0, 0, 235, 236,
	237, 238, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 3209, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 257, 190, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	239, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 337,
	0, 0, 235, 236, 237, 238, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 3139,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 337, 0, 0, 235, 236, 237, 238,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 2919, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 257, 190, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 239, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 337, 0, 0,
	235, 236, 237, 238, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 2784, 0, 0, 0, 257, 190, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 239, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 337, 0, 0, 235, 236, 237, 238, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	257, 190, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 2993, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 239, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 337, 0, 0, 235, 236,
	237, 238, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 257, 190, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2634, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	239, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 337,
	0, 0, 235, 236, 237, 238, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1664, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 337, 0, 0, 235, 236, 237, 238,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 2296, 0,
	0, 0, 257, 190, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 239, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 337, 0, 0,
	235, 236, 237, 238, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 257, 190, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 2715, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 239, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 337, 0, 0, 235, 236, 237, 238, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 2579, 0, 0, 0,
	257, 190, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 239, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 337, 0, 0, 235, 236,
	237, 238, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 257, 190, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 2508, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	239, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 337,
	0, 0, 235, 236, 237, 238, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 1226, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 337, 0, 0, 235, 236, 237, 238,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 2091, 0,
	0, 0, 257, 190, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	387, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 239, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 337, 0, 0,
	235, 236, 237, 238, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 257, 190, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1784, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 387, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 239, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 337, 0, 0, 235, 236, 237, 238, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	257, 190, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	2128, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 272, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 0, 0, 0,
	0, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 377, 0, 239, 267, 0, 242,
	0, 308, 0, 349, 285, 0, 0, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 337, 0, 0, 235, 236,
	237, 238, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	2126, 0, 0, 0, 257, 190, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	239, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 0,
	1964, 0, 235, 236, 237, 238, 337, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 0, 0, 0, 0,
	0, 0, 0, 280, 0, 0, 307, 0, 450, 442,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 257, 190, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	351, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 0, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 239, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	337, 0, 0, 235, 236, 237, 238, 0, 1651, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 257,
	190, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 337, 0, 0, 235, 236, 237,
	238, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 280, 0, 0, 307, 0, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 438, 0, 439,
	0, 0, 0, 0, 0, 366, 321, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 189, 0, 0, 1226,
	0, 0, 0, 257, 190, 440, 0, 441, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 260, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 248,
	371, 387, 258, 362, 400, 263, 369, 253, 336, 359,
	0, 0, 250, 385, 368, 318, 299, 300, 249, 0,
	354, 278, 291, 275, 334, 0, 384, 412, 274, 403,
	0, 395, 252, 0, 394, 333, 381, 386, 319, 313,
	251, 383, 317, 312, 303, 282, 427, 304, 305, 295,
	345, 311, 346, 296, 323, 322, 324, 0, 0, 0,
	0, 0, 423, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	397, 0, 0, 0, 0, 0, 0, 370, 0, 0,
	306, 0, 0, 0, 413, 0, 357, 339, 0, 0,
	0, 355, 309, 382, 347, 388, 372, 396, 1564, 348,
	243, 373, 277, 320, 254, 256, 272, 279, 281, 283,
	284, 329, 330, 342, 361, 374, 375, 376, 276, 264,
	356, 265, 293, 266, 244, 269, 268, 270, 363, 271,
	246, 343, 380, 0, 289, 352, 316, 247, 315, 344,
	379, 378, 255, 404, 410, 411, 0, 0, 416, 0,
	0, 0, 424, 429, 430, 431, 433, 434, 435, 436,
	0, 0, 0, 0, 418, 0, 0, 0, 0, 0,
	0, 409, 287, 240, 241, 449, 273, 335, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 331,
	408, 0, 0, 0, 437, 448, 0, 0, 0, 0,
	0, 447, 341, 0, 360, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 367, 390, 402,
	419, 422, 0, 0, 0, 0, 245, 421, 0, 0,
	0, 0, 0, 0, 0, 0, 393, 0, 0, 0,
	401, 0, 0, 0, 0, 0, 417, 0, 0, 325,
	326, 327, 328, 290, 0, 262, 420, 350, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 414, 415, 286, 292, 432,
	294, 261, 340, 288, 399, 301, 0, 425, 0, 426,
	0, 0, 0, 0, 332, 297, 298, 364, 302, 310,
	353, 398, 338, 358, 259, 389, 365, 314, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 234, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 377, 0, 239,
	267, 0, 242, 0, 308, 0, 349, 285, 0, 0,
	197, 198, 199, 200, 201, 202, 203, 204, 205, 206,
	207, 208, 209, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 0, 220, 221, 222, 223, 224, 225,
	226, 227, 228, 229, 230, 231, 232, 233, 337, 0,
	0, 235, 236, 237, 238, 0, 0, 0, 405, 406,
	407, 428, 391, 0, 446, 280, 0, 0, 307, 0,
	0, 0, 0, 0, 0, 0, 0, 450, 442, 0,
	0, 438, 0, 439, 0, 0, 0, 0, 0, 366,
	321, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	189, 0, 0, 0, 0, 0, 0, 257, 190, 440,
	0, 441, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 260, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 248, 371, 387, 258, 362, 400, 263,
	369, 253, 336, 359, 0, 0, 250, 385, 368, 318,
	299, 300, 249, 0, 354, 278, 291, 275, 334, 0,
	384, 412, 274, 403, 0, 395, 252, 0, 394, 333,
	381, 386, 319, 313, 251, 383, 317, 312, 303, 282,
	427, 304, 305, 295, 345, 311, 346, 296, 323, 322,
	324, 0, 0, 0, 0, 0, 423, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 397, 0, 0, 1251, 0, 0,
	0, 370, 0, 0, 306, 0, 0, 0, 413, 0,
	357, 339, 0, 0, 0, 355, 309, 382, 347, 388,
	372, 396, 351, 348, 243, 373, 277, 320, 254, 256,
	272, 279, 281, 283, 284, 329, 330, 342, 361, 374,
	375, 376, 276, 264, 356, 265, 293, 266, 244, 269,
	268, 270, 363, 271, 246, 343, 380, 0, 289, 352,
	316, 247, 315, 344, 379, 378, 255, 404, 410, 411,
	0, 0, 416, 0, 0, 0, 424, 429, 430, 431,
	433, 434, 435, 436, 0, 0, 0, 0, 418, 0,
	0, 0, 0, 0, 0, 409, 287, 240, 241, 449,
	273, 335, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 331, 408, 0, 0, 0, 437, 448,
	0, 0, 0, 0, 0, 447, 341, 0, 360, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 367, 390, 402, 419, 422, 0, 0, 0, 0,
	245, 421, 0, 0, 0, 0, 0, 0, 0, 0,
	393, 0, 0, 0, 401, 0, 0, 0, 0, 0,
	417, 0, 0, 325, 326, 327, 328, 290, 0, 262,
	420, 350, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 414,
	415, 286, 292, 432, 294, 261, 340, 288, 399, 301,
	0, 425, 0, 426, 0, 0, 0, 0, 332, 297,
	298, 364, 302, 310, 353, 398, 338, 358, 259, 389,
	365, 314, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 234, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 377, 0, 239, 267, 0, 242, 0, 308, 0,
	349, 285, 0, 0, 197, 198, 199, 200, 201, 202,
	203, 204, 205, 206, 207, 208, 209, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 0, 220, 221,
	222, 223, 224, 225, 226, 227, 228, 229, 230, 231,
	232, 233, 337, 0, 0, 235, 236, 237, 238, 0,
	0, 0, 405, 406, 407, 428, 391, 0, 446, 280,
	0, 0, 307, 0, 0, 0, 0, 0, 0, 0,
	0, 450, 442, 0, 0, 438, 0, 439, 0, 0,
	0, 0, 0, 366, 321, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 189, 0, 0, 0, 0, 0,
	0, 257, 190, 440, 0, 441, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 260, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 248, 371, 387,
	258, 362, 400, 263, 369, 253, 336, 359, 0, 0,
	250, 385, 368, 318, 299, 300, 249, 0, 354, 278,
	291, 275, 334, 0, 384, 412, 274, 403, 0, 395,
	252, 0, 394, 333, 381, 386, 319, 313, 251, 383,
	317, 312, 303, 282, 427, 304, 305, 295, 345, 311,
	346, 296, 323, 322, 324, 0, 0, 0, 0, 0,
	423, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 397, 0,
	0, 0, 0, 0, 0, 370, 0, 0, 306, 0,
	0, 0, 413, 0, 357, 339, 0, 0, 0, 355,
	309, 382, 347, 388, 372, 396, 351, 348, 243, 373,
	277, 320, 254, 256, 272, 279, 281, 283, 284, 329,
	330, 342, 361, 374, 375, 376, 276, 264, 356, 265,
	293, 266, 244, 269, 268, 270, 363, 271, 246, 343,
	380, 0, 289, 352, 316, 247, 315, 344, 379, 378,
	255, 404, 410, 411, 0, 0, 416, 0, 0, 0,
	424, 429, 430, 431, 433, 434, 435, 436, 0, 0,
	0, 0, 418, 0, 0, 0, 0, 0, 0, 409,
	287, 240, 241, 449, 273, 335, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 331, 408, 0,
	0, 0, 437, 448, 0, 0, 0, 0, 0, 447,
	341, 0, 360, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 367, 390, 402, 419, 422,
	0, 0, 0, 0, 245, 421, 0, 0, 0, 0,
	0, 0, 0, 0, 393, 0, 0, 0, 401, 0,
	0, 0, 0, 0, 417, 0, 0, 325, 326, 327,
	328, 290, 0, 262, 420, 350, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 414, 415, 286, 292, 432, 294, 261,
	340, 288, 399, 301, 0, 425, 0, 426, 0, 0,
	0, 0, 332, 297, 298, 364, 302, 310, 353, 398,
	338, 358, 259, 389, 365, 314, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 234,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 733, 0, 0, 377, 0, 239, 267, 0,
	242, 0, 308, 0, 349, 285, 0, 0, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 0, 220, 221, 222, 223, 224, 225, 226, 227,
	228, 229, 230, 231, 232, 233, 337, 0, 0, 235,
	236, 237, 238, 0, 0, 0, 405, 406, 407, 428,
	391, 0, 446, 280, 0, 0, 307, 0, 0, 0,
	0, 0, 0, 0, 0, 450, 442, 0, 0, 438,
	0, 439, 0, 0, 0, 0, 0, 366, 321, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 189, 0,
	0, 0, 0, 0, 0, 257, 190, 440, 0, 441,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 260,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 248, 371, 387, 258, 362, 400, 263, 369, 253,
	336, 359, 0, 0, 250, 385, 368, 318, 299, 300,
	249, 0, 354, 278, 291, 275, 334, 0, 384, 412,
	274, 403, 0, 395, 252, 0, 394, 333, 381, 386,
	319, 313, 251, 383, 317, 312, 303, 282, 427, 304,
	305, 295, 345, 311, 346, 296, 323, 322, 324, 0,
	0, 0, 0, 0, 423, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 397, 0, 0, 0, 0, 0, 0, 370,
	0, 0, 306, 0, 0, 0, 413, 0, 357, 339,
	0, 0, 0, 355, 309, 382, 347, 388, 372, 396,
	489, 348, 243, 373, 277, 320, 254, 256, 272, 279,
	281, 283, 284, 329, 330, 342, 361, 374, 375, 376,
	276, 264, 356, 265, 293, 266, 244, 269, 268, 270,
	363, 271, 246, 343, 380, 0, 289, 352, 316, 247,
	315, 344, 379, 378, 255, 404, 410, 411, 0, 0,
	416, 0, 0, 0, 424, 429, 430, 431, 433, 434,
	435, 436, 0, 0, 0, 0, 418, 0, 0, 0,
	0, 0, 0, 409, 287, 240, 241, 449, 273, 335,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 331, 408, 0, 0, 0, 437, 448, 0, 0,
	0, 0, 0, 447, 341, 0, 360, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 367,
	390, 402, 419, 422, 0, 0, 0, 0, 245, 421,
	0, 0, 0, 0, 0, 0, 490, 0, 393, 0,
	0, 0, 401, 0, 0, 0, 0, 0, 417, 0,
	0, 325, 326, 327, 328, 290, 0, 262, 420, 350,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 414, 415, 286,
	292, 432, 294, 261, 340, 288, 399, 301, 0, 425,
	0, 426, 0, 0, 0, 0, 332, 297, 298, 364,
	302, 310, 353, 398, 338, 358, 259, 389, 365, 314,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 234, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 377,
	0, 239, 267, 0, 242, 0, 308, 0, 349, 285,
	0, 0, 197, 198, 199, 200, 201, 202, 203, 204,
	205, 206, 207, 208, 209, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 0, 220, 221, 222, 223,
	224, 225, 226, 227, 228, 229, 230, 231, 232, 233,
	337, 0, 0, 235, 236, 237, 238, 0, 0, 0,
	405, 406, 407, 428, 391, 0, 446, 280, 0, 0,
	307, 0, 0, 0, 0, 0, 0, 0, 0, 450,
	442, 0, 0, 438, 0, 439, 0, 0, 0, 0,
	0, 366, 321, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 189, 0, 0, 0, 0, 0, 0, 257,
	190, 440, 0, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 260, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 248, 371, 387, 258, 362,
	400, 263, 369, 253, 336, 359, 0, 0, 250, 385,
	368, 318, 299, 300, 249, 0, 354, 278, 291, 275,
	334, 0, 384, 412, 274, 403, 0, 395, 252, 0,
	394, 333, 381, 386, 319, 313, 251, 383, 317, 312,
	303, 282, 427, 304, 305, 295, 345, 311, 346, 296,
	323, 322, 324, 0, 0, 0, 0, 0, 423, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 466, 0, 0, 397, 0, 0, 0,
	0, 0, 0, 370, 0, 0, 306, 0, 0, 0,
	413, 0, 357, 339, 0, 0, 0, 355, 309, 382,
	347, 388, 372, 396, 351, 348, 243, 373, 277, 320,
	254, 256, 272, 279, 281, 283, 284, 329, 330, 342,
	361, 374, 375, 376, 276, 264, 356, 265, 293, 266,
	244, 269, 268, 270, 363, 271, 246, 343, 380, 0,
	289, 352, 316, 247, 315, 344, 379, 378, 255, 404,
	410, 411, 0, 0, 416, 0, 0, 0, 424, 429,
	430, 431, 433, 434, 435, 436, 0, 0, 0, 0,
	418, 0, 0, 0, 0, 0, 0, 409, 287, 240,
	241, 449, 273, 335, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 331, 408, 0, 0, 0,
	437, 448, 0, 0, 0, 0, 0, 447, 341, 0,
	360, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 367, 390, 402, 419, 422, 0, 0,
	0, 0, 245, 421, 0, 0, 0, 0, 0, 0,
	0, 0, 393, 0, 0, 0, 401, 0, 0, 0,
	0, 0, 417, 0, 0, 325, 326, 327, 328, 290,
	0, 262, 420, 350, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 414, 415, 286, 292, 432, 294, 261, 340, 288,
	399, 301, 0, 425, 0, 426, 0, 0, 0, 0,
	332, 297, 298, 364, 302, 310, 353, 398, 338, 358,
	259, 389, 365, 314, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 234, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 377, 0, 239, 267, 0, 242, 0,
	308, 0, 349, 285, 0, 0, 197, 198, 199, 200,
	201, 202, 203, 204, 205, 206, 207, 208, 209, 210,
	211, 212, 213, 214, 215, 216, 217, 218, 219, 0,
	220, 221, 222, 223, 224, 225, 226, 227, 228, 229,
	230, 231, 232, 233, 0, 337, 0, 235, 236, 237,
	238, 0, 0, 0, 405, 406, 407, 428, 391, 0,
	446, 456, 280, 0, 0, 307, 0, 0, 0, 0,
	0, 0, 0, 450, 442, 0, 0, 0, 438, 0,
	439, 0, 0, 0, 0, 0, 366, 321, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 189, 0, 0,
	0, 0, 0, 0, 257, 190, 440, 0, 441, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 260, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	248, 371, 387, 258, 362, 400, 263, 369, 253, 336,
	359, 0, 0, 250, 385, 368, 318, 299, 300, 249,
	0, 354, 278, 291, 275, 334, 0, 384, 412, 274,
	403, 0, 395, 252, 0, 394, 333, 381, 386, 319,
	313, 251, 383, 317, 312, 303, 282, 427, 304, 305,
	295, 345, 311, 346, 296, 323, 322, 324, 0, 0,
	0, 0, 0, 423, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 397, 0, 0, 0, 0, 0, 0, 370, 0,
	0, 306, 0, 0, 0, 413, 0, 357, 339, 0,
	0, 0, 355, 309, 382, 347, 388, 372, 396, 351,
	348, 243, 373, 277, 320, 254, 256, 272, 279, 281,
	283, 284, 329, 330, 342, 361, 374, 375, 376, 276,
	264, 356, 265, 293, 266, 244, 269, 268, 270, 363,
	271, 246, 343, 380, 0, 289, 352, 316, 247, 315,
	344, 379, 378, 255, 404, 410, 411, 0, 0, 416,
	0, 0, 0, 424, 429, 430, 431, 433, 434, 435,
	436, 0, 0, 0, 0, 418, 0, 0, 0, 0,
	0, 0, 409, 287, 240, 241, 449, 273, 335, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	331, 408, 0, 0, 0, 437, 448, 0, 0, 0,
	0, 0, 447, 341, 0, 360, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 367, 390,
	402, 419, 422, 0, 0, 0, 0, 245, 421, 0,
	0, 0, 0, 0, 0, 0, 0, 393, 0, 0,
	0, 401, 0, 0, 0, 0, 0, 417, 0, 0,
	325, 326, 327, 328, 290, 0, 262, 420, 350, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 414, 415, 286, 292,
	432, 294, 261, 340, 288, 399, 301, 0, 425, 0,
	426, 0, 0, 0, 0, 332, 297, 298, 364, 302,
	310, 353, 398, 338, 358, 259, 389, 365, 314, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 234, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 377, 0,
	239, 267, 0, 242, 0, 308, 0, 349, 285, 0,
	0, 197, 198, 199, 200, 201, 202, 203, 204, 205,
	206, 207, 208, 209, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 0, 220, 221, 222, 223, 224,
	225, 226, 227, 228, 229, 230, 231, 232, 233, 337,
	0, 0, 235, 236, 237, 238, 0, 0, 0, 405,
	406, 407, 428, 391, 0, 446, 280, 0, 0, 307,
	0, 0, 0, 0, 0, 0, 0, 0, 450, 442,
	0, 0, 438, 0, 439, 0, 0, 0, 0, 0,
	366, 321, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 189, 0, 0, 0, 0, 0, 0, 257, 190,
	440, 0, 441, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 260, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 248, 371, 387, 258, 362, 400,
	263, 369, 253, 336, 359, 0, 0, 250, 385, 368,
	318, 299, 300, 249, 0, 354, 278, 291, 275, 334,
	0, 384, 412, 274, 403, 0, 395, 252, 0, 394,
	333, 381, 386, 319, 313, 251, 383, 317, 312, 303,
	282, 427, 304, 305, 295, 345, 311, 346, 296, 323,
	322, 324, 0, 0, 0, 0, 0, 423, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 397, 0, 0, 0, 0,
	0, 0, 370, 0, 0, 306, 0, 0, 0, 413,
	0, 357, 339, 0, 0, 0, 355, 309, 382, 347,
	388, 372, 396, 351, 348, 243, 373, 277, 320, 254,
	256, 272, 279, 281, 283, 284, 329, 330, 342, 361,
	374, 375, 376, 276, 264, 356, 265, 293, 266, 244,
	269, 268, 270, 363, 271, 246, 343, 380, 0, 289,
	352, 316, 247, 315, 344, 379, 378, 255, 404, 410,
	411, 0, 0, 416, 0, 0, 0, 424, 429, 430,
	431, 433, 434, 435, 436, 0, 0, 0, 0, 418,
	0, 0, 0, 0, 0, 0, 409, 287, 240, 241,
	449, 273, 335, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 331, 408, 0, 0, 0, 437,
	448, 0, 0, 0, 0, 0, 447, 341, 0, 360,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 367, 390, 402, 419, 422, 0, 0, 0,
	0, 245, 421, 0, 0, 0, 0, 0, 0, 0,
	0, 393, 0, 0, 0, 401, 0, 0, 0, 0,
	0, 417, 0, 0, 325, 326, 327, 328, 290, 0,
	262, 420, 350, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	414, 415, 286, 292, 432, 294, 261, 340, 288, 399,
	301, 0, 425, 0, 426, 0, 0, 0, 0, 332,
	297, 298, 364, 302, 310, 353, 398, 338, 358, 259,
	389, 365, 314, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 234, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 377, 0, 239, 267, 0, 242, 0, 308,
	0, 349, 285, 0, 0, 197, 198, 199, 200, 201,
	202, 203, 204, 205, 206, 207, 208, 209, 210, 211,
	212, 213, 214, 215, 216, 217, 218, 219, 0, 220,
	221, 222, 223, 224, 225, 226, 227, 228, 229, 230,
	231, 232, 233, 337, 0, 0, 235, 236, 237, 238,
	0, 0, 0, 405, 406, 407, 428, 391, 0, 446,
	280, 0, 0, 307, 0, 0, 0, 0, 0, 0,
	0, 0, 450, 442, 0, 0, 438, 0, 439, 0,
	0, 0, 0, 0, 366, 321, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 189, 0, 0, 0, 0,
	0, 0, 257, 190, 440, 0, 441, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 260, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 248, 371,
	1206, 258, 362, 400, 263, 369, 253, 336, 359, 0,
	0, 250, 385, 368, 318, 299, 300, 249, 0, 354,
	278, 291, 275, 334, 0, 384, 412, 274, 403, 0,
	395, 252, 0, 394, 333, 381, 386, 319, 313, 251,
	383, 317, 312, 303, 282, 427, 304, 305, 295, 345,
	311, 346, 296, 323, 322, 324, 0, 0, 0, 0,
	0, 423, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 397,
	0, 0, 0, 0, 0, 0, 370, 0, 0, 306,
	0, 0, 0, 413, 0, 357, 339, 0, 0, 0,
	355, 309, 382, 347, 388, 372, 396, 351, 348, 243,
	373, 277, 320, 254, 256, 272, 279, 281, 283, 284,
	329, 330, 342, 361, 374, 375, 376, 276, 264, 356,
	265, 293, 266, 244, 269, 268, 270, 363, 271, 246,
	343, 380, 0, 289, 352, 316, 247, 315, 344, 379,
	378, 255, 404, 410, 411, 0, 0, 416, 0, 0,
	0, 424, 429, 430, 431, 433, 434, 435, 436, 0,
	0, 0, 0, 418, 0, 0, 0, 0, 0, 0,
	409, 287, 240, 241, 449, 273, 335, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 408,
	0, 0, 0, 437, 448, 0, 0, 0, 0, 0,
	447, 341, 0, 360, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 367, 390, 402, 419,
	422, 0, 0, 0, 0, 245, 421, 0, 0, 0,
	0, 0, 0, 0, 0, 393, 0, 0, 0, 401,
	0, 0, 0, 0, 0, 417, 0, 0, 325, 326,
	327, 328, 290, 0, 262, 420, 350, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 414, 415, 286, 292, 432, 294,
	261, 340, 288, 399, 301, 0, 425, 0, 426, 0,
	0, 0, 0, 332, 297, 298, 364, 302, 310, 353,
	398, 338, 358, 259, 389, 365, 314, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	234, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 377, 0, 239, 267,
	0, 242, 0, 308, 0, 349, 285, 0, 0, 197,
	198, 199, 200, 201, 202, 203, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 217,
	218, 219, 0, 220, 221, 222, 223, 224, 225, 226,
	227, 228, 229, 230, 231, 232, 233, 337, 0, 0,
	235, 236, 237, 238, 0, 0, 0, 405, 406, 407,
	428, 391, 0, 446, 280, 0, 0, 307, 0, 0,
	0, 0, 0, 0, 0, 0, 450, 442, 0, 0,
	438, 0, 439, 0, 0, 0, 0, 0, 366, 321,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 189,
	0, 0, 0, 0, 0, 0, 257, 190, 440, 0,
	441, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	260, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 248, 371, 1204, 258, 362, 400, 263, 369,
	253, 336, 359, 0, 0, 250, 385, 368, 318, 299,
	300, 249, 0, 354, 278, 291, 275, 334, 0, 384,
	412, 274, 403, 0, 395, 252, 0, 394, 333, 381,
	386, 319, 313, 251, 383, 317, 312, 303, 282, 427,
	304, 305, 295, 345, 311, 346, 296, 323, 322, 324,
	0, 0, 0, 0, 0, 423, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 397, 0, 0, 0, 0, 0, 0,
	370, 0, 0, 306, 0, 0, 0, 413, 0, 357,
	339, 0, 0, 0, 355, 309, 382, 347, 388, 372,
	396, 351, 348, 243, 373, 277, 320, 254, 256, 272,
	279, 281, 283, 284, 329, 330, 342, 361, 374, 375,
	376, 276, 264, 356, 265, 293, 266, 244, 269, 268,
	270, 363, 271, 246, 343, 380, 0, 289, 352, 316,
	247, 315, 344, 379, 378, 255, 404, 410, 411, 0,
	0, 416, 0, 0, 0, 424, 429, 430, 431, 433,
	434, 435, 436, 0, 0, 0, 0, 418, 0, 0,
	0, 0, 0, 0, 409, 287, 240, 241, 449, 273,
	335, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 331, 408, 0, 0, 0, 437, 448, 0,
	0, 0, 0, 0, 447, 341, 0, 360, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	367, 390, 402, 419, 422, 0, 0, 0, 0, 245,
	421, 0, 0, 0, 0, 0, 0, 0, 0, 393,
	0, 0, 0, 401, 0, 0, 0, 0, 0, 417,
	0, 0, 325, 326, 327, 328, 290, 0, 262, 420,
	350, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	286, 292, 432, 294, 261, 340, 288, 399, 301, 0,
	425, 0, 426, 0, 0, 0, 0, 332, 297, 298,
	364, 302, 310, 353, 398, 338, 358, 259, 389, 365,
	314, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 234, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	377, 0, 239, 267, 0, 242, 0, 308, 0, 349,
	285, 0, 0, 197, 198, 199, 200, 201, 202, 203,
	204, 205, 206, 207, 208, 209, 210, 211, 212, 213,
	214, 215, 216, 217, 218, 219, 0, 220, 221, 222,
	223, 224, 225, 226, 227, 228, 229, 230, 231, 232,
	233, 337, 0, 0, 235, 236, 237, 238, 0, 0,
	0, 405, 406, 407, 428, 391, 0, 446, 280, 0,
	0, 307, 0, 0, 0, 0, 0, 0, 0, 0,
	450, 442, 0, 0, 438, 0, 439, 0, 0, 0,
	0, 0, 366, 321, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 189, 0, 0, 0, 0, 0, 0,
	257, 190, 440, 0, 441, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 260, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 248, 371, 387, 258,
	362, 400, 263, 369, 253, 336, 359, 0, 0, 250,
	385, 368, 318, 299, 300, 249, 0, 354, 278, 291,
	275, 334, 0, 384, 412, 274, 403, 0, 395, 252,
	0, 394, 333, 381, 386, 319, 313, 251, 383, 317,
	312, 303, 282, 427, 304, 305, 295, 345, 311, 346,
	296, 323, 322, 324, 0, 0, 0, 0, 0, 423,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 397, 0, 0,
	0, 0, 0, 0, 370, 0, 0, 306, 0, 0,
	0, 413, 0, 357, 339, 0, 0, 0, 355, 309,
	382, 347, 388, 372, 396, 351, 348, 243, 373, 277,
	320, 254, 256, 530, 279, 281, 283, 284, 329, 330,
	342, 361, 374, 375, 376, 276, 264, 356, 265, 293,
	266, 244, 269, 268, 270, 363, 271, 246, 343, 380,
	0, 289, 352, 316, 247, 315, 344, 379, 378, 255,
	404, 410, 411, 0, 0, 416, 0, 0, 0, 424,
	429, 430, 431, 433, 434, 435, 436, 0, 0, 0,
	0, 418, 0, 0, 0, 0, 0, 0, 409, 287,
	240, 241, 449, 273, 335, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 331, 408, 0, 0,
	0, 437, 448, 0, 0, 0, 0, 0, 447, 341,
	0, 360, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 367, 390, 402, 419, 422, 0,
	0, 0, 0, 245, 421, 0, 0, 0, 0, 0,
	0, 0, 0, 393, 0, 0, 0, 401, 0, 0,
	0, 0, 0, 417, 0, 0, 325, 326, 327, 328,
	290, 0, 262, 420, 350, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 414, 415, 286, 292, 432, 294, 261, 340,
	288, 399, 301, 0, 425, 0, 426, 167, 53, 159,
	135, 332, 297, 298, 364, 302, 310, 353, 398, 338,
	358, 259, 389, 365, 314, 160, 0, 0, 0, 0,
	0, 0, 152, 0, 0, 0, 161, 0, 234, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 115, 0, 978, 979, 980,
	977, 0, 0, 0, 377, 0, 239, 267, 0, 242,
	103, 308, 0, 349, 285, 0, 164, 197, 198, 199,
	200, 201, 202, 203, 204, 205, 206, 207, 208, 209,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	0, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 0, 0, 0, 235, 236,
	237, 238, 0, 0, 0, 405, 406, 407, 428, 391,
	0, 446, 167, 53, 159, 135, 1439, 0, 0, 0,
	0, 0, 0, 0, 450, 442, 0, 0, 0, 0,
	160, 0, 120, 121, 0, 122, 123, 152, 0, 0,
	0, 161, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 167, 53, 159, 135, 0, 0, 0,
	115, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 160, 0, 0, 738, 103, 0, 0, 152, 0,
	0, 164, 161, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 115, 134, 158, 165, 0, 101, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 103, 0, 0, 0,
	0, 0, 164, 0, 157, 151, 150, 0, 0, 0,
	0, 59, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 737, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 776, 0, 0, 0, 120, 121, 0,
	122, 123, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 1435, 0, 0, 0, 0, 0, 1432,
	0, 0, 0, 1434, 1431, 1433, 1437, 1438, 0, 0,
	0, 1436, 153, 154, 155, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 162, 0,
	0, 0, 0, 0, 0, 0, 0, 134, 158, 165,
	0, 101, 0, 0, 0, 0, 778, 0, 111, 777,
	0, 0, 156, 0, 112, 0, 0, 0, 0, 157,
	151, 150, 0, 0, 0, 0, 59, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 134, 158,
	165, 0, 101, 0, 0, 763, 0, 0, 0, 0,
	0, 0, 0, 739, 0, 0, 0, 0, 0, 0,
	157, 151, 150, 0, 0, 0, 0, 59, 0, 0,
	0, 113, 0, 0, 0, 0, 0, 0, 0, 0,
	741, 0, 52, 0, 0, 0, 0, 153, 154, 155,
	0, 0, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427,
	1428, 1429, 1430, 1442, 1443, 1444, 1445, 1446, 1447, 1440,
	1441, 0, 0, 162, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 153, 154,
	155, 54, 0, 111, 0, 0, 0, 156, 0, 112,
	0, 0, 0, 762, 761, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 162, 0, 1639, 0, 0, 0,
	760, 1601, 0, 0, 0, 0, 0, 0, 136, 0,
	0, 736, 0, 0, 111, 0, 0, 0, 156, 0,
	112, 0, 740, 771, 0, 0, 0, 0, 0, 0,
	1641, 1610, 0, 0, 0, 0, 113, 0, 0, 0,
	1642, 1643, 0, 0, 0, 0, 767, 52, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1609, 114, 40, 0,
	0, 0, 0, 0, 51, 5, 0, 113, 44, 118,
	119, 1616, 768, 772, 0, 0, 0, 0, 52, 0,
	0, 0, 0, 0, 0, 0, 54, 0, 0, 0,
	757, 0, 755, 759, 775, 0, 0, 0, 756, 753,
	752, 0, 758, 743, 744, 742, 745, 746, 747, 748,
	0, 773, 725, 774, 726, 0, 0, 0, 0, 0,
	0, 0, 0, 136, 769, 770, 0, 54, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	706, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 765, 0, 719, 136, 722, 1639, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 114, 40, 0, 0, 0, 0, 0, 51,
	0, 0, 0, 44, 118, 119, 0, 0, 0, 0,
	1641, 0, 0, 0, 0, 0, 0, 0, 1600, 1602,
	1599, 0, 1596, 0, 0, 0, 0, 1620, 0, 0,
	0, 0, 0, 114, 0, 0, 0, 0, 1626, 0,
	51, 0, 0, 0, 0, 118, 119, 0, 0, 764,
	0, 3300, 0, 0, 0, 0, 0, 0, 1614, 1648,
	0, 1616, 1615, 1617, 1619, 0, 1621, 1622, 1623, 1627,
	1628, 1629, 1631, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 0, 0, 1624, 1633, 1625, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 1604, 0, 0, 0, 0,
	0, 721, 0, 715, 0, 702, 0, 0, 0, 0,
	0, 0, 718, 717, 0, 0, 0, 1640, 0, 0,
	0, 0, 0, 0, 1639, 0, 0, 0, 1632, 699,
	0, 0, 0, 707, 0, 0, 0, 0, 1597, 1598,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 1641, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 724, 1613, 0, 0, 1639, 714, 0, 0,
	1612, 713, 0, 0, 0, 0, 0, 698, 0, 0,
	0, 705, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 1620, 703, 1616,
	1641, 0, 0, 1618, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 1645, 1644, 0, 0, 0,
	0, 700, 0, 0, 0, 0, 0, 0, 1614, 1648,
	0, 0, 1615, 1617, 1619, 723, 1621, 1622, 1623, 1627,
	1628, 1629, 1631, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 1616, 0, 1624, 1633, 1625, 0, 0, 0, 0,
	0, 704, 3045, 0, 0, 0, 1632, 1606, 0, 509,
	508, 515, 505, 0, 0, 0, 0, 0, 0, 0,
	0, 512, 513, 0, 514, 518, 0, 1640, 500, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 523, 0,
	0, 0, 0, 1647, 0, 0, 1646, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1632, 0,
	0, 0, 0, 0, 0, 0, 1637, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 720, 0, 0, 0,
	0, 527, 0, 1613, 529, 1620, 0, 0, 0, 528,
	1612, 0, 0, 0, 0, 0, 1626, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 710, 1614, 1648, 0, 0,
	1615, 1617, 1619, 1618, 1621, 1622, 1623, 1627, 1628, 1629,
	1631, 1634, 1635, 1636, 0, 0, 0, 1620, 0, 0,
	0, 1624, 1633, 1625, 0, 0, 0, 0, 1626, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 1614, 1648,
	0, 0, 1615, 1617, 1619, 1640, 1621, 1622, 1623, 1627,
	1628, 1629, 1631, 1634, 1635, 1636, 0, 0, 0, 0,
	0, 0, 0, 1624, 1633, 1625, 0, 0, 0, 0,
	509, 508, 515, 505, 0, 0, 0, 0, 0, 0,
	0, 0, 512, 513, 1637, 514, 518, 0, 0, 500,
	0, 0, 0, 0, 501, 503, 502, 1640, 0, 523,
	0, 1613, 0, 0, 507, 0, 0, 0, 1612, 0,
	0, 0, 0, 0, 0, 0, 511, 0, 0, 0,
	0, 0, 0, 526, 0, 0, 0, 0, 0, 0,
	504, 0, 1630, 0, 495, 0, 1637, 0, 0, 0,
	0, 1618, 527, 0, 0, 529, 0, 0, 0, 0,
	528, 0, 0, 1613, 0, 0, 0, 0, 0, 0,
	1612, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1630, 0, 0, 0, 0, 0,
	0, 0, 0, 1618, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 506, 510, 516, 0, 517, 519,
	0, 0, 520, 521, 522, 0, 0, 524, 525, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 501, 503, 502, 0, 0,
	0, 0, 0, 0, 0, 507, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 511, 0, 0,
	0, 0, 0, 0, 526, 0, 0, 0, 0, 0,
	0, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 506, 510, 516, 0, 517,
	519, 0, 0, 520, 521, 522, 0, 0, 524, 525,
}

var yyPact = [...]int{
	37275, -1000, -1000, -1000, -321, 10603, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	35197, -1000, -1000, -1000, 37441, -1000, -1000, -1000, -1000, -1000,
	-1000, 35197, -318, 34653, 34653, -1000, -1000, 2055, -1000, 34108,
	11188, 35197, 303, 296, 35197, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 582, -1000, 33564, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 533, 38257, 36829, 8346, -264, -1000, 2903, -107, 1967,
	799, 805, 780, 780, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 37857, 680, 33020, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 37448, 334, 680,
	13371, 3, 2, 2903, 322, 454, -1000, 1184, 37400, 155,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8346, 8346, 10603, -348, 10603, 8346, 35197, 35197, -1000,
	-1000, -1000, -1000, 533, 38257, 8346, 1967, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 2, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 3248, -1000, 1270, -1000, -1000, -1000, -1000,
	-1000, -1000, 2380, 1269, 1966, 488, 35197, -1000, 1263, 488,
	-1000, -1000, -1000, 2903, 2903, -1000, 35197, 35197, 67, 1449,
	-1000, 323, 318, 333, 1249, -1000, -1000, -1000, -1000, -1000,
	-1000, 402, 2825, -1000, 35197, 35197, 2403, 35197, -1000, 1751,
	459, 38448, 2637, 1003, 637, 2449, -1000, -1000, 2368, -1000,
	186, 136, 171, 294, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 182, -1000, 2719, -1000, -1000, 176, -1000, -1000, 162,
	-1000, -1000, -1000, 1, -1000, -1000, -1000, -1000, -1000, -1000,
	-86, -1000, -1000, 825, 1536, 8346, -1000, 1853, -1000, 2360,
	-1000, -1000, -1000, -1000, 5530, 10032, 10032, 10032, 10032, -1000,
	-1000, 2202, 8346, 2367, 2366, -1000, -1000, -1000, -1000, -1000,
	1247, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1607, -1000, -1000, -1000, 9470, -1000, 2365, 2359, 2358, 2357,
	2355, 2344, 2340, 2334, 2333, 2323, 2318, 2308, 2299, 2297,
	2102, 3578, 2295, 1965, 1963, 2294, 2293, 2291, 1961, 2102,
	2102, 2288, 2287, 2282, 2279, 2278, 2274, 2272, 2270, 2256,
	2253, 2243, 2241, 2240, 2234, 2232, 2229, 2228, 2227, 2225,
	2224, 2219, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1164, -1000, 2216, 2617, 2744,
	2161, 2798, 2721, 2709, 2698, 2686, 1729, -1000, -1000, 58,
	-1000, -128, -1000, -1000, 793, -1000, 734, -1000, 35197, 35197,
	35197, 678, 531, 531, 531, 531, 531, 531, 555, 531,
	35197, -161, 577, 573, 562, 531, -1000, -1000, -1000, -1000,
	-1000, -1000, -118, -1000, 1447, 1446, 2503, 708, -1000, -1000,
	-1000, -1000, 1073, 35197, -1000, 2149, 1302, 1302, 2735, 477,
	467, 463, 1302, 352, -1000, 1418, 1418, 1418, 1418, 1302,
	406, 458, 2744, 2744, -9, 1418, -30, 1302, 1302, -30,
	1302, 1302, 1302, 172, -312, -1000, -1000, -1000, 1418, 1418,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2707, 2704, 533,
	35197, 123, 35197, 533, 533, 533, 537, -42, 36285, 35741,
	1751, 449, 436, 1083, 1432, -1000, 1320, 35197, 35197, 1320,
	1320, 17774, 17230, -1000, 35197, -1000, 2744, 2161, -1000, 2087,
	2875, 2085, 2161, 533, 533, 533, 533, 533, 141, 533,
	533, 533, 533, 35197, 35197, 32476, 533, 533, 7216, 7216,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 10603,
	1771, 1704, 153, -75, -317, 187, -1000, -1000, 35197, 2604,
	148, -1000, -1000, -1000, 2107, -1000, 2143, 2143, 2143, 2143,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2143,
	2143, 2172, 2211, -1000, -1000, 2142, 2142, 2142, 2107, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2170, 2170, 2171, 2171, 2170, 35197,
	8346, 35197, 2623, 332, 2210, -1000, 35197, 331, 2744, 2617,
	2744, -1000, -1000, 1234, 1728, 1960, -1000, -1000, 323, 1397,
	-1000, 832, -1000, -1000, -1000, -1000, 35197, -86, 299, -1000,
	-1000, 1919, 2209, -1000, 472, 970, 1129, -1000, 163, 4046,
	28117, 1751, 28117, 35197, -1000, -1000, -1000, -1000, -1000, -1000,
	-2, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 160, -1000, 8346, 8346, 8346, 8346,
	8346, -1000, 558, 8908, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 10032, 10032, 10032, 10032, 10032, 10032, 10032, 10032, 10032,
	10032, 10032, 10032, 2197, 1548, 10032, 10032, 10032, 10032, 2875,
	2781, 1074, 226, -1000, -1000, -1000, -1000, -1000, 1479, 1536,
	8346, 8346, 35197, -1000, -1000, 37229, 8346, 8346, 3831, 8346,
	2675, 8346, 8346, 8346, 2084, 4406, 35197, 8346, -1000, 2083,
	2080, -1000, -1000, 1623, 8346, -1000, -1000, 8346, -1000, -1000,
	8346, 10032, 8346, -1000, -1000, -1000, 2131, 2675, 2675, 1412,
	8346, 8346, 2675, 2675, 2675, 1407, 2675, 2675, 2675, 2675,
	2675, 2675, 2675, 2675, 2078, 2075, 2073, 2744, -264, 6654,
	-1000, -270, 2617, 8346, -1000, -1000, 8346, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1958, 1955, -330, -39, 776,
	746, 760, -1000, 2667, -1000, 2207, 2206, 1204, 531, -1000,
	-119, 35197, 1498, 35197, 28117, 35197, 35197, 1751, 35197, 35197,
	-176, 531, -160, 531, 531, 531, 35197, -1000, 2540, 28117,
	2535, 537, -1000, 35197, 1073, 2666, 35197, 2813, 10032, 10032,
	-1000, 31932, 1418, 1302, 1302, -1000, -1000, 35197, -1000, -1000,
	-1000, 1418, 35197, 1418, 1418, 2813, 1418, -1000, -1000, -1000,
	1302, 1302, -1000, -1000, -1000, -1000, 1418, 1418, -1000, -1000,
	2813, 35197, -10, 2813, 2813, -13, -1000, -1000, -1000, 35197,
	35197, 531, 35197, -1000, 35197, 35197, -1000, -1000, 35197, 37780,
	35197, 31388, 2701, -1000, 28117, 35197, 35197, 25397, -1000, 1028,
	-1000, -62, -1000, -41, -42, 1320, -42, 1320, -1000, 468,
	469, 16142, 405, 28117, 4968, -1000, -1000, 1320, 1320, 4968,
	4968, 1188, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 1064,
	-1000, 170, 2617, -1000, -1000, -1000, -1000, -1000, 35197, 35197,
	28117, 1751, 35197, 533, 35197, 35197, 35197, 35197, -1000, 2205,
	-1000, 2631, 35197, 35197, 1110, -1000, -1000, 12827, 1181, 1110,
	-1000, 1483, -1000, 8346, 10603, -290, 8346, 10603, 10603, 8346,
	10603, -1000, 8346, 130, -1000, -1000, -1000, -1000, 1726, -1000,
	1722, -1000, -1000, -1000, -1000, -1000, 1935, 1935, -1000, 1715,
	-1000, -1000, -1000, -1000, 1714, -1000, -1000, 1710, -1000, -1000,
	-1000, 2072, 825, -1000, 1932, 2447, -265, -1000, 15037, 35197,
	35197, -1000, -1000, -265, -1000, 14476, 35197, 2617, -1000, 2617,
	35197, -1000, 2732, -1000, 323, 256, -1000, -1000, -1000, -1000,
	-1000, -1000, 1178, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, 1055, -1000, 35197, -1000, -1000, 163, 28117, 29205,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 195, -1000, -1000,
	156, -1000, 548, 96, 1393, -1000, -1000, 120, 167, 613,
	1536, -1000, 1494, 1494, 1513, -1000, 526, -1000, -1000, -1000,
	-1000, 2202, -1000, -1000, -1000, 1619, 2869, -1000, 1442, 1442,
	1192, 1192, 1192, 1192, 1192, 1758, 1758, -1000, -1000, -1000,
	5530, 2197, 10032, 10032, 10032, 10032, 509, 509, 3351, 3468,
	-1000, 8346, 1476, -1000, 8346, 2129, 1274, 1173, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2070, 2068,
	1948, 2822, 2067, 8346, -1000, -1000, 1388, 1384, 1382, -1000,
	2035, 7784, -1000, -1000, -1000, 2066, 1167, 2059, -1000, -1000,
	-1000, 2058, 1380, 945, 2053, 1889, 2048, 1053, 8346, 8346,
	8346, 2045, 1375, 1374, 8346, 8346, 8346, 8346, 2041, 8346,
	8346, 8346, 8346, 8346, 8346, 8346, 8346, 23, 23, 23,
	-1000, -1000, 1369, -1000, 1536, -1000, 1924, -1000, 1068, 1050,
	-1000, 1930, -1000, -1000, -1000, 1896, -1000, -1000, 767, 732,
	748, 35197, 889, 11732, 35197, 35197, -1000, 2149, 2629, 125,
	-1000, 1039, -1000, 96, -102, 307, 836, 2401, 2821, 2196,
	35197, 531, 35197, 35197, 35197, 2662, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 30844, -1000, 2192, 1364, -1000, -1000,
	8346, -1000, -1000, 2399, 35197, 35197, 2813, 2813, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 35197, 2813, 2813, 1302, 1418,
	-1000, -1000, 1418, -1000, -1000, 1418, -1000, 1166, -1000, 35197,
	-1000, -1000, -1000, 2149, 1033, -1000, 845, 521, 521, 739,
	625, 2797, 13915, -1000, 1336, 972, 545, 2576, 189, -1000,
	1336, -212, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 399,
	397, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336, 1336,
	1336, 1336, 804, 1336, 1336, 1336, 1336, 1336, -1000, 1336,
	2189, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 411, 122,
	2693, 219, 218, 1039, 2691, 236, 2929, 1008, -1000, -1000,
	-1000, -1000, 19957, 19957, 15598, 19957, -1000, 1399, -42, -53,
	-1000, -1000, 1028, 4968, 1028, 4968, -1000, -1000, 543, -1000,
	-1000, 836, -1000, 35197, 35197, -1000, -1000, 2187, 1445, -1000,
	-1000, 3578, -1000, 4968, 4968, -1000, -1000, 20501, 35197, -1000,
	-96, -1000, -91, 2727, 995, -1000, -1000, 1005, 836, 2446,
	35197, 995, 995, -1000, -1000, 11732, 35197, -1000, -1000, 2813,
	7216, -1000, 25397, -1000, -1000, 30293, -1000, 29749, 2813, 1455,
	-1000, 10603, 1676, 150, -1000, 178, -323, 145, 1562, 144,
	1536, -1000, -1000, 2034, 2033, 1339, -1000, 1331, 2031, 1330,
	1329, -1000, -37, -1000, 2607, 844, -1000, 2182, -1000, 1307,
	2498, -1000, 957, -1000, 1441, 1291, -1000, 844, 1265, 2496,
	957, 2727, -1000, 1160, 61, -1000, -1000, 35197, 1919, 1232,
	29205, 922, -1000, 541, 1136, 1135, -1000, 28117, 185, 28117,
	-1000, 28117, -1000, -1000, 330, -1000, 35197, 2615, -1000, -1000,
	-1000, 1896, -337, -1000, -1000, -1000, -1000, -1000, 1223, -1000,
	509, 509, 3351, 3250, -1000, 10032, -1000, 10032, 2742, 1454,
	-1000, 8346, 1635, 4026, 1448, 18862, 35197, -1000, -1000, 8346,
	8346, -1000, 2717, -1000, -1000, -1000, -1000, 8346, 8346, 1800,
	-1000, 35197, -1000, -1000, -1000, -1000, 18862, -1000, 10032, -1000,
	8346, 1128, 2703, 1221, 23, 23, 23, 2697, 2687, 2638,
	1220, 23, 2616, 2569, 2539, 2517, 2506, 2438, 2427, 2345,
	-1000, 2177, -1000, -1000, 6654, -1000, -37, 8346, 8346, 8346,
	2568, -1000, -1000, 114, -1000, 1439, -1000, -1000, -1000, 717,
	147, 2030, 955, -1000, -1000, 35197, -1000, -1000, -1000, 2029,
	946, -1000, -1000, -1000, 3371, 2143, 2143, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2143, 2143, 2172, -1000,
	-1000, 2142, 2142, 2142, 2107, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 2170, 2170, 2171, 2171, 2170, -1000,
	2149, 2661, -1000, 39, 1336, 480, 28117, 417, -1000, 35197,
	1595, 1438, 2434, 285, 2594, 35197, 25941, 238, 35197, 2164,
	2162, 2154, 289, 3371, 35197, 1017, -1000, 1124, 37400, -1000,
	35197, 1536, -1000, 1751, -1000, 1302, -1000, -1000, 2813, 1256,
	-1000, -1000, 2813, 1302, 1302, 1418, 35197, -1000, 2657, 37780,
	-1000, 35197, -1000, -1000, -1000, 559, -1000, 686, 531, 35197,
	1534, 686, 1532, 2153, -1000, -1000, 35197, 35197, 35197, 35197,
	-1000, -1000, 35197, -1000, 35197, 35197, 35197, 35197, -1000, 35197,
	35197, -1000, 35197, 1531, 1530, 2627, -1000, 1336, 1336, 687,
	-1000, -1000, 451, -1000, 1709, 1708, 1706, 1703, 1916, 1914,
	1912, 1336, 1336, 1702, 1911, 28661, 1906, 912, 1700, 1699,
	1686, 1675, 1904, 699, -1000, 1903, 1674, 1651, 1643, 35197,
	2151, 1799, -1000, -1000, 39, 1336, 211, 35197, 1434, 480,
	298, 1737, 16686, 35197, 25397, 25397, 25397, 25397, -1000, 2472,
	2465, -1000, 2487, 2461, 2473, 35197, 25397, 2149, -1000, 28661,
	-1000, -1000, -1000, 2875, 1185, 2857, 700, 8346, -1000, -1000,
	-78, -50, -1000, -1000, -1000, 28117, 1902, 405, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 2835, 35197, 35197, 576,
	2027, -1000, 2811, -1000, 941, -1000, -1000, 1121, -1000, 2811,
	1481, -322, 10603, 1473, 1332, -1000, 8346, 10603, 8346, -292,
	198, -295, -1000, -1000, -1000, 1899, -1000, -1000, -1000, 1684,
	-1000, 1683, 33, 52, 1526, -265, 6654, 316, 35197, -265,
	35197, 6654, -1000, 35197, 315, -265, -1000, 35197, 1672, -1000,
	-1000, -1000, 2818, 28117, 1751, 1292, 27573, -1000, 169, -1000,
	194, 444, 1898, -1000, 561, 113, 1896, -1000, -1000, -1000,
	10032, -1000, -1000, -1000, -1000, 1536, 8346, 2026, -1000, 721,
	721, 2025, -1000, 2143, 2143, -1000, 2107, 2142, 2107, 721,
	721, 2023, -1000, 1852, 2324, -1000, 2320, 2300, 8346, -1000,
	2019, 3374, 1122, -122, 23, 23, -1000, -1000, -1000, -1000,
	23, 23, 23, 23, -1000, 23, 23, 23, 23, 23,
	23, 23, 23, 499, -1000, 33, 1536, 1536, -1000, -1000,
	2560, -1000, 1896, 1885, -1000, 1883, 1882, 889, 3371, 595,
	11732, 2603, 2656, 327, 1739, -1000, -1000, -1000, 27029, 427,
	-1000, -1000, -1000, 497, 183, 1671, 415, -1000, 35197, 236,
	2551, 1417, 1871, 35197, -1000, -1000, -1000, -1000, -1000, 2594,
	-1000, 944, 262, 1179, -1000, 1336, 1336, 12276, 2651, 2128,
	2126, 12276, 12276, 12276, 272, 1462, -1000, 488, 950, 1120,
	25397, 35197, -1000, 24853, 2018, -1000, 836, 2813, -1000, 35197,
	-1000, 2813, 2813, 1302, -1000, 327, -1000, 2578, 3371, -1000,
	35197, -1000, 35197, -1000, 35197, 35197, 531, 8346, 2578, 35197,
	540, -1000, -1000, 818, 261, 568, 568, 929, -1000, 2645,
	-1000, -1000, -1000, 35197, -1000, -1000, -1000, -1000, -1000, -1000,
	18862, 18862, 2685, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1868, 1867, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 35197, 1175, -1000, 1398,
	1739, 27029, 1381, 1320, 1866, 427, 1595, 1370, -1000, 1865,
	-1000, 892, 35197, 35197, -1000, 998, -1000, 1367, 2398, 2433,
	2398, -1000, -1000, -1000, -1000, 2463, -1000, 2290, -1000, -1000,
	998, -1000, -1000, -1000, -1000, -1000, 700, -1000, 2720, 686,
	686, 686, 2014, -1000, -1000, -1000, 922, 2011, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 2803, 2796, 26485,
	2803, -1000, -322, 1453, -1000, 1593, 139, 1470, 35197, -1000,
	-1000, -1000, 2010, 2007, -272, 45, 2790, 2780, 2832, -1000,
	2003, 909, -265, -1000, -1000, 844, -1000, -1000, -1000, -265,
	-1000, 844, -1000, -1000, 1751, -1000, 164, -1000, -1000, -1000,
	-1000, -1000, -1000, 83, -1000, 35197, -1000, 112, -1000, 1536,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 8346, -1000, -1000, -1000, 2276,
	-1000, -1000, 8346, 2002, 1861, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2847,
	-1000, 2773, -272, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 3371, -1000, 1555, 327, -182, -1000, 1820, 93, -1000,
	-1000, -1000, 1819, 1803, 1658, -1000, -1000, 1634, 1103, 109,
	-1000, -1000, -1000, -1000, -1000, -1000, 1737, 1681, 1359, -342,
	-1000, 2125, -1000, 1336, 1336, 1336, 35197, -1000, 25941, 1555,
	1555, 1999, 905, -1000, -1000, -1000, -1000, 327, 23765, 12276,
	1997, 1990, 1989, 502, 1391, 1377, -1000, 1646, 19957, 25397,
	24853, 982, -1000, 1117, -1000, -1000, -1000, 2813, -1000, -1000,
	2813, -1000, -1000, -1000, 35197, 251, 2123, -1000, 2122, 2394,
	319, 2120, 2119, 35197, 2237, -1000, 2578, 35197, 581, 2592,
	-1000, -1000, -1000, -1000, -1000, 360, -1000, 35197, -1000, -1000,
	1147, -1000, 18862, -1000, -1000, 1170, -1000, 1799, 1796, -1000,
	93, 1790, 4968, -1000, -1000, 2551, 1786, -1000, 35197, 892,
	892, 2847, 35197, 6654, -1000, -1000, 8346, 2118, -1000, 8346,
	-1000, -1000, -1000, -1000, -1000, 2115, 2590, -1000, -1000, -1000,
	-1000, -1000, -1000, 8346, 8346, -1000, -1000, 529, 10603, -302,
	166, -1000, -1000, -1000, -275, 1785, -1000, -1000, 2772, 1784,
	1750, 35197, -1000, 844, 844, 836, -1000, -1000, -13, -1000,
	2217, -1000, 2185, 23, -1000, 159, 8346, -275, -171, -1000,
	-1000, -182, -1000, 313, -1000, -1000, 297, -1000, -1000, 230,
	-1000, -1000, 1629, 465, -1000, -1000, -1000, 1782, 1546, 1764,
	23221, 18862, 19406, 1781, -1000, -1000, -1000, -1000, -202, 12276,
	-1000, 1168, -1000, 1336, 1336, 1981, 38160, 160, 38160, 809,
	1358, -1000, 1644, -1000, 1641, -1000, 2813, 982, 1117, -1000,
	-1000, 1283, -1000, -1000, -1000, -1000, 251, -1000, -1000, 1549,
	10032, -1000, -1000, 1779, 19406, 646, 1343, 1341, 684, 2112,
	-1000, 368, 2831, -1000, -1000, -1000, 670, 2111, -1000, 1524,
	1518, -1000, 35197, -1000, 23221, 23221, 270, 270, 23221, 23221,
	2110, 568, -1000, -1000, 10032, -1000, -1000, -1000, -1000, 1336,
	1114, -1000, -1000, -1000, -1000, -1000, -1000, 1681, -1000, -1000,
	2744, -1000, -1000, 1536, 35197, 1536, 24309, -1000, 2771, 2769,
	1536, 825, -1000, -322, 35197, 35197, -278, 1640, -1000, 1777,
	53, -1000, -1000, 826, -280, 32, 41, -1000, -1000, -1000,
	1980, -1000, 474, -1000, -1000, -1000, 825, -278, 35197, -1000,
	367, -1000, -1000, 443, 1776, -1000, -1000, 227, -1000, -1000,
	-1000, -1000, -1000, 106, -1000, 1338, 1143, -1000, 2107, 8346,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 23765, 1555,
	1555, -202, 487, 38108, -1000, 972, -1000, -13, 487, 441,
	229, -1000, 1638, -1000, -1000, 2847, -1000, -1000, -1000, 3351,
	-1000, -1000, -1000, -1000, -1000, -1000, 1775, 1772, -1000, -1000,
	-1000, -1000, -1000, 1633, 2106, -97, 2679, 1769, -1000, -1000,
	2104, 1141, 1138, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	1131, 1112, 23221, -1000, -1000, 3351, 18862, 1336, -1000, -1000,
	1108, 1106, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 2103,
	-1000, -1000, 2767, -1000, 1767, 527, 46, 41, -1000, 2766,
	49, 2763, 2762, -1000, -1000, 512, -268, 21, 20, 19,
	-1000, -1000, -1000, 8346, -1000, 2649, -1000, 168, -1000, 80,
	-1000, -1000, -1000, 1764, 1763, -1000, 23221, 2645, 2139, -1000,
	-1000, -1000, -1000, 321, 2761, 38160, -1000, 1336, -1000, 321,
	-1000, 287, -1000, 1351, -1000, 1624, -1000, 2744, -1000, -1000,
	1973, 8346, 2102, 1336, 1649, -166, 23221, 2392, 2326, 2302,
	2133, 1102, -1000, 18862, -1000, -1000, 22677, 35197, 1750, -1000,
	2099, 1622, 45, 43, 2758, -1000, 1750, 2755, 1750, 1750,
	1500, -1000, 16, 14, 10, -1000, -1000, -1000, -1000, 1762,
	-1000, -1000, -1000, -1000, 233, -1000, -1000, 2645, -1000, 2750,
	342, -1000, 18862, -1000, -1000, -1000, 1599, -1000, -1000, -1000,
	1886, -1000, 35197, -1000, 2430, -1000, 152, 1088, 233, 270,
	233, 270, 233, 270, 233, 270, 151, -1000, -1000, -1000,
	1084, -1000, -1000, 2673, 18318, 30, -1000, -1000, -1000, 1754,
	-1000, 1750, -1000, -1000, 512, -1000, -1000, -1000, -1000, -1000,
	1336, 1744, 257, -1000, -1000, -1000, 22133, 340, 366, 362,
	-1000, 505, -1000, -1000, -1000, 568, -1000, -1000, 2429, 2405,
	2817, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 35197, -1000, 35197, -1000, 1082, -1000, -1000, -1000, 1098,
	-1000, -1000, -1000, -1000, -1000, 1597, -1000, 35197, -1000, 35197,
	336, 1572, 10032, 2098, 10032, 2097, 348, 2094, -1000, -1000,
	2829, -1000, 2827, 641, 641, 233, 233, 233, 233, -1000,
	823, -1000, 1328, -1000, 21589, 35197, -1000, -1000, 1065, 2091,
	2747, -1000, 3192, 35197, 2441, 35197, 2089, 1313, 10032, -1000,
	-1000, -1000, 1621, 365, -1000, 35197, 6092, -1000, 1091, -1000,
	-1000, 478, 346, -1000, 1056, -1000, 1051, 21045, 1564, 2428,
	-1000, -1000, -1000, -1000, -1000, 1536, 35197, 1015, -1000, 35197,
	324, -1000, -1000, -1000, 949, -1000, -1000, -1000, -1000, 478,
	2495, -1000, 1563, -1000, -1000, 37960, 633, -1000, -1000, 37960,
	329, -1000, 446, 1925, -1000, -1000, 948, -1000, 35197, 651,
	8346, -1000, 329, 38160, -1000, 8346, 932, -1000, 38160, 902,
	-1000, -1000,
}

var yyPgo = [...]int{
	0, 157, 2879, 240, 153, 3408, 75, 239, 232, 221,
	238, 3407, 3406, 2613, 2612, 3405, 3404, 3403, 3400, 3399,
	3397, 3397, 3383, 3381, 3380, 3379, 3378, 3377, 3375, 3374,
	3373, 3372, 3371, 3370, 3369, 3368, 3367, 3366, 3364, 3363,
	3359, 3358, 236, 3357, 3356, 3355, 3354, 3353, 3352, 3351,
	3350, 3348, 3347, 3346, 3345, 3344, 3343, 3342, 3341, 3340,
	3339, 3325, 3324, 3322, 3321, 3319, 3314, 3313, 3312, 3311,
	3310, 3308, 3307, 3306, 194, 3305, 2575, 3304, 3302, 3300,
	3299, 3298, 3296, 3294, 237, 3293, 3292, 3291, 3290, 3288,
	3287, 3286, 3285, 3284, 3282, 3281, 224, 3279, 3275, 3272,
	3270, 3266, 3265, 212, 3264, 151, 205, 3263, 3262, 3261,
	3260, 3259, 3257, 233, 215, 68, 3256, 47, 3255, 3253,
	216, 3251, 132, 3249, 129, 3248, 3245, 3243, 3242, 3240,
	3239, 3238, 3237, 3234, 3233, 3232, 3231, 3230, 3229, 3228,
	3227, 87, 3226, 248, 3225, 69, 3223, 3221, 123, 124,
	181, 245, 2214, 249, 242, 167, 149, 86, 3220, 2610,
	3219, 141, 222, 138, 23, 3217, 156, 3216, 134, 43,
	40, 244, 121, 56, 139, 108, 3215, 199, 98, 95,
	3209, 3207, 170, 250, 169, 3206, 110, 3204, 3203, 3202,
	3201, 190, 174, 3196, 3195, 112, 3193, 3191, 92, 3190,
	67, 178, 143, 172, 3189, 1417, 105, 106, 103, 3188,
	3187, 97, 3186, 3185, 3184, 3182, 159, 3181, 3180, 131,
	70, 3179, 3178, 3176, 66, 3174, 44, 3172, 3171, 31,
	3170, 63, 3169, 3168, 3166, 3165, 3164, 3162, 3161, 3159,
	3155, 3152, 3150, 71, 3149, 3148, 16, 17, 19, 3147,
	26, 3146, 147, 3141, 3140, 3139, 81, 76, 3138, 80,
	1, 45, 85, 3137, 209, 119, 91, 130, 3136, 419,
	3135, 3134, 3132, 144, 3130, 549, 3129, 3127, 3126, 3125,
	3124, 116, 3121, 208, 50, 3120, 113, 120, 3119, 36,
	46, 193, 183, 3117, 3114, 3109, 301, 202, 84, 29,
	0, 3107, 136, 3106, 3104, 3102, 243, 3097, 228, 180,
	146, 210, 256, 211, 3092, 3091, 64, 3089, 135, 49,
	53, 126, 9, 20, 373, 3088, 14, 162, 3087, 191,
	3084, 173, 7, 125, 3082, 3081, 27, 251, 3080, 3079,
	3075, 111, 3073, 3071, 182, 59, 3069, 3068, 3066, 3065,
	34, 3064, 35, 25, 3063, 90, 3062, 231, 3060, 200,
	127, 163, 150, 148, 218, 223, 73, 72, 3059, 1440,
	133, 93, 18, 3058, 219, 3057, 176, 117, 3056, 79,
	3055, 234, 365, 192, 3053, 165, 8, 42, 33, 3052,
	10, 3051, 226, 177, 3050, 3049, 22, 51, 3048, 30,
	3044, 3043, 3042, 3041, 5, 3040, 3039, 3035, 2, 4,
	3034, 3, 195, 3033, 3032, 3031, 3030, 48, 214, 3029,
	142, 155, 166, 3028, 89, 3026, 3025, 3024, 576, 3023,
	246, 3021, 3020, 3019, 3001, 2995, 2994, 2992, 2991, 2990,
	96, 38, 2988, 2986, 2984, 2978, 74, 128, 2977, 2975,
	2973, 2972, 37, 160, 2971, 21, 2969, 32, 28, 39,
	2968, 118, 2966, 12, 164, 2965, 2964, 15, 2963, 2954,
	11, 13, 2953, 2950, 109, 2949, 82, 24, 140, 101,
	2947, 2945, 78, 213, 115, 2942, 2941, 230, 229, 187,
	2940, 158, 225, 247, 2939, 206, 2938, 2937, 2936, 2933,
	2932, 2923, 962, 2922, 2920, 235, 58, 88, 102, 2919,
	2918, 2908, 83, 145, 107, 99, 57, 77, 2904, 100,
	179, 2903, 175, 2902, 2900, 94, 2898, 2897, 2896, 2894,
	2893, 168, 2888, 2885, 171, 220, 2872, 2868, 2864, 2861,
	227, 359, 2859,
}

//line mysql_sql.y:10392
type yySymType struct {
	union interface{}
	id    int
	str   string
	item  interface{}
	yys   int
}

func (st *yySymType) accessModeUnion() tree.AccessModeType {
	v, _ := st.union.(tree.AccessModeType)
	return v
}

func (st *yySymType) accountAuthOptionUnion() tree.AccountAuthOption {
	v, _ := st.union.(tree.AccountAuthOption)
	return v
}

func (st *yySymType) accountCommentUnion() tree.AccountComment {
	v, _ := st.union.(tree.AccountComment)
	return v
}

func (st *yySymType) accountCommentOrAttributeUnion() tree.AccountCommentOrAttribute {
	v, _ := st.union.(tree.AccountCommentOrAttribute)
	return v
}

func (st *yySymType) accountIdentifiedUnion() tree.AccountIdentified {
	v, _ := st.union.(tree.AccountIdentified)
	return v
}

func (st *yySymType) accountRoleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) accountStatusUnion() tree.AccountStatus {
	v, _ := st.union.(tree.AccountStatus)
	return v
}

func (st *yySymType) accountsSetOptionUnion() *tree.AccountsSetOption {
	v, _ := st.union.(*tree.AccountsSetOption)
	return v
}

func (st *yySymType) aliasedTableExprUnion() *tree.AliasedTableExpr {
	v, _ := st.union.(*tree.AliasedTableExpr)
	return v
}

func (st *yySymType) alterAccountAuthOptionUnion() tree.AlterAccountAuthOption {
	v, _ := st.union.(tree.AlterAccountAuthOption)
	return v
}

func (st *yySymType) alterColPositionUnion() *tree.ColumnPosition {
	v, _ := st.union.(*tree.ColumnPosition)
	return v
}

func (st *yySymType) alterColumnOrderUnion() *tree.AlterColumnOrder {
	v, _ := st.union.(*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterColumnOrderByUnion() []*tree.AlterColumnOrder {
	v, _ := st.union.([]*tree.AlterColumnOrder)
	return v
}

func (st *yySymType) alterTableUnion() tree.AlterTable {
	v, _ := st.union.(tree.AlterTable)
	return v
}

func (st *yySymType) alterTableOptionUnion() tree.AlterTableOption {
	v, _ := st.union.(tree.AlterTableOption)
	return v
}

func (st *yySymType) alterTableOptionsUnion() tree.AlterTableOptions {
	v, _ := st.union.(tree.AlterTableOptions)
	return v
}

func (st *yySymType) assignmentUnion() *tree.Assignment {
	v, _ := st.union.(*tree.Assignment)
	return v
}

func (st *yySymType) assignmentsUnion() []*tree.Assignment {
	v, _ := st.union.([]*tree.Assignment)
	return v
}

func (st *yySymType) attributeNullUnion() tree.AttributeNull {
	v, _ := st.union.(tree.AttributeNull)
	return v
}

func (st *yySymType) attributeReferenceUnion() *tree.AttributeReference {
	v, _ := st.union.(*tree.AttributeReference)
	return v
}

func (st *yySymType) authRecordUnion() *tree.AuthRecord {
	v, _ := st.union.(*tree.AuthRecord)
	return v
}

func (st *yySymType) boolValUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) clusterByOptionUnion() *tree.ClusterByOption {
	v, _ := st.union.(*tree.ClusterByOption)
	return v
}

func (st *yySymType) columnAttributeUnion() tree.ColumnAttribute {
	v, _ := st.union.(tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnAttributesUnion() []tree.ColumnAttribute {
	v, _ := st.union.([]tree.ColumnAttribute)
	return v
}

func (st *yySymType) columnTableDefUnion() *tree.ColumnTableDef {
	v, _ := st.union.(*tree.ColumnTableDef)
	return v
}

func (st *yySymType) columnTypeUnion() *tree.T {
	v, _ := st.union.(*tree.T)
	return v
}

func (st *yySymType) comparisionExprUnion() *tree.ComparisonExpr {
	v, _ := st.union.(*tree.ComparisonExpr)
	return v
}

func (st *yySymType) comparisonOpUnion() tree.ComparisonOp {
	v, _ := st.union.(tree.ComparisonOp)
	return v
}

func (st *yySymType) completionTypeUnion() tree.CompletionType {
	v, _ := st.union.(tree.CompletionType)
	return v
}

func (st *yySymType) connectorOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) createOptionUnion() tree.CreateOption {
	v, _ := st.union.(tree.CreateOption)
	return v
}

func (st *yySymType) createOptionsUnion() []tree.CreateOption {
	v, _ := st.union.([]tree.CreateOption)
	return v
}

func (st *yySymType) cstrUnion() *tree.CStr {
	v, _ := st.union.(*tree.CStr)
	return v
}

func (st *yySymType) cteUnion() *tree.CTE {
	v, _ := st.union.(*tree.CTE)
	return v
}

func (st *yySymType) cteListUnion() []*tree.CTE {
	v, _ := st.union.([]*tree.CTE)
	return v
}

func (st *yySymType) defaultOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) directionUnion() tree.Direction {
	v, _ := st.union.(tree.Direction)
	return v
}

func (st *yySymType) duplicateKeyUnion() tree.DuplicateKey {
	v, _ := st.union.(tree.DuplicateKey)
	return v
}

func (st *yySymType) elseIfClauseUnion() *tree.ElseIfStmt {
	v, _ := st.union.(*tree.ElseIfStmt)
	return v
}

func (st *yySymType) elseIfClauseListUnion() []*tree.ElseIfStmt {
	v, _ := st.union.([]*tree.ElseIfStmt)
	return v
}

func (st *yySymType) epxlainOptionUnion() tree.OptionElem {
	v, _ := st.union.(tree.OptionElem)
	return v
}

func (st *yySymType) epxlainOptionsUnion() []tree.OptionElem {
	v, _ := st.union.([]tree.OptionElem)
	return v
}

func (st *yySymType) exportParmUnion() *tree.ExportParam {
	v, _ := st.union.(*tree.ExportParam)
	return v
}

func (st *yySymType) exprUnion() tree.Expr {
	v, _ := st.union.(tree.Expr)
	return v
}

func (st *yySymType) exprsUnion() tree.Exprs {
	v, _ := st.union.(tree.Exprs)
	return v
}

func (st *yySymType) fieldsUnion() *tree.Fields {
	v, _ := st.union.(*tree.Fields)
	return v
}

func (st *yySymType) fieldsListUnion() []*tree.Fields {
	v, _ := st.union.([]*tree.Fields)
	return v
}

func (st *yySymType) frameBoundUnion() *tree.FrameBound {
	v, _ := st.union.(*tree.FrameBound)
	return v
}

func (st *yySymType) frameClauseUnion() *tree.FrameClause {
	v, _ := st.union.(*tree.FrameClause)
	return v
}

func (st *yySymType) frameTypeUnion() tree.FrameType {
	v, _ := st.union.(tree.FrameType)
	return v
}

func (st *yySymType) fromUnion() *tree.From {
	v, _ := st.union.(*tree.From)
	return v
}

func (st *yySymType) fullOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) funcArgUnion() tree.FunctionArg {
	v, _ := st.union.(tree.FunctionArg)
	return v
}

func (st *yySymType) funcArgDeclUnion() *tree.FunctionArgDecl {
	v, _ := st.union.(*tree.FunctionArgDecl)
	return v
}

func (st *yySymType) funcArgsUnion() tree.FunctionArgs {
	v, _ := st.union.(tree.FunctionArgs)
	return v
}

func (st *yySymType) funcExprUnion() *tree.FuncExpr {
	v, _ := st.union.(*tree.FuncExpr)
	return v
}

func (st *yySymType) funcReturnUnion() *tree.ReturnType {
	v, _ := st.union.(*tree.ReturnType)
	return v
}

func (st *yySymType) funcTypeUnion() tree.FuncType {
	v, _ := st.union.(tree.FuncType)
	return v
}

func (st *yySymType) functionNameUnion() *tree.FunctionName {
	v, _ := st.union.(*tree.FunctionName)
	return v
}

func (st *yySymType) groupByUnion() tree.GroupBy {
	v, _ := st.union.(tree.GroupBy)
	return v
}

func (st *yySymType) identifierListUnion() tree.IdentifierList {
	v, _ := st.union.(tree.IdentifierList)
	return v
}

func (st *yySymType) ifNotExistsUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) incrementByOptionUnion() *tree.IncrementByOption {
	v, _ := st.union.(*tree.IncrementByOption)
	return v
}

func (st *yySymType) indexCategoryUnion() tree.IndexCategory {
	v, _ := st.union.(tree.IndexCategory)
	return v
}

func (st *yySymType) indexHintUnion() *tree.IndexHint {
	v, _ := st.union.(*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintListUnion() []*tree.IndexHint {
	v, _ := st.union.([]*tree.IndexHint)
	return v
}

func (st *yySymType) indexHintScopeUnion() tree.IndexHintScope {
	v, _ := st.union.(tree.IndexHintScope)
	return v
}

func (st *yySymType) indexHintTypeUnion() tree.IndexHintType {
	v, _ := st.union.(tree.IndexHintType)
	return v
}

func (st *yySymType) indexOptionUnion() *tree.IndexOption {
	v, _ := st.union.(*tree.IndexOption)
	return v
}

func (st *yySymType) indexTypeUnion() tree.IndexType {
	v, _ := st.union.(tree.IndexType)
	return v
}

func (st *yySymType) indexVisibilityUnion() tree.VisibleType {
	v, _ := st.union.(tree.VisibleType)
	return v
}

func (st *yySymType) insertUnion() *tree.Insert {
	v, _ := st.union.(*tree.Insert)
	return v
}

func (st *yySymType) int64ValUnion() int64 {
	v, _ := st.union.(int64)
	return v
}

func (st *yySymType) isolationLevelUnion() tree.IsolationLevelType {
	v, _ := st.union.(tree.IsolationLevelType)
	return v
}

func (st *yySymType) joinCondUnion() tree.JoinCond {
	v, _ := st.union.(tree.JoinCond)
	return v
}

func (st *yySymType) joinTableExprUnion() *tree.JoinTableExpr {
	v, _ := st.union.(*tree.JoinTableExpr)
	return v
}

func (st *yySymType) keyPartUnion() *tree.KeyPart {
	v, _ := st.union.(*tree.KeyPart)
	return v
}

func (st *yySymType) keyPartsUnion() []*tree.KeyPart {
	v, _ := st.union.([]*tree.KeyPart)
	return v
}

func (st *yySymType) killOptionUnion() tree.KillOption {
	v, _ := st.union.(tree.KillOption)
	return v
}

func (st *yySymType) lengthOptUnion() int32 {
	v, _ := st.union.(int32)
	return v
}

func (st *yySymType) lengthScaleOptUnion() tree.LengthScaleOpt {
	v, _ := st.union.(tree.LengthScaleOpt)
	return v
}

func (st *yySymType) limitUnion() *tree.Limit {
	v, _ := st.union.(*tree.Limit)
	return v
}

func (st *yySymType) linesUnion() *tree.Lines {
	v, _ := st.union.(*tree.Lines)
	return v
}

func (st *yySymType) loadColumnUnion() tree.LoadColumn {
	v, _ := st.union.(tree.LoadColumn)
	return v
}

func (st *yySymType) loadColumnsUnion() []tree.LoadColumn {
	v, _ := st.union.([]tree.LoadColumn)
	return v
}

func (st *yySymType) loadParamUnion() *tree.ExternParam {
	v, _ := st.union.(*tree.ExternParam)
	return v
}

func (st *yySymType) matchTypeUnion() tree.MatchType {
	v, _ := st.union.(tree.MatchType)
	return v
}

func (st *yySymType) maxValueOptionUnion() *tree.MaxValueOption {
	v, _ := st.union.(*tree.MaxValueOption)
	return v
}

func (st *yySymType) minValueOptionUnion() *tree.MinValueOption {
	v, _ := st.union.(*tree.MinValueOption)
	return v
}

func (st *yySymType) nullsPositionUnion() tree.NullsPosition {
	v, _ := st.union.(tree.NullsPosition)
	return v
}

func (st *yySymType) numValUnion() *tree.NumVal {
	v, _ := st.union.(*tree.NumVal)
	return v
}

func (st *yySymType) objectTypeUnion() tree.ObjectType {
	v, _ := st.union.(tree.ObjectType)
	return v
}

func (st *yySymType) orderUnion() *tree.Order {
	v, _ := st.union.(*tree.Order)
	return v
}

func (st *yySymType) orderByUnion() tree.OrderBy {
	v, _ := st.union.(tree.OrderBy)
	return v
}

func (st *yySymType) parenTableExprUnion() *tree.ParenTableExpr {
	v, _ := st.union.(*tree.ParenTableExpr)
	return v
}

func (st *yySymType) partitionUnion() *tree.Partition {
	v, _ := st.union.(*tree.Partition)
	return v
}

func (st *yySymType) partitionByUnion() *tree.PartitionBy {
	v, _ := st.union.(*tree.PartitionBy)
	return v
}

func (st *yySymType) partitionOptionUnion() *tree.PartitionOption {
	v, _ := st.union.(*tree.PartitionOption)
	return v
}

func (st *yySymType) partitionsUnion() []*tree.Partition {
	v, _ := st.union.([]*tree.Partition)
	return v
}

func (st *yySymType) privilegeUnion() *tree.Privilege {
	v, _ := st.union.(*tree.Privilege)
	return v
}

func (st *yySymType) privilegeLevelUnion() *tree.PrivilegeLevel {
	v, _ := st.union.(*tree.PrivilegeLevel)
	return v
}

func (st *yySymType) privilegeTypeUnion() tree.PrivilegeType {
	v, _ := st.union.(tree.PrivilegeType)
	return v
}

func (st *yySymType) privilegesUnion() []*tree.Privilege {
	v, _ := st.union.([]*tree.Privilege)
	return v
}

func (st *yySymType) procArgUnion() tree.ProcedureArg {
	v, _ := st.union.(tree.ProcedureArg)
	return v
}

func (st *yySymType) procArgDeclUnion() *tree.ProcedureArgDecl {
	v, _ := st.union.(*tree.ProcedureArgDecl)
	return v
}

func (st *yySymType) procArgTypeUnion() tree.InOutArgType {
	v, _ := st.union.(tree.InOutArgType)
	return v
}

func (st *yySymType) procArgsUnion() tree.ProcedureArgs {
	v, _ := st.union.(tree.ProcedureArgs)
	return v
}

func (st *yySymType) procNameUnion() *tree.ProcedureName {
	v, _ := st.union.(*tree.ProcedureName)
	return v
}

func (st *yySymType) propertiesUnion() []tree.Property {
	v, _ := st.union.([]tree.Property)
	return v
}

func (st *yySymType) propertyUnion() tree.Property {
	v, _ := st.union.(tree.Property)
	return v
}

func (st *yySymType) referenceOnRecordUnion() *tree.ReferenceOnRecord {
	v, _ := st.union.(*tree.ReferenceOnRecord)
	return v
}

func (st *yySymType) referenceOptionTypeUnion() tree.ReferenceOptionType {
	v, _ := st.union.(tree.ReferenceOptionType)
	return v
}

func (st *yySymType) replaceUnion() *tree.Replace {
	v, _ := st.union.(*tree.Replace)
	return v
}

func (st *yySymType) resourceOptionUnion() tree.ResourceOption {
	v, _ := st.union.(tree.ResourceOption)
	return v
}

func (st *yySymType) resourceOptionsUnion() []tree.ResourceOption {
	v, _ := st.union.([]tree.ResourceOption)
	return v
}

func (st *yySymType) roleUnion() *tree.Role {
	v, _ := st.union.(*tree.Role)
	return v
}

func (st *yySymType) rolesUnion() []*tree.Role {
	v, _ := st.union.([]*tree.Role)
	return v
}

func (st *yySymType) rowFormatTypeUnion() tree.RowFormatType {
	v, _ := st.union.(tree.RowFormatType)
	return v
}

func (st *yySymType) rowsExprsUnion() []tree.Exprs {
	v, _ := st.union.([]tree.Exprs)
	return v
}

func (st *yySymType) selectUnion() *tree.Select {
	v, _ := st.union.(*tree.Select)
	return v
}

func (st *yySymType) selectExprUnion() tree.SelectExpr {
	v, _ := st.union.(tree.SelectExpr)
	return v
}

func (st *yySymType) selectExprsUnion() tree.SelectExprs {
	v, _ := st.union.(tree.SelectExprs)
	return v
}

func (st *yySymType) selectLockInfoUnion() *tree.SelectLockInfo {
	v, _ := st.union.(*tree.SelectLockInfo)
	return v
}

func (st *yySymType) selectStatementUnion() tree.SelectStatement {
	v, _ := st.union.(tree.SelectStatement)
	return v
}

func (st *yySymType) setDefaultRoleUnion() *tree.SetDefaultRole {
	v, _ := st.union.(*tree.SetDefaultRole)
	return v
}

func (st *yySymType) setRoleUnion() *tree.SetRole {
	v, _ := st.union.(*tree.SetRole)
	return v
}

func (st *yySymType) showTypeUnion() tree.ShowType {
	v, _ := st.union.(tree.ShowType)
	return v
}

func (st *yySymType) stageCommentUnion() tree.StageComment {
	v, _ := st.union.(tree.StageComment)
	return v
}

func (st *yySymType) stageCredentialsUnion() tree.StageCredentials {
	v, _ := st.union.(tree.StageCredentials)
	return v
}

func (st *yySymType) stageStatusUnion() tree.StageStatus {
	v, _ := st.union.(tree.StageStatus)
	return v
}

func (st *yySymType) stageUrlUnion() tree.StageUrl {
	v, _ := st.union.(tree.StageUrl)
	return v
}

func (st *yySymType) startWithOptionUnion() *tree.StartWithOption {
	v, _ := st.union.(*tree.StartWithOption)
	return v
}

func (st *yySymType) statementUnion() tree.Statement {
	v, _ := st.union.(tree.Statement)
	return v
}

func (st *yySymType) statementOptionUnion() tree.StatementOption {
	v, _ := st.union.(tree.StatementOption)
	return v
}

func (st *yySymType) statementsUnion() []tree.Statement {
	v, _ := st.union.([]tree.Statement)
	return v
}

func (st *yySymType) streamOptionalUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) strsUnion() []string {
	v, _ := st.union.([]string)
	return v
}

func (st *yySymType) subPartitionUnion() *tree.SubPartition {
	v, _ := st.union.(*tree.SubPartition)
	return v
}

func (st *yySymType) subPartitionsUnion() []*tree.SubPartition {
	v, _ := st.union.([]*tree.SubPartition)
	return v
}

func (st *yySymType) subqueryUnion() *tree.Subquery {
	v, _ := st.union.(*tree.Subquery)
	return v
}

func (st *yySymType) subscriptionOptionUnion() *tree.SubscriptionOption {
	v, _ := st.union.(*tree.SubscriptionOption)
	return v
}

func (st *yySymType) tableDefUnion() tree.TableDef {
	v, _ := st.union.(tree.TableDef)
	return v
}

func (st *yySymType) tableDefsUnion() tree.TableDefs {
	v, _ := st.union.(tree.TableDefs)
	return v
}

func (st *yySymType) tableExprUnion() tree.TableExpr {
	v, _ := st.union.(tree.TableExpr)
	return v
}

func (st *yySymType) tableExprsUnion() tree.TableExprs {
	v, _ := st.union.(tree.TableExprs)
	return v
}

func (st *yySymType) tableLockUnion() tree.TableLock {
	v, _ := st.union.(tree.TableLock)
	return v
}

func (st *yySymType) tableLockTypeUnion() tree.TableLockType {
	v, _ := st.union.(tree.TableLockType)
	return v
}

func (st *yySymType) tableLocksUnion() []tree.TableLock {
	v, _ := st.union.([]tree.TableLock)
	return v
}

func (st *yySymType) tableNameUnion() *tree.TableName {
	v, _ := st.union.(*tree.TableName)
	return v
}

func (st *yySymType) tableNamesUnion() tree.TableNames {
	v, _ := st.union.(tree.TableNames)
	return v
}

func (st *yySymType) tableOptionUnion() tree.TableOption {
	v, _ := st.union.(tree.TableOption)
	return v
}

func (st *yySymType) tableOptionsUnion() []tree.TableOption {
	v, _ := st.union.([]tree.TableOption)
	return v
}

func (st *yySymType) tailParamUnion() *tree.TailParameter {
	v, _ := st.union.(*tree.TailParameter)
	return v
}

func (st *yySymType) tlsOptionUnion() tree.TlsOption {
	v, _ := st.union.(tree.TlsOption)
	return v
}

func (st *yySymType) tlsOptionsUnion() []tree.TlsOption {
	v, _ := st.union.([]tree.TlsOption)
	return v
}

func (st *yySymType) transactionCharacteristicUnion() *tree.TransactionCharacteristic {
	v, _ := st.union.(*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) transactionCharacteristicListUnion() []*tree.TransactionCharacteristic {
	v, _ := st.union.([]*tree.TransactionCharacteristic)
	return v
}

func (st *yySymType) tupleUnion() *tree.Tuple {
	v, _ := st.union.(*tree.Tuple)
	return v
}

func (st *yySymType) unionTypeRecordUnion() *tree.UnionTypeRecord {
	v, _ := st.union.(*tree.UnionTypeRecord)
	return v
}

func (st *yySymType) unresolveNamesUnion() []*tree.UnresolvedName {
	v, _ := st.union.([]*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedNameUnion() *tree.UnresolvedName {
	v, _ := st.union.(*tree.UnresolvedName)
	return v
}

func (st *yySymType) unresolvedObjectNameUnion() *tree.UnresolvedObjectName {
	v, _ := st.union.(*tree.UnresolvedObjectName)
	return v
}

func (st *yySymType) unsignedOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

func (st *yySymType) updateExprUnion() *tree.UpdateExpr {
	v, _ := st.union.(*tree.UpdateExpr)
	return v
}

func (st *yySymType) updateExprsUnion() tree.UpdateExprs {
	v, _ := st.union.(tree.UpdateExprs)
	return v
}

func (st *yySymType) userUnion() *tree.User {
	v, _ := st.union.(*tree.User)
	return v
}

func (st *yySymType) userIdentifiedUnion() *tree.AccountIdentified {
	v, _ := st.union.(*tree.AccountIdentified)
	return v
}

func (st *yySymType) userMiscOptionUnion() tree.UserMiscOption {
	v, _ := st.union.(tree.UserMiscOption)
	return v
}

func (st *yySymType) userMiscOptionsUnion() []tree.UserMiscOption {
	v, _ := st.union.([]tree.UserMiscOption)
	return v
}

func (st *yySymType) usernameRecordUnion() *tree.UsernameRecord {
	v, _ := st.union.(*tree.UsernameRecord)
	return v
}

func (st *yySymType) usersUnion() []*tree.User {
	v, _ := st.union.([]*tree.User)
	return v
}

func (st *yySymType) valuesUnion() tree.Values {
	v, _ := st.union.(tree.Values)
	return v
}

func (st *yySymType) varAssignmentExprUnion() *tree.VarAssignmentExpr {
	v, _ := st.union.(*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varAssignmentExprsUnion() []*tree.VarAssignmentExpr {
	v, _ := st.union.([]*tree.VarAssignmentExpr)
	return v
}

func (st *yySymType) varExprUnion() *tree.VarExpr {
	v, _ := st.union.(*tree.VarExpr)
	return v
}

func (st *yySymType) varExprsUnion() []*tree.VarExpr {
	v, _ := st.union.([]*tree.VarExpr)
	return v
}

func (st *yySymType) whenClauseUnion() *tree.When {
	v, _ := st.union.(*tree.When)
	return v
}

func (st *yySymType) whenClause2Union() *tree.WhenStmt {
	v, _ := st.union.(*tree.WhenStmt)
	return v
}

func (st *yySymType) whenClauseListUnion() []*tree.When {
	v, _ := st.union.([]*tree.When)
	return v
}

func (st *yySymType) whenClauseList2Union() []*tree.WhenStmt {
	v, _ := st.union.([]*tree.WhenStmt)
	return v
}

func (st *yySymType) whereUnion() *tree.Where {
	v, _ := st.union.(*tree.Where)
	return v
}

func (st *yySymType) windowSpecUnion() *tree.WindowSpec {
	v, _ := st.union.(*tree.WindowSpec)
	return v
}

func (st *yySymType) withClauseUnion() *tree.With {
	v, _ := st.union.(*tree.With)
	return v
}

func (st *yySymType) zeroFillOptUnion() bool {
	v, _ := st.union.(bool)
	return v
}

var yyR1 = [...]int{
	0, 530, 538, 538, 5, 5, 2, 6, 6, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 1, 1, 1, 1, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 118, 111, 111, 110, 528, 528,
	528, 529, 529, 107, 129, 128, 131, 131, 130, 130,
	127, 127, 123, 126, 126, 125, 125, 124, 119, 121,
	121, 120, 122, 122, 108, 96, 109, 473, 473, 472,
	472, 471, 471, 425, 425, 470, 470, 470, 469, 469,
	469, 468, 468, 467, 467, 466, 466, 464, 464, 465,
	463, 462, 462, 462, 460, 460, 460, 456, 456, 458,
	457, 457, 459, 451, 451, 454, 454, 452, 452, 452,
	452, 455, 450, 450, 450, 449, 449, 95, 95, 95,
	371, 371, 94, 94, 385, 385, 385, 385, 385, 383,
	383, 383, 383, 383, 383, 382, 382, 381, 381, 386,
	386, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 384, 384, 384, 384, 384, 384, 384, 384, 384,
	384, 85, 85, 85, 85, 85, 90, 90, 90, 535,
	535, 534, 534, 536, 536, 536, 536, 537, 537, 88,
	88, 88, 89, 380, 380, 380, 86, 87, 87, 370,
	370, 375, 375, 374, 374, 374, 374, 374, 374, 374,
	374, 374, 374, 374, 374, 374, 379, 379, 379, 377,
	377, 376, 376, 378, 378, 79, 79, 79, 82, 81,
	369, 369, 369, 369, 369, 369, 369, 369, 369, 80,
	80, 80, 80, 80, 80, 75, 75, 75, 75, 75,
	74, 74, 76, 76, 367, 367, 366, 91, 91, 92,
	532, 532, 531, 533, 533, 533, 533, 93, 99, 99,
	99, 99, 99, 99, 99, 98, 98, 101, 101, 100,
	102, 84, 84, 84, 84, 84, 84, 83, 83, 83,
	83, 83, 83, 83, 83, 83, 498, 498, 498, 500,
	500, 304, 305, 539, 307, 303, 303, 303, 494, 494,
	495, 496, 497, 497, 497, 97, 11, 11, 11, 11,
	11, 11, 11, 73, 78, 251, 251, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 252,
	252, 252, 252, 252, 252, 252, 252, 252, 252, 239,
	239, 239, 234, 234, 234, 234, 235, 235, 236, 236,
	237, 237, 237, 237, 238, 238, 297, 297, 256, 256,
	256, 258, 258, 257, 255, 253, 253, 253, 253, 253,
	253, 254, 254, 254, 259, 259, 71, 77, 77, 77,
	511, 511, 72, 522, 522, 428, 428, 318, 318, 317,
	317, 317, 317, 317, 317, 317, 317, 317, 317, 317,
	317, 317, 317, 317, 317, 433, 434, 314, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 42, 42, 42,
	42, 42, 42, 42, 42, 42, 42, 49, 52, 48,
	48, 48, 356, 356, 47, 540, 540, 292, 292, 60,
	59, 51, 61, 62, 63, 64, 65, 66, 46, 58,
	58, 58, 58, 58, 58, 58, 58, 69, 69, 445,
	445, 542, 542, 542, 67, 68, 427, 427, 427, 57,
	56, 55, 54, 53, 53, 45, 45, 44, 44, 50,
	135, 136, 311, 311, 311, 313, 313, 309, 541, 541,
	399, 399, 312, 312, 43, 43, 43, 43, 70, 310,
	310, 291, 308, 308, 308, 12, 12, 10, 15, 15,
	15, 15, 15, 15, 15, 15, 15, 15, 15, 15,
	15, 24, 25, 27, 364, 364, 361, 26, 18, 17,
	17, 21, 20, 16, 16, 19, 22, 23, 23, 9,
	9, 9, 9, 13, 13, 14, 156, 156, 206, 206,
	506, 506, 502, 502, 503, 503, 503, 504, 504, 505,
	505, 103, 439, 439, 439, 439, 439, 439, 8, 178,
	178, 438, 438, 438, 438, 438, 438, 368, 368, 483,
	483, 483, 484, 177, 177, 172, 172, 440, 440, 333,
	485, 485, 448, 448, 447, 447, 446, 446, 175, 175,
	176, 176, 159, 159, 114, 114, 453, 453, 453, 453,
	461, 461, 424, 424, 243, 243, 284, 284, 285, 285,
	149, 149, 150, 150, 150, 150, 150, 150, 491, 491,
	493, 493, 492, 174, 174, 170, 170, 171, 171, 171,
	169, 169, 168, 167, 167, 166, 164, 164, 164, 165,
	165, 165, 182, 182, 152, 152, 152, 151, 151, 151,
	151, 151, 269, 269, 269, 269, 269, 269, 269, 269,
	269, 269, 269, 269, 153, 153, 499, 499, 499, 429,
	429, 429, 436, 436, 266, 266, 267, 267, 265, 265,
	154, 154, 155, 155, 155, 155, 264, 264, 263, 157,
	157, 163, 162, 162, 158, 158, 158, 158, 274, 274,
	273, 273, 273, 273, 106, 112, 112, 113, 181, 181,
	272, 271, 271, 271, 180, 180, 179, 179, 173, 173,
	161, 161, 161, 161, 270, 160, 268, 527, 527, 526,
	526, 525, 523, 523, 523, 524, 524, 524, 524, 475,
	475, 475, 475, 475, 298, 298, 298, 302, 302, 301,
	301, 301, 301, 301, 306, 7, 7, 7, 7, 7,
	7, 31, 31, 31, 31, 31, 31, 31, 31, 31,
	31, 37, 190, 191, 38, 192, 192, 193, 193, 194,
	194, 195, 196, 197, 197, 197, 197, 36, 183, 183,
	184, 184, 185, 185, 186, 187, 187, 187, 189, 188,
	35, 35, 28, 142, 142, 143, 143, 143, 143, 145,
	145, 240, 240, 240, 144, 144, 146, 146, 146, 507,
	510, 508, 508, 512, 512, 512, 513, 513, 513, 513,
	514, 514, 29, 132, 137, 517, 517, 517, 516, 516,
	518, 518, 519, 519, 288, 288, 289, 289, 140, 141,
	141, 139, 134, 148, 148, 148, 148, 148, 133, 138,
	509, 515, 515, 515, 365, 365, 362, 363, 363, 360,
	359, 359, 359, 521, 521, 520, 520, 520, 299, 299,
	30, 355, 355, 357, 358, 358, 358, 349, 349, 349,
	349, 34, 353, 353, 354, 354, 354, 354, 354, 350,
	350, 352, 352, 348, 348, 348, 348, 348, 33, 147,
	147, 347, 347, 344, 344, 342, 342, 343, 343, 341,
	341, 341, 345, 345, 41, 40, 40, 40, 346, 346,
	32, 32, 32, 116, 115, 115, 115, 287, 287, 286,
	286, 117, 39, 218, 218, 413, 413, 413, 413, 413,
	431, 431, 431, 414, 414, 414, 415, 415, 415, 416,
	416, 416, 416, 416, 430, 430, 432, 432, 432, 387,
	387, 388, 388, 388, 391, 391, 405, 405, 406, 406,
	404, 404, 411, 411, 410, 410, 409, 409, 408, 408,
	407, 407, 407, 407, 402, 402, 401, 401, 389, 389,
	389, 389, 389, 390, 390, 390, 400, 400, 403, 403,
	228, 228, 262, 262, 226, 226, 227, 227, 261, 261,
	224, 224, 225, 225, 225, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	260, 260, 260, 260, 260, 260, 260, 260, 260, 260,
	481, 481, 482, 230, 230, 241, 241, 241, 241, 241,
	241, 229, 229, 231, 231, 207, 207, 205, 205, 198,
	198, 199, 199, 200, 200, 200, 204, 204, 203, 203,
	203, 203, 201, 201, 202, 202, 202, 202, 202, 202,
	373, 373, 478, 478, 479, 479, 474, 474, 474, 477,
	477, 477, 477, 477, 480, 480, 480, 476, 476, 208,
	282, 282, 282, 300, 300, 300, 300, 281, 281, 281,
	223, 223, 222, 222, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 220, 220, 220, 220,
	220, 220, 220, 220, 220, 220, 372, 372, 315, 315,
	316, 316, 250, 249, 249, 249, 249, 249, 247, 248,
	246, 246, 246, 246, 246, 245, 245, 244, 244, 244,
	351, 351, 242, 242, 233, 233, 233, 232, 232, 232,
	412, 322, 322, 322, 322, 322, 322, 322, 322, 322,
	322, 322, 322, 322, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 324, 324, 324, 324, 324,
	324, 324, 324, 324, 324, 280, 280, 280, 325, 325,
	330, 330, 490, 490, 489, 209, 209, 209, 210, 210,
	210, 210, 210, 210, 210, 210, 210, 219, 219, 219,
	396, 396, 396, 396, 397, 397, 397, 397, 398, 398,
	398, 394, 394, 395, 395, 334, 335, 335, 437, 437,
	392, 392, 393, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 279, 279, 279, 279, 279, 279, 279, 279,
	279, 279, 444, 444, 444, 276, 276, 276, 276, 276,
	276, 276, 276, 276, 276, 276, 276, 276, 276, 276,
	276, 501, 501, 501, 486, 486, 486, 487, 487, 487,
	487, 487, 487, 487, 487, 487, 487, 487, 487, 488,
	488, 488, 488, 488, 488, 488, 488, 488, 488, 488,
	488, 488, 488, 488, 488, 488, 278, 278, 278, 277,
	277, 277, 277, 277, 277, 277, 277, 277, 277, 277,
	277, 277, 277, 277, 336, 336, 337, 337, 441, 441,
	441, 441, 441, 441, 442, 442, 443, 443, 443, 443,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 435,
	435, 435, 435, 435, 435, 435, 435, 435, 435, 323,
	275, 275, 275, 338, 331, 331, 332, 332, 326, 326,
	326, 326, 326, 326, 326, 328, 328, 328, 328, 328,
	328, 328, 328, 328, 328, 328, 321, 321, 321, 321,
	321, 321, 321, 321, 321, 321, 321, 327, 327, 329,
	329, 340, 340, 340, 339, 339, 339, 339, 339, 339,
	339, 221, 221, 221, 221, 320, 320, 320, 319, 319,
	319, 319, 319, 319, 319, 319, 319, 319, 319, 319,
	211, 211, 211, 211, 215, 215, 217, 217, 217, 217,
	217, 217, 217, 217, 217, 217, 217, 217, 217, 217,
	216, 216, 216, 216, 216, 214, 214, 214, 214, 214,
	212, 212, 212, 212, 212, 212, 212, 212, 212, 212,
	212, 212, 212, 212, 212, 212, 212, 212, 104, 105,
	105, 213, 283, 283, 417, 417, 420, 420, 418, 418,
	419, 421, 421, 421, 422, 422, 422, 423, 423, 423,
	426, 426, 290, 290, 290, 296, 296, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 295, 295, 295, 295, 295, 295,
	295, 295, 295, 295, 294, 294, 294, 294, 294, 294,
	294, 294, 294, 294, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293, 293, 293, 293,
	293, 293, 293, 293, 293, 293, 293,
}

var yyR2 = [...]int{
	0, 1, 1, 1, 1, 3, 3, 1, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 0,
	1, 1, 1, 0, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 4, 6, 4, 0, 1,
	1, 0, 1, 5, 2, 2, 6, 9, 6, 9,
	4, 7, 8, 0, 1, 1, 2, 4, 6, 1,
	2, 4, 0, 2, 10, 10, 2, 0, 2, 1,
	3, 3, 3, 0, 2, 1, 3, 5, 0, 2,
	3, 1, 3, 1, 1, 1, 3, 1, 1, 1,
	1, 0, 3, 3, 0, 3, 3, 0, 1, 3,
	0, 1, 3, 0, 2, 1, 2, 3, 4, 3,
	3, 1, 0, 1, 1, 0, 1, 8, 5, 7,
	0, 3, 8, 5, 1, 3, 3, 3, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 4, 1,
	3, 1, 2, 2, 2, 2, 2, 2, 1, 2,
	2, 2, 2, 1, 1, 2, 2, 1, 1, 1,
	1, 1, 2, 2, 2, 1, 2, 1, 2, 2,
	1, 2, 1, 1, 2, 2, 1, 1, 1, 3,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 4, 4, 1,
	3, 3, 1, 2, 2, 2, 1, 2, 2, 3,
	4, 4, 6, 1, 1, 1, 2, 4, 6, 1,
	4, 1, 3, 3, 4, 4, 4, 4, 3, 3,
	2, 4, 4, 2, 2, 2, 1, 1, 1, 1,
	1, 1, 3, 1, 3, 1, 1, 1, 2, 2,
	0, 1, 4, 2, 4, 1, 5, 3, 2, 1,
	2, 2, 4, 4, 5, 2, 1, 3, 4, 4,
	1, 2, 9, 7, 1, 3, 3, 1, 1, 3,
	1, 3, 2, 1, 2, 1, 2, 2, 1, 1,
	1, 1, 1, 1, 1, 4, 4, 2, 4, 3,
	3, 1, 1, 1, 1, 1, 1, 2, 3, 4,
	7, 2, 3, 3, 4, 5, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	2, 1, 1, 1, 1, 6, 1, 1, 1, 1,
	1, 1, 1, 7, 4, 1, 3, 2, 4, 5,
	5, 6, 5, 5, 3, 2, 2, 1, 3, 4,
	3, 7, 5, 8, 2, 2, 1, 3, 2, 0,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 0, 1, 0, 1,
	2, 1, 3, 2, 1, 2, 2, 1, 2, 3,
	2, 3, 3, 3, 1, 1, 7, 7, 8, 8,
	0, 4, 7, 0, 3, 0, 2, 0, 1, 1,
	1, 1, 4, 2, 2, 3, 3, 4, 5, 3,
	4, 4, 2, 2, 2, 3, 0, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 4, 3, 2,
	5, 5, 0, 2, 7, 0, 1, 0, 1, 5,
	5, 3, 3, 2, 4, 4, 4, 4, 4, 1,
	1, 1, 3, 3, 1, 1, 1, 6, 8, 0,
	1, 1, 1, 1, 5, 5, 0, 1, 1, 3,
	3, 3, 4, 6, 7, 4, 4, 7, 8, 3,
	3, 3, 0, 2, 2, 0, 2, 2, 1, 1,
	1, 1, 0, 1, 4, 4, 5, 4, 3, 1,
	3, 1, 1, 3, 5, 2, 3, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 4, 4, 4, 1, 3, 1, 4, 6, 6,
	4, 4, 4, 4, 4, 3, 6, 3, 5, 1,
	1, 2, 2, 11, 8, 9, 1, 3, 2, 4,
	0, 2, 0, 1, 1, 1, 1, 0, 1, 0,
	1, 4, 2, 1, 5, 4, 4, 2, 5, 1,
	3, 2, 1, 5, 4, 4, 2, 0, 5, 0,
	1, 3, 3, 1, 3, 1, 3, 1, 3, 4,
	0, 1, 0, 1, 1, 3, 1, 1, 0, 4,
	1, 3, 2, 1, 0, 8, 0, 4, 7, 4,
	0, 2, 0, 2, 0, 2, 0, 4, 1, 3,
	1, 1, 5, 3, 4, 6, 4, 5, 2, 3,
	1, 3, 6, 0, 3, 0, 1, 2, 4, 4,
	0, 1, 3, 1, 3, 3, 0, 1, 1, 0,
	2, 2, 0, 2, 3, 3, 3, 1, 3, 3,
	3, 3, 1, 2, 2, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 7, 7, 1, 1, 1, 0,
	1, 1, 1, 1, 0, 2, 0, 3, 0, 2,
	1, 3, 1, 2, 3, 5, 0, 1, 2, 1,
	3, 1, 1, 1, 4, 4, 4, 3, 2, 2,
	2, 3, 2, 3, 4, 1, 3, 4, 0, 2,
	1, 1, 2, 2, 0, 1, 2, 4, 1, 3,
	1, 3, 2, 3, 1, 4, 3, 0, 1, 1,
	2, 5, 2, 2, 2, 0, 2, 3, 3, 0,
	1, 3, 1, 3, 0, 1, 2, 1, 1, 0,
	1, 2, 1, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 7, 1, 1, 7, 1, 3, 0, 1, 1,
	3, 1, 3, 0, 1, 1, 1, 12, 1, 3,
	0, 1, 1, 3, 1, 1, 2, 4, 1, 1,
	9, 8, 7, 1, 2, 2, 3, 3, 3, 0,
	4, 1, 1, 1, 1, 1, 0, 1, 1, 1,
	4, 1, 1, 3, 4, 3, 0, 1, 1, 1,
	0, 2, 7, 8, 8, 0, 3, 3, 0, 2,
	0, 3, 0, 5, 1, 3, 0, 3, 3, 0,
	2, 9, 6, 0, 2, 2, 3, 3, 4, 4,
	1, 0, 2, 2, 1, 3, 2, 1, 3, 2,
	1, 3, 2, 0, 1, 3, 4, 3, 1, 1,
	4, 1, 3, 1, 1, 1, 1, 0, 1, 1,
	1, 11, 0, 2, 3, 2, 3, 1, 1, 1,
	3, 3, 4, 0, 2, 2, 2, 2, 6, 0,
	4, 1, 1, 0, 3, 0, 1, 1, 2, 4,
	4, 4, 0, 1, 7, 9, 10, 8, 0, 2,
	11, 9, 11, 2, 2, 4, 5, 1, 3, 0,
	3, 5, 10, 0, 2, 0, 3, 2, 4, 3,
	0, 2, 1, 0, 2, 3, 0, 2, 3, 0,
	3, 2, 4, 3, 0, 1, 0, 1, 1, 0,
	6, 0, 3, 5, 0, 4, 0, 3, 1, 3,
	4, 5, 0, 3, 1, 3, 2, 3, 1, 2,
	0, 4, 6, 5, 0, 2, 0, 2, 4, 5,
	4, 5, 1, 5, 6, 5, 0, 3, 0, 1,
	1, 3, 3, 3, 0, 4, 1, 3, 3, 3,
	0, 1, 1, 3, 2, 3, 3, 3, 4, 4,
	3, 3, 3, 3, 4, 4, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 5, 4,
	1, 3, 3, 2, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 3, 1, 3, 0,
	1, 1, 3, 1, 1, 1, 1, 1, 7, 9,
	7, 9, 2, 1, 7, 9, 7, 9, 8, 5,
	0, 1, 0, 1, 1, 1, 1, 3, 3, 1,
	1, 1, 1, 1, 1, 1, 1, 0, 1, 3,
	1, 3, 5, 1, 1, 1, 1, 1, 3, 5,
	0, 1, 1, 2, 1, 2, 2, 1, 1, 2,
	2, 2, 3, 3, 2, 2, 1, 5, 6, 4,
	1, 1, 1, 5, 4, 1, 1, 2, 0, 1,
	1, 2, 5, 0, 1, 1, 2, 2, 3, 3,
	1, 1, 2, 2, 2, 0, 1, 2, 2, 2,
	0, 3, 0, 3, 1, 1, 1, 1, 1, 1,
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 1, 1, 3, 5, 2,
	2, 2, 2, 1, 1, 2, 5, 6, 6, 6,
	1, 1, 1, 1, 1, 4, 4, 4, 0, 2,
	0, 1, 1, 2, 4, 1, 2, 2, 1, 2,
	2, 1, 2, 2, 2, 2, 2, 0, 1, 1,
	1, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 2, 5, 0, 1, 3, 0, 1, 0, 2,
	0, 1, 6, 8, 6, 6, 5, 5, 5, 6,
	6, 6, 6, 5, 6, 6, 6, 6, 6, 6,
	6, 6, 1, 1, 1, 4, 4, 6, 8, 6,
	4, 5, 4, 4, 4, 3, 4, 6, 6, 7,
	4, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 2, 2, 8, 4,
	2, 3, 2, 4, 2, 2, 4, 6, 2, 2,
	4, 6, 4, 2, 0, 1, 2, 3, 1, 1,
	1, 1, 1, 1, 0, 2, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 3,
	0, 1, 1, 3, 0, 1, 1, 3, 3, 3,
	3, 3, 2, 1, 1, 3, 4, 3, 4, 3,
	4, 3, 4, 3, 4, 1, 3, 4, 4, 5,
	4, 5, 3, 4, 5, 6, 1, 0, 2, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 2, 2, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 2, 1, 1, 1, 2,
	3, 1, 1, 1, 2, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	2, 2, 2, 2, 2, 1, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 2, 2, 4, 4, 1, 2, 3,
	5, 1, 1, 3, 0, 1, 0, 3, 0, 3,
	3, 0, 3, 5, 0, 3, 5, 0, 1, 1,
	0, 1, 1, 2, 2, 0, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1,
}

var yyChk = [...]int{
	-1000, -530, -538, -2, -5, 590, -1, -4, -105, -79,
	-118, -7, -107, -108, -8, -103, -9, -10, -12, -83,
	-98, -100, -102, -101, -42, -11, -97, -74, -75, -85,
	-91, -94, -95, -96, -109, -104, -106, -149, -110, -111,
	583, -80, -81, -82, 593, -31, -30, -29, -28, -132,
	-137, 589, 437, 13, 486, -13, -14, -491, -15, 256,
	-303, -304, -305, -307, -539, -43, -44, -45, -53, -54,
	-55, -56, -57, -67, -68, -69, -46, -47, -48, -51,
	-49, -60, -59, -61, -62, -63, -64, -65, -66, -50,
	-135, -136, -70, -52, -72, -71, -77, -73, -78, -134,
	-139, 231, -76, 75, -86, -87, -88, -89, -90, -92,
	-93, 363, 369, 426, 582, 60, -150, -152, 594, 595,
	157, 158, 160, 161, -32, -33, -34, -35, -36, -37,
	-39, -38, -40, -41, 227, 15, 523, -16, -19, -17,
	-20, -18, -26, -27, -25, -22, -24, -133, -23, -138,
	251, 250, 37, 317, 318, 319, 367, 249, 228, 14,
	30, 41, 343, -151, 81, 229, -153, 12, 598, -6,
	-3, -2, -119, -123, -127, -130, -131, -128, -129, -4,
	-105, 115, 241, 584, -300, 359, 585, 587, 586, 84,
	92, -293, -295, 363, 369, 582, 595, 528, 529, 530,
	531, 532, 533, 534, 535, 536, 537, 538, 539, 540,
	541, 542, 543, 544, 545, 546, 547, 548, 549, 550,
	552, 553, 554, 555, 556, 557, 558, 559, 560, 561,
	562, 563, 564, 565, 489, 569, 570, 571, 572, 517,
	341, 342, 520, 268, 292, 394, 298, 305, 157, 176,
	170, 198, 190, 165, 272, 310, 273, 91, 160, 472,
	105, 449, 423, 163, 287, 289, 291, 518, 294, 293,
	295, 297, 274, 344, 186, 181, 286, 270, 179, 275,
	39, 276, 203, 277, 278, 525, 445, 340, 451, 302,
	421, 180, 446, 290, 448, 207, 211, 463, 464, 174,
	175, 453, 466, 202, 205, 206, 248, 42, 522, 260,
	467, 209, 201, 197, 475, 306, 304, 200, 173, 196,
	271, 64, 213, 212, 214, 417, 418, 419, 420, 279,
	280, 357, 462, 193, 182, 345, 166, 22, 470, 255,
	450, 370, 281, 299, 307, 208, 210, 262, 267, 524,
	425, 266, 303, 468, 178, 259, 288, 254, 471, 167,
	372, 282, 161, 296, 465, 474, 63, 385, 172, 164,
	245, 158, 264, 269, 283, 284, 285, 515, 309, 308,
	300, 194, 261, 199, 184, 171, 195, 159, 263, 473,
	386, 580, 343, 404, 192, 189, 265, 238, 469, 452,
	162, 408, 387, 187, 311, 576, 577, 578, 358, 339,
	312, 313, 185, 252, 443, 444, 316, 414, 332, 388,
	424, 395, 389, 220, 320, 455, 457, 204, 579, 321,
	322, 323, 447, 324, 325, 326, 327, 362, 55, 57,
	93, 95, 596, -378, -376, -300, 582, 369, 363, 343,
	595, -4, -192, -300, 597, -159, 38, -205, -300, -159,
	-76, -14, -13, -151, -152, -205, 235, -308, 23, 421,
	-84, 422, 231, 81, -300, -9, -96, -8, -103, -74,
	-149, 426, -306, -300, 317, 317, -306, 235, -300, 266,
	402, -428, 241, -382, -355, 267, -381, -357, -384, -358,
	31, 227, 229, 228, 263, 15, 367, 237, 13, 12,
	368, 249, 24, 25, 27, 14, 369, 371, 28, 372,
	375, 376, 377, 41, 380, 381, 256, 84, 92, 87,
	274, -191, -300, -332, -326, 112, 257, -328, -321, -322,
	-324, -470, -464, -319, 81, 139, 140, 147, 113, -323,
	-412, 35, 115, 532, 487, -276, -277, -278, -279, -280,
	-300, -465, -463, 87, 96, 99, 102, 103, 101, 100,
	151, 183, 98, 88, 152, -152, 84, -486, 541, -294,
	562, 569, 570, 571, 572, 561, 60, -435, -443, 234,
	-441, 150, 188, 252, 184, 13, 145, 414, 185, 538,
	558, 489, 542, 565, 534, 535, 536, 529, 530, 531,
	533, 543, 545, 557, -444, 553, 563, 564, 551, 566,
	567, 568, 86, 85, 556, 555, 544, 539, 540, 546,
	528, 537, 547, 548, 554, 559, 560, 351, 105, 352,
	353, 479, 344, 354, 241, 421, 69, 355, 356, 357,
	358, 359, 486, 360, 70, 361, 350, 256, 404, 362,
	187, 204, 491, 490, 492, 483, 480, 478, 481, 482,
	484, 485, 549, 550, 552, -112, -113, 574, -168, -169,
	-269, 11, 6, 7, 8, 9, -528, 423, 524, 87,
	162, 159, -369, 162, 111, 167, 166, -369, 320, 262,
	364, -142, 238, 341, 404, 324, 93, 266, -349, -347,
	518, -346, -430, 314, 310, 236, -143, 246, 245, 106,
	479, 234, 108, 378, 305, 55, 57, -502, -503, 224,
	225, 226, -493, 512, -492, -300, 353, 95, 26, 235,
	364, 262, 457, 455, 456, 458, 459, 460, 461, -58,
	-445, -427, 452, 451, -312, 444, 450, 442, 454, 445,
	342, 326, 325, 227, 591, 513, -290, 388, 424, 476,
	477, 365, 425, 463, 465, 446, 105, 191, 188, 238,
	235, 341, 479, 404, 93, 324, -502, 159, 463, 465,
	266, 402, 40, -375, 414, -374, -376, 464, 475, 85,
	86, 462, -290, 105, 443, 443, -169, -269, -168, -150,
	-152, -106, -491, 236, 341, 404, 266, 237, 235, 516,
	238, 479, 234, 317, 364, 262, 324, 93, -429, -499,
	31, -436, 221, 222, 223, 32, 33, -1, 119, 598,
	-326, -326, -6, 601, -6, -326, -300, -300, 154, -211,
	-215, -212, -214, -213, -217, -216, 188, 189, 150, 192,
	194, 195, 196, 197, 198, 199, 200, 201, 202, 205,
	206, 203, 30, 204, 252, 184, 185, 186, 187, 207,
	170, 190, 521, 215, 171, 216, 172, 217, 173, 218,
	174, 175, 219, 176, 179, 180, 181, 182, 178, 153,
	81, 153, 87, -175, 258, -205, 153, -175, -169, -168,
	-169, -205, -281, -300, 423, 122, -84, -84, 422, -494,
	-495, -496, -498, 231, 422, 421, 153, 274, 16, -306,
	-306, 79, -205, -357, 266, -382, -355, 35, 78, 154,
	239, 154, 78, 81, 365, 341, 404, 366, 479, 235,
	378, 238, 266, 379, 341, 404, 235, 238, 479, 266,
	341, 235, 238, 404, 266, 379, 442, 443, 238, 26,
	370, 373, 374, 443, -449, 475, 154, 111, 108, 109,
	110, -326, 129, -339, 122, 123, 124, 125, 126, 127,
	128, 136, 135, 146, 139, 140, 141, 142, 143, 144,
	145, 137, 138, 132, 112, 130, 134, 131, 114, -152,
	-326, -332, 60, -324, -324, -324, -324, -412, -330, -326,
	81, 81, 153, 100, 87, -326, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, -442, 81,
	81, -336, -337, 81, 81, -319, -281, 81, 87, 87,
	81, 81, 81, 87, -337, -337, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, -169, 154, 81,
	-114, 38, -171, 21, -153, -152, 20, 31, 32, 31,
	32, 31, 32, 31, 32, 96, 596, 220, 468, 523,
	165, 166, 167, -190, -300, -192, -183, -300, 238, -143,
	108, -344, 241, -344, -344, -344, -344, -344, 237, -344,
	-205, 516, 515, 235, 235, 235, -344, 486, 122, 122,
	58, -504, 169, 154, -493, -174, 81, -311, 130, 134,
	-311, 23, 264, 264, 264, -311, 304, -540, -541, 16,
	132, -309, -541, -309, -309, -311, -542, 237, 453, 42,
	265, 264, -170, -171, -170, 447, 443, -399, 448, 449,
	-313, -541, -312, -311, -311, -312, -311, -311, -311, 235,
	238, 479, 324, 592, -540, -540, 30, 30, -428, -205,
	-428, 513, -291, -300, -428, -428, -428, -505, 240, -535,
	-534, 466, -537, 468, 159, -376, 159, -376, -357, 266,
	266, 154, 122, 23, -377, 122, 133, -376, -376, -377,
	-377, -229, 40, -299, 150, -300, 87, -229, 40, -532,
	-531, -205, -170, -153, -152, 82, 82, 82, -428, -428,
	-428, -428, -428, -430, -428, -428, -428, -428, -306, -183,
	-192, 241, -428, -428, -154, -155, 141, -326, -300, -154,
	-3, -121, -120, 116, 117, 119, 585, 359, 584, 588,
	582, -376, 40, -423, 386, 385, -417, -419, 81, -418,
	81, -418, -418, -418, -418, -418, 81, 81, -420, 81,
	-420, -420, -417, -421, 81, -421, -422, 81, -422, -421,
	-300, -331, -332, -300, 38, -438, 60, -149, 81, 30,
	81, -300, -439, 60, -149, 81, 30, -170, -114, -171,
	153, 96, 87, -84, 82, 154, -497, 102, 103, -500,
	202, 194, -300, -99, 87, -7, -8, -9, -10, -42,
	-74, -149, -466, -464, 81, 31, 413, 78, 16, -383,
	235, 479, 364, 262, 238, 341, -381, -364, -361, -359,
	-299, -357, -360, -359, -386, -281, 443, -115, 427, 316,
	-326, -326, -326, -326, -326, 101, 112, 339, 102, 103,
	-321, -340, 31, 312, 313, -322, -322, -322, -322, -322,
	-322, -322, -322, -322, -322, -322, -322, -329, -338, -412,
	81, 132, 130, 134, 131, 114, -324, -324, -322, -322,
	82, 154, -490, -489, 116, -326, -326, -300, -487, -488,
	493, 494, 495, 496, 497, 498, 499, 500, 501, 502,
	503, 355, 350, 356, 354, 344, 362, 357, 358, 187,
	510, 511, 504, 505, 506, 507, 508, 509, -331, -331,
	-326, -487, -331, -275, 32, 31, -332, -332, -332, 82,
	-326, -501, 337, 336, 338, -172, -300, -331, 82, 82,
	82, 96, -332, -332, -331, -322, -331, -488, -275, -275,
	-275, 141, -332, -332, -275, -275, -275, -275, 141, -275,
	-275, -275, -275, -275, -275, -275, -275, 82, 82, 82,
	-170, -113, -447, -446, -326, 40, 575, -114, -326, -167,
	-166, -326, -529, 87, 87, 599, 469, 470, 163, 166,
	165, 34, 81, 81, 153, -344, 486, -205, 112, -507,
	-300, -365, -362, -359, -300, -300, -355, -300, -300, 523,
	-344, 516, -344, -344, -344, -205, -240, 52, 53, 54,
	-359, -144, 55, 56, -505, -492, 34, -173, -300, -265,
	17, -324, -324, -359, 266, -540, -311, -311, -292, -291,
	-313, -308, -313, -313, -265, -541, -311, -311, -313, -309,
	-265, -300, 443, -265, -265, -399, -310, -300, -310, -344,
	-291, -292, -292, -205, -251, -252, 232, 348, 349, 230,
	228, 11, 229, -260, 305, -345, 487, -235, -236, 76,
	41, -238, 390, 383, 268, 272, 91, 273, 423, 274,
	237, 276, 277, 278, 293, 295, 248, 279, 280, 281,
	414, 282, 158, 294, 283, 284, 285, 366, -230, 6,
	327, 40, 50, 51, 436, 435, 526, 523, 269, -507,
	-507, 30, 30, -365, -300, -300, -162, -157, -161, -158,
	-163, -268, -270, -160, 81, -205, -152, -300, 154, 467,
	469, 470, -535, -377, -535, -377, 31, 413, -380, 413,
	31, -355, -374, 463, 465, -370, 87, 414, -360, -379,
	78, 150, -446, -377, -377, -379, -379, 149, 154, -533,
	468, 469, 224, -114, -207, -205, -507, -364, -355, -300,
	-428, -207, -207, -300, -300, 81, 35, -300, -300, -264,
	154, -263, 16, -301, -300, 34, 87, 153, -264, -122,
	-120, 118, -326, -6, 584, -326, -6, -6, -326, -6,
	-326, -426, 387, 96, 96, -283, 87, -283, 96, 96,
	96, 82, 87, -368, 78, -440, -333, -485, 574, -177,
	82, -172, -483, -484, -172, -176, -300, -440, -177, 82,
	-483, -114, -114, -300, 23, -84, -495, 153, 154, -173,
	-383, -363, -360, -385, 141, -300, -371, 154, 523, 602,
	85, 239, -521, -520, 405, 82, 154, -450, 240, 486,
	87, 599, 220, 101, 339, 102, 103, -412, -332, -329,
	-324, -324, -322, -322, -327, 253, -327, 111, -326, -325,
	-489, 118, -326, 34, 154, 79, 153, 82, 82, 16,
	16, 82, -326, 82, 82, 82, 82, 16, 16, -326,
	82, 153, 82, 82, 82, 82, 79, 82, 154, 82,
	154, -332, -326, -332, 82, 82, 82, -326, -326, -326,
	-332, 82, -326, -326, -326, -326, -326, -326, -326, -326,
	-393, 438, -393, -393, 154, 82, 87, 154, 22, 154,
	-164, 36, 37, -287, -286, 87, 164, 167, 167, 166,
	-191, -193, -194, -195, -196, -197, 132, 155, 156, -184,
	-185, -186, -187, -211, -281, 189, 192, 194, 195, 196,
	197, 198, 199, 200, 201, 202, 205, 206, 203, 204,
	252, 184, 185, 186, 187, 207, 170, 190, 171, 172,
	173, 174, 175, 176, 179, 180, 181, 182, 178, -300,
	-205, -174, 35, -510, 391, -522, 154, 40, -520, 479,
	-140, 316, -348, 79, -147, 16, 81, -205, -344, -205,
	-205, -205, -218, 34, 16, -156, -206, -300, 81, 82,
	154, -326, -356, 79, -300, -292, -265, -265, -205, -300,
	-265, -265, -311, -313, -313, -309, 153, -291, -174, 154,
	-204, -297, -201, -203, 243, -316, -202, 246, -479, 244,
	242, 106, 247, 301, 107, 237, -297, -297, 243, -239,
	239, 34, -297, -254, 237, 301, 244, 20, -253, 237,
	107, -300, 243, 247, 242, -296, 122, -290, 149, 239,
	42, 366, -296, 527, -296, -296, -296, -296, -296, -296,
	-296, 275, 275, -296, -296, -296, -296, -296, -296, -296,
	-296, -296, -296, -296, 159, -296, -296, -296, -296, -296,
	-296, 81, 270, 271, -511, 391, 30, 347, 347, -522,
	30, -148, 341, 30, -271, -272, -273, -274, 67, 71,
	73, 68, 69, 70, 74, 30, 154, -298, -302, 34,
	-300, 87, -298, -152, -157, -162, -298, 81, -534, -536,
	471, 468, 474, -379, -379, 239, 81, 122, -379, -379,
	40, -299, -531, 475, 469, -182, 23, 154, 78, -207,
	-184, -192, -265, -155, -157, -300, 87, -300, 141, -265,
	119, -6, 117, -126, -125, -124, 120, 582, 588, 119,
	119, 119, 82, 82, 82, 154, 82, 82, 82, 154,
	82, 154, -453, 448, 39, 154, 81, 82, 154, 60,
	154, 122, 82, 154, 82, 60, -182, 153, 423, -300,
	-464, 82, -385, 154, 239, 153, 153, -361, 369, -299,
	-363, 20, 523, -281, 38, -287, 599, 82, -327, -327,
	111, -324, -321, 82, 119, -326, 117, -209, -211, 385,
	386, -210, -216, 150, 188, 252, 187, 186, 184, 385,
	386, -229, -300, -326, -326, 82, -326, -326, 16, -300,
	-229, -322, -326, -169, 82, 82, -392, -393, -392, -392,
	82, 82, 82, 82, -392, 82, 82, 82, 82, 82,
	82, 82, 82, 81, -446, -453, -326, -326, -166, -165,
	43, 600, 154, 122, 167, 377, 82, 154, -281, 82,
	154, -211, -174, 34, -513, 450, 393, 403, -296, -318,
	-317, 343, 41, -433, 414, 399, 400, -362, 266, -300,
	-519, 94, 122, 78, 331, 332, 333, 334, -342, -343,
	-341, -345, -507, -228, -262, -300, 87, 81, -226, 523,
	-205, 81, 81, 81, -413, 321, -211, -205, -156, -300,
	16, 154, -506, 153, -1, -300, -355, -311, -265, -541,
	-265, -311, -311, -313, -300, 34, -252, -208, -281, -202,
	-478, -479, -344, -300, 107, -478, 107, 81, -208, -281,
	-281, -255, -310, -281, -300, -300, -300, -258, -257, -281,
	-300, -300, -300, 107, 107, -234, 40, 47, 48, 49,
	-296, -296, 191, -237, 40, 413, 415, 416, 96, 96,
	96, 96, 87, 87, 87, -296, -296, 96, 87, -302,
	87, -480, 166, 44, 45, 96, 96, 96, 96, 40,
	87, -241, 40, 286, 290, 287, 288, 289, 87, 96,
	40, 96, 40, 96, 40, -300, 81, -481, -482, 87,
	-513, -296, 347, -376, 122, -318, -518, 316, -141, 91,
	31, -178, 232, 229, -507, -367, -366, -281, -161, -161,
	-161, -161, 67, 67, 67, 72, 67, 72, 67, -273,
	-367, -163, -174, -302, 82, -527, -526, -525, -523, 75,
	240, 76, -331, 468, 472, 473, -363, -314, 87, -370,
	14, -205, -205, -432, 296, 297, 82, -267, 18, 153,
	-267, 115, -6, -122, -124, -326, -6, -326, 584, 359,
	585, 87, 96, 96, -461, 433, 428, 430, 107, -333,
	-448, -447, 60, -149, -172, -440, -484, -446, -300, 60,
	-149, -440, -300, 96, 16, -360, -355, 141, 141, -300,
	370, -371, 87, 392, 87, 235, 600, -287, -321, -326,
	82, -219, 175, 174, -219, 82, -418, -418, -417, -420,
	-417, -219, -219, 82, 82, 23, 82, 82, 82, -326,
	82, 82, 154, -437, 488, -392, -392, -392, -392, -392,
	-392, -392, -392, -392, -392, -392, -392, -392, -392, -335,
	-334, 258, -461, 44, 45, -286, 87, 87, 87, -195,
	-211, 233, -186, 40, 34, -149, -514, 91, -508, 87,
	-300, -515, 91, 394, 152, 345, 40, 395, 396, 411,
	340, 96, 96, 401, -509, -300, -148, -517, 51, 122,
	87, -205, -341, -290, 149, 277, 324, 82, 154, -296,
	-296, -198, -199, -200, -208, -201, -203, 34, 81, 81,
	-198, -198, -198, -414, 323, 20, 96, 140, -175, 79,
	153, -157, -206, -300, 141, 82, -265, -300, -265, -265,
	-311, -149, -256, 44, 46, -211, -476, -300, -474, -476,
	-300, -474, -474, -344, -326, -256, -208, 239, 30, 229,
	-259, 329, 330, -372, 302, 112, -372, 154, -164, -300,
	-229, -229, 30, 87, 87, -207, 82, 154, 122, -514,
	-508, 122, -377, 87, -515, -519, 122, 87, 154, -178,
	-178, -265, 154, 122, -180, -179, 78, 79, -181, 78,
	-179, 67, 67, -265, -525, -524, 23, -479, -479, -479,
	82, 82, -266, 19, 20, 141, -266, 119, 117, 119,
	119, -300, 82, 82, -424, 576, -457, -459, 428, 20,
	20, 14, 82, -440, -440, -355, -371, 414, -205, 600,
	-326, 82, -326, 82, 87, -169, 20, -424, -188, -211,
	-319, -149, -145, 523, 87, -512, 405, 87, 87, 96,
	40, 96, 152, 397, -434, -141, -516, 91, 122, 599,
	81, -296, -296, -296, -300, -262, -319, -319, 82, 154,
	-149, -227, -261, -300, 87, -198, 82, 82, 82, -415,
	257, 96, 140, 96, 140, 96, -298, -157, -300, -265,
	-506, 153, -265, -265, -281, -223, -222, -220, 101, 112,
	40, 383, -221, 91, 149, 291, 294, 293, 269, 292,
	-250, -315, 78, 389, 329, 330, -345, 576, 517, 242,
	106, 107, 371, -316, 81, 81, 79, 311, 81, 81,
	-476, 82, -256, -281, 40, -259, 40, 302, -257, 149,
	-229, 82, -482, 87, -512, 87, -379, -517, 87, -507,
	-169, -366, -446, -326, 81, -326, 81, 67, 11, 18,
	-326, -332, 241, -6, 585, 359, -243, 577, 87, 20,
	87, -455, 87, -367, -117, -451, -399, 82, 82, -392,
	-395, -394, -398, 434, 303, 441, -332, -243, 522, -145,
	-146, 59, 475, 20, 523, 344, 40, 96, 40, 398,
	87, 102, 103, -288, -289, 87, -350, -352, -281, 81,
	-229, -231, -299, 150, 87, -226, -200, 82, 154, -296,
	-296, 82, -224, -225, -260, -345, -116, -115, -224, -416,
	158, 96, 140, 96, 96, -265, -265, -220, 101, -322,
	87, -231, -232, 40, 290, 286, 122, 122, -233, 40,
	270, 271, -242, 81, 301, 14, 191, 81, 107, 107,
	-205, -350, -350, -477, 331, 332, 333, 335, 334, -477,
	-350, -350, 81, -373, -372, -322, -296, 149, -516, -170,
	-173, -475, -300, 242, 20, 20, -300, -300, -284, 578,
	96, 87, 430, -425, 579, -460, 433, -454, -452, 428,
	429, 430, 431, 82, -397, 114, 397, 401, -320, -323,
	96, 99, 183, 152, -284, -189, -300, 301, 87, 392,
	87, 344, 600, 154, 122, 82, 154, -417, -326, -261,
	-319, -319, -226, -387, 258, 154, -260, -290, -117, -387,
	-431, 166, 322, 523, 96, 140, 96, -169, 87, 87,
	96, 81, -441, 30, 87, -351, 81, 82, 82, 82,
	82, -350, -229, -296, 82, 82, 154, 81, 20, 87,
	-462, 240, -458, -459, 432, -452, 20, 430, 20, 20,
	-396, -397, 401, -320, -323, 574, 439, 439, 439, 34,
	370, 414, -289, 87, -353, -352, -164, 82, -388, 310,
	20, -260, -296, -388, 322, 96, 140, 96, -170, 82,
	-326, -336, -296, 82, -245, -244, 519, -350, -353, 79,
	-353, 79, -353, 79, -353, 79, 82, -229, -300, 242,
	-285, -300, -455, -469, 81, 96, -457, -456, -458, 20,
	-455, 20, -455, -455, 111, 440, 440, 440, 87, -354,
	248, 91, 523, 329, 330, -164, 20, -389, 303, 304,
	-390, -403, 306, -229, 96, 82, -300, -249, -247, -248,
	78, 446, 299, 300, 82, -477, -477, -477, -477, -250,
	82, 154, -473, 30, 82, -468, -467, -282, -463, -300,
	433, 434, 87, -455, -396, -296, 87, 328, -281, 81,
	-401, 307, 81, -399, 81, -399, 107, 332, -372, -248,
	78, -247, 78, 15, 14, -353, -353, -353, -353, -300,
	-472, -471, -470, 82, 154, 153, 96, -300, -386, -391,
	308, 96, -322, 81, -322, 81, -400, 305, 81, -246,
	296, 297, 30, 166, -246, 154, 122, -467, -300, 82,
	-405, 81, 20, 82, -386, 82, -386, 81, 122, -322,
	101, 40, 298, -471, 40, -326, 153, -406, -404, 258,
	-390, 82, 82, 82, -386, 96, 82, -300, 82, 154,
	-300, -402, 309, 82, -404, -407, 60, 96, -411, -408,
	81, -260, 260, 132, -411, -260, -410, -409, 308, 261,
	81, 82, 154, -300, 257, 81, -332, -409, -408, -332,
	82, 82,
}

var yyDef = [...]int{
	23, -2, 1, 2, 3, 19, 4, 20, 21, 22,
	24, 25, 26, 27, 28, 29, 30, 31, 32, 33,
	34, 35, 36, 37, 38, 39, 40, 41, 42, 43,
	44, 45, 46, 47, 48, 49, 50, 51, 52, 53,
	0, 265, 266, 267, 0, 825, 826, 827, 828, 829,
	830, 0, 0, 0, 0, 599, 600, 0, 567, 0,
	0, 0, 0, 0, 0, 458, 459, 460, 461, 462,
	463, 464, 465, 466, 467, 468, 469, 470, 471, 472,
	473, 474, 475, 476, 477, 478, 479, 480, 481, 482,
	483, 484, 485, 486, 356, 357, 358, 359, 360, 361,
	362, 0, 290, 286, 211, 212, 213, 214, 215, 297,
	298, 435, 0, 0, 0, 0, 680, -2, 58, 0,
	279, 0, 270, 270, 831, 832, 833, 834, 835, 836,
	837, 838, 839, 840, -2, 612, 0, 568, 569, 570,
	571, 572, 573, 574, 575, 576, 577, 578, 579, 580,
	345, 346, 347, 341, 342, 344, 343, -2, 0, 612,
	0, 0, 0, 700, 0, 0, 717, 739, 23, 0,
	7, 9, 10, 11, 12, 13, 14, 15, 16, 17,
	18, 0, 0, 19, 0, 19, 0, 0, 0, 1193,
	1194, 1195, 1196, -2, 1687, 1665, 1832, 1844, 1845, 1846,
	1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856,
	1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866,
	1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876,
	1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886,
	1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636,
	1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646,
	1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656,
	1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1666, 1667,
	1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677,
	1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1688,
	1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698,
	1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708,
	1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718,
	1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728,
	1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738,
	1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748,
	1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759,
	1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769,
	1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779,
	1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789,
	1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799,
	1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809,
	1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819,
	1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829,
	1830, 1831, 1833, 0, 263, 261, 1665, 1687, 1749, 1782,
	1832, 54, 0, 845, 0, 658, 0, 663, 1147, 658,
	291, 601, 602, 700, 700, 565, 0, 327, 0, 1678,
	331, 0, 0, 0, 562, 321, 322, 323, 324, 325,
	326, 0, 0, 824, 0, 0, 317, 0, 285, 1740,
	0, 0, 0, 0, 0, 0, 155, 951, 157, 953,
	161, 168, 0, 0, 173, 174, 177, 178, 179, 180,
	181, 0, 185, 0, 187, 190, 0, 192, 193, 0,
	196, 197, 198, 0, 208, 209, 210, 954, 955, 956,
	-2, 86, 843, 1598, 1486, 0, 1493, 1494, 1505, 1516,
	1273, 1274, 1275, 1276, 0, 0, 0, 0, 0, 1283,
	1284, 0, 1300, 1848, 0, 1290, 1291, 1292, 1293, 1294,
	95, 107, 108, 1538, 1539, 1540, 1541, 1542, 1543, 1544,
	0, 1546, 1547, 1548, 1459, 1260, 1193, 0, 1857, 0,
	1877, 1882, 1883, 1884, 1885, 1876, 0, 0, 1444, 0,
	1434, 0, 0, -2, -2, 0, 0, 1807, -2, 1854,
	1873, 1881, 1858, 1880, 1850, 1851, 1852, 1845, 1846, 1847,
	1849, 1859, 1861, 1872, 0, 1868, 1878, 1879, 0, 0,
	0, 0, 109, 110, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 1450, -2, 1452,
	1453, 1455, -2, 1457, 1458, -2, 1461, 1462, 1463, -2,
	-2, 1466, 1467, 1468, 1469, 1470, 1471, 1474, -2, -2,
	-2, -2, 1446, 1447, 1448, 1449, 1438, 1439, 1440, 1441,
	1442, 1443, -2, -2, -2, 700, 775, 0, -2, 0,
	0, 0, 722, 725, 728, 731, 0, 59, 60, 0,
	280, 281, 269, 271, 0, 275, 0, 268, 0, 0,
	0, 0, 983, 983, 983, 983, 983, 983, 0, 983,
	0, 0, 0, 0, 0, 983, 873, 958, 959, 960,
	981, 982, 0, 1035, 0, 0, 0, 617, 613, 614,
	615, 616, 688, 0, 690, 693, 542, 542, 489, 0,
	0, 0, 542, 0, 503, 495, 0, 0, 0, 542,
	0, 0, 695, 695, 0, 545, 552, 542, 542, -2,
	542, 542, 542, 0, 0, 509, 510, 511, 495, 495,
	514, 515, 516, 527, 528, 553, 1622, 0, 0, 435,
	0, 435, 0, 435, 435, 435, 619, 1777, 1685, 1754,
	1740, 0, 0, 236, 1807, 241, 0, 1686, 1703, 0,
	0, 1721, 0, -2, 0, 307, 695, 0, 701, 0,
	700, 0, 0, 435, 435, 435, 435, 435, 1034, 435,
	435, 435, 435, 0, 0, 0, 435, 435, 0, 0,
	740, 741, 736, 737, 738, 742, 743, 5, 6, 19,
	0, 0, 0, 0, 0, 0, 65, 64, 0, 1599,
	1617, 1551, 1552, 1553, 1604, 1555, 1608, 1608, 1608, 1608,
	1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1608,
	1608, 0, 0, 1597, 1575, 1606, 1606, 1606, 1604, 1601,
	1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565,
	1566, 1567, 1568, 1569, 1611, 1611, 1614, 1614, 1611, 0,
	1484, 0, 0, 0, 0, 662, 0, 0, 695, -2,
	0, 566, 328, 1197, 0, 0, 332, 333, 0, 0,
	348, 0, 351, 336, 337, 338, 0, 135, 0, 319,
	320, 0, 0, 287, 0, 0, 0, 436, 0, 0,
	0, 0, 0, 0, 165, 162, 169, 172, 182, 189,
	0, 201, 203, 206, 163, 170, 175, 176, 183, 204,
	164, 166, 167, 171, 205, 207, 184, 188, 202, 186,
	191, 194, 195, 200, 0, 136, 0, 0, 0, 0,
	0, 1492, 0, 0, 1524, 1525, 1526, 1527, 1528, 1529,
	1530, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, -2,
	1486, 0, 0, 1279, 1280, 1281, 1282, 1285, 0, 1301,
	0, 0, 0, 1545, 1549, 0, 1484, 1484, 0, 1484,
	1480, 0, 0, 0, 0, 0, 0, 1484, 1420, 0,
	0, 1422, 1435, 0, 0, 1424, 1425, 0, 1428, 1429,
	1484, 0, 1484, 1433, 1416, 1417, 0, 1480, 1480, 1480,
	0, 0, 1480, 1480, 1480, 1480, 1480, 1480, 1480, 1480,
	1480, 1480, 1480, 1480, 0, 0, 0, 695, 0, 0,
	683, 0, 664, 0, 719, 721, 0, 723, 724, 726,
	727, 729, 730, 732, 733, 61, 0, 0, 0, 0,
	273, 0, 278, 0, 842, 0, 0, 858, 983, 874,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 983, 0, 983, 983, 983, 0, -2, 0, 0,
	0, 619, 618, 0, 689, 0, 0, 748, 0, 0,
	488, 0, 495, 542, 542, 501, 502, 497, 496, 548,
	549, 545, 0, 545, 545, 748, 0, 521, 522, 523,
	542, 542, 529, 696, 530, 531, 545, 0, 550, 551,
	748, 0, 0, 748, 748, 0, 539, 540, 541, 0,
	0, 983, 0, 558, 497, 497, 1623, 1624, 0, 992,
	0, 0, 0, 561, 0, 0, 0, 0, 620, 216,
	219, 0, 222, 0, 1777, 0, 1777, 0, 229, 0,
	0, 0, 0, 0, 0, 259, 260, 0, 0, 0,
	0, 250, 253, 1141, 1142, 948, 949, 254, 255, 299,
	300, 0, 664, 718, 720, 714, 715, 716, 0, 0,
	0, 0, 0, 435, 0, 0, 0, 0, 595, 0,
	597, 0, 0, 0, 756, 750, 752, 819, 95, 756,
	8, 82, 79, 0, 19, 0, 0, 19, 19, 0,
	19, 264, 0, 1620, 1618, 1619, 1554, 1605, 0, 1580,
	0, 1581, 1582, 1583, 1593, 1594, 0, 0, 1576, 0,
	1577, 1578, 1579, 1570, 0, 1571, 1572, 0, 1573, 1574,
	262, 0, 1485, 846, 0, 637, 650, 632, 0, 639,
	0, 1148, 621, 650, 623, 0, 639, 664, 686, 664,
	0, 329, 0, 334, 0, 0, 350, 352, 353, 354,
	339, 340, 563, 315, 316, 308, 309, 310, 311, 312,
	313, 314, 318, 105, 0, 288, 289, 0, 0, 0,
	149, 150, 151, 152, 153, 154, 156, 140, 584, 586,
	940, 952, 0, 943, 0, 159, 199, 132, 0, 0,
	1487, 1488, 1489, 1490, 1491, 1495, 0, 1497, 1499, 1501,
	1503, 0, 1521, -2, -2, 1261, 1262, 1263, 1264, 1265,
	1266, 1267, 1268, 1269, 1270, 1271, 1272, 1506, 1519, 1520,
	0, 0, 0, 0, 0, 0, 1517, 1517, 1512, 0,
	1277, 0, 1298, 1302, 0, 0, 0, 96, 1479, 1387,
	1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397,
	1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407,
	1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 0, 0,
	1486, 0, 0, 0, 1481, 1482, 0, 0, 0, 1375,
	0, 0, 1381, 1382, 1383, 0, 645, 0, 1445, 1421,
	1436, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	774, 776, 0, 654, 656, 657, 0, 684, 697, 702,
	703, 706, 57, 62, 55, 1009, 282, 283, 0, 0,
	277, 0, -2, 860, 0, 0, 875, 693, 0, 0,
	889, 433, 934, 0, 0, 0, 950, 973, 979, 0,
	0, 983, 0, 0, 0, 1013, 876, 881, 882, 883,
	877, 878, 884, 885, 0, 691, 0, 0, 788, 487,
	0, 543, 544, 492, 1740, 497, 748, 748, 504, 498,
	505, 547, 506, 507, 508, 0, 748, 748, 542, 545,
	532, 546, 545, 535, 536, 0, 554, 559, 555, 0,
	557, 512, 513, 693, 364, 365, 406, 406, 406, 389,
	406, 0, 0, 377, 1625, 0, 0, 0, 0, 386,
	1625, 0, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 0,
	0, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625, 1625,
	1625, 1625, 0, 1625, 1625, 1625, 1625, 1625, 1127, 1625,
	0, 993, 396, 397, 398, 399, 404, 405, 0, 430,
	0, 0, 0, 433, 0, 923, 761, 0, 762, 763,
	759, 790, 814, 814, 0, 814, 794, 1147, 0, 0,
	227, 228, 217, 0, 218, 0, 230, 231, 0, 233,
	234, 235, 242, 1685, 1754, 237, 239, 0, 0, 243,
	256, 257, 258, 0, 0, 248, 249, 0, 0, 302,
	303, 305, 0, 712, 581, 1145, 582, 583, 587, 0,
	0, 590, 592, 593, 594, 860, 0, 928, 929, 748,
	0, 757, 0, 753, 820, 0, 822, 0, 748, 0,
	80, 19, 0, 73, 70, 0, 0, 0, 0, 0,
	1600, 1550, 1621, 0, 0, 0, 1602, 0, 0, 0,
	0, 63, 666, 628, 0, 631, 647, 0, 651, 0,
	0, 643, 636, 640, 0, 0, 660, 622, 0, 0,
	627, 712, 687, 1198, 0, 335, 349, 0, 0, 0,
	0, 143, 937, 0, 144, 148, 138, 0, 0, 0,
	942, 0, 939, 944, 0, 158, 0, 0, 133, 134,
	1004, 1009, 0, 1496, 1498, 1500, 1502, 1504, 0, 1507,
	1517, 1517, 1513, 0, 1508, 0, 1510, 0, 1487, 0,
	1303, 0, 0, 0, 0, 0, 0, 1365, 1366, 0,
	0, 1370, 0, 1372, 1373, 1374, 1376, 0, 0, 0,
	1380, 0, 1419, 1437, 1423, 1426, 0, 1430, 0, 1432,
	0, 700, 0, 0, 1340, 1340, 1340, 0, 0, 0,
	0, 1340, 0, 0, 0, 0, 0, 0, 0, 0,
	1295, 0, 1296, 1297, 0, 777, 666, 0, 0, 0,
	709, 707, 708, 0, 1007, 0, 284, 272, 274, 0,
	0, 0, 848, 849, 851, 0, 854, 855, 856, 0,
	861, 862, 864, 865, 0, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, 1670, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, -2, -2, 859,
	693, 0, 984, 896, 1625, 437, 0, 0, 936, 0,
	912, 0, 0, 0, -2, 0, 0, 1084, 0, 0,
	0, 0, 1015, 0, 0, 0, 606, 610, 23, 694,
	0, 749, 490, 0, 491, 542, 499, 500, 748, 1147,
	524, 525, 748, 542, 542, 545, 0, 556, 0, 992,
	367, 0, 1156, 1157, 407, 0, 1163, 1172, 983, 1230,
	0, 1172, 0, 0, 1174, 1175, 0, 0, 0, 0,
	390, 391, 0, 376, 0, 0, 0, 0, 375, 0,
	0, 417, 0, 0, 0, 0, 1626, 1625, 1625, 0,
	384, 385, 0, 388, 0, 0, 0, 0, 0, 0,
	0, 1625, 1625, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 1118, 0, 0, 0, 0, 0,
	0, 0, 1133, 1134, 896, 1625, 0, 0, 0, 437,
	910, 919, 0, 0, 0, 0, 0, 0, 781, 0,
	0, 780, 0, 0, 0, 0, 0, 693, 815, 0,
	817, 818, 792, -2, 0, 761, 797, 1484, 220, 221,
	0, 0, 226, 244, 246, 0, 0, 0, 245, 247,
	251, 252, 301, 304, 306, 682, 0, 0, 0, 1036,
	0, 598, 746, 751, 758, 821, 823, 96, 754, 746,
	0, 83, 19, 82, 74, 75, 0, 19, 0, 0,
	0, 0, 1610, 1609, 1595, 0, 1596, 1607, 1612, 0,
	1615, 0, 670, 0, 0, 650, 652, 0, 0, 650,
	0, 0, 659, 0, 0, 650, 685, 0, 0, 564,
	106, 355, 0, 0, 0, 0, 0, 585, 0, 941,
	140, 0, 0, 160, 0, 0, 1009, 1483, 1509, 1511,
	0, 1518, 1514, 1278, 1286, 1299, 0, 0, 1305, 1317,
	1317, 0, 1308, 1608, 1608, 1311, 1604, 1606, 1604, 1317,
	1317, 0, 97, 0, 0, 1371, 0, 0, 0, 646,
	0, 0, 0, 1338, 1340, 1340, 1346, 1341, 1347, 1348,
	1340, 1340, 1340, 1340, 1353, 1340, 1340, 1340, 1340, 1340,
	1340, 1340, 1340, 1336, 655, 670, 698, 699, 704, 705,
	0, 56, 1009, 0, 276, 0, 0, 853, 0, 0,
	0, 866, 0, 0, 900, 897, 898, 899, 0, 931,
	438, 439, 440, 441, 0, 0, 0, 935, 0, 923,
	905, 0, 0, 0, 974, 975, 976, 977, 978, -2,
	987, 0, 0, 0, 1080, 1625, 1625, 1149, 0, 0,
	0, 1149, 1149, 1149, 1023, 0, 1014, 658, 0, -2,
	0, 0, 608, 0, 0, 789, 493, 748, 517, 0,
	533, 748, 748, 542, 560, 0, 366, 408, 0, 1162,
	1187, 1173, 1187, 1231, 1187, 1187, 983, 0, 408, 0,
	0, 378, 414, 0, 0, 0, 0, 374, 411, 706,
	415, 416, 418, 0, 420, 380, 392, 393, 394, 395,
	0, 0, 0, 387, 400, 401, 402, 403, 1095, 1096,
	1097, 1100, 1101, 1102, 1103, 0, 0, 1106, 1107, 1108,
	1109, 1110, 1184, 1185, 1186, 1111, 1112, 1113, 1114, 1115,
	1116, 1117, 1135, 1136, 1137, 1138, 1139, 1140, 1119, 1120,
	1121, 1122, 1123, 1124, 1125, 1126, 0, 0, 1130, 0,
	900, 0, 0, 0, 0, 931, 912, 0, 922, 0,
	924, 925, 0, 0, 629, 748, 294, 0, 784, 778,
	0, 767, 782, 783, 770, 0, 772, 0, 768, 769,
	748, 760, 791, 816, 793, 796, 798, 799, 805, 0,
	0, 0, 0, 223, 224, 225, 232, 0, 457, 238,
	713, 1146, 588, 589, 1037, 1038, 596, 744, 0, 0,
	744, 78, 81, 0, 76, 0, 0, 0, 0, 68,
	66, 1603, 0, 0, 672, 120, 0, 0, 0, 648,
	0, 653, 650, 635, 644, 634, 641, 642, 661, 650,
	626, 625, 1199, 330, 0, 938, 140, 145, 146, 147,
	141, 139, 945, 0, 947, 0, 1005, 0, 1515, 1304,
	1287, 1306, 1318, 1319, 1307, 1288, 1309, 1310, 1312, 1313,
	1314, 1315, 1316, 1289, 1367, 0, 1369, 1377, 1378, 0,
	1427, 1431, 0, 0, 0, 1344, 1345, 1349, 1350, 1351,
	1352, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 700,
	1337, 0, 672, 710, 711, 1008, 1010, 841, 844, 850,
	852, 0, 863, 0, 0, 879, 872, 0, 0, 891,
	892, 902, 0, 0, 0, 443, 444, 0, 0, 0,
	456, 452, 453, 454, 434, 930, 919, 908, 0, 0,
	918, 0, 988, 1625, 1625, 1625, 0, 994, 0, 0,
	0, 0, 1150, 1151, 1153, 1154, 1155, 0, 0, 1149,
	0, 0, 0, 1026, 0, 0, 1017, 0, 814, 0,
	0, 748, 607, 610, 611, 692, 494, 748, 537, 534,
	748, 363, 379, 409, 0, -2, 0, 1188, 0, 1176,
	1188, 0, 0, 1187, 0, 368, 408, 0, 0, 0,
	421, 424, 425, 422, 1226, 0, 423, 0, 413, 419,
	1098, 1099, 0, 1104, 1105, 0, 1129, 0, 0, 426,
	0, 0, 0, 427, 432, 905, 0, 920, 0, 926,
	927, 700, 0, 0, 764, 785, 0, 0, 765, 0,
	766, 771, 773, 293, 800, 0, 0, 802, 803, 804,
	795, 240, 734, 0, 0, 755, 735, 0, 19, 0,
	0, 71, 1613, 1616, 674, 0, 671, 121, 0, 0,
	0, 0, 649, 633, 624, 142, 137, 946, 123, 1006,
	0, 1379, 0, 1340, 1339, 1333, 0, 674, 0, 869,
	867, 879, 871, 886, 901, 890, 0, 932, 933, 0,
	445, 446, 0, 449, 455, 903, 904, 0, 0, 916,
	0, 0, 0, 0, 980, 1081, 1082, 1083, 1084, 0,
	997, 0, 1086, 1625, 1625, 0, -2, 0, -2, 1029,
	0, 1024, 0, 1016, 0, 1019, 748, 748, -2, 604,
	609, 0, 518, 538, 410, 1189, -2, 1202, 1204, 0,
	993, 1207, 1208, 0, 0, 0, 0, 0, 0, 1252,
	1216, 0, 0, 1220, 1221, 1222, 0, 0, 1225, 0,
	1533, 1534, 0, 1229, 0, 0, 0, 0, 0, 0,
	0, 1170, 369, 370, 0, 372, 373, 1227, 412, 1625,
	382, 1128, 1131, 1132, 431, 428, 429, 908, 911, 630,
	695, 295, 296, 786, 0, 779, 809, 806, 0, 0,
	745, 747, 72, 77, 0, 0, 676, 0, 673, 0,
	667, 669, 131, 638, 93, 114, 0, 1368, 1418, 1343,
	0, 1334, 0, 1328, 1329, 1330, 1335, 676, 0, 870,
	0, 887, 888, 0, 0, 442, 447, 0, 450, 451,
	909, 906, 907, 0, 914, 0, 0, 969, 1604, 0,
	989, 990, 1143, 1144, 991, 995, 1152, 1085, 0, 0,
	0, 1084, 1039, -2, 1092, 0, 1001, 123, 1039, 1020,
	0, 1027, 0, 1025, 1018, 700, 605, 1203, 1205, 1206,
	1209, 1210, 1211, 1257, 1258, 1259, 0, 0, 1214, 1254,
	1255, 1256, 1215, 0, 0, 0, 0, 0, 1531, 1532,
	1250, 0, 0, 1177, 1179, 1180, 1181, 1182, 1183, 1178,
	0, 0, 0, 1169, 1171, 371, 0, 1625, 921, 292,
	0, 0, 810, 812, 807, 808, 67, 69, 84, 0,
	675, 122, 0, 85, 0, 111, 0, 124, 125, 0,
	0, 0, 0, 1342, 1331, 0, 0, 0, 0, 0,
	1535, 1536, 1537, 0, 665, 0, 868, 0, 893, 0,
	895, 448, 913, 916, 0, 962, 0, 706, 0, 1087,
	1088, 1089, 996, 1041, 0, 992, 1094, 1625, 1003, 1041,
	1012, 0, 1022, 0, 1031, 0, 1028, 695, 1212, 1213,
	0, 0, 1434, 1625, 0, 1245, 0, 962, 962, 962,
	962, 0, 381, 0, 787, 801, 0, 0, 0, 94,
	98, 0, 120, 117, 0, 126, 0, 0, 0, 0,
	0, 1320, 0, 0, 0, 1324, 1325, 1326, 1327, 0,
	880, 894, 915, 917, 961, 970, 971, 706, 1000, 0,
	1078, 1093, 0, 1002, 1021, 1030, 0, 1033, 603, 1253,
	0, 1219, 0, 1224, 1233, 1246, 0, 0, 1158, 0,
	1160, 0, 1164, 0, 1166, 0, 0, 383, 811, 813,
	0, 678, 668, 87, 0, 0, 115, 116, 118, 0,
	127, 0, 129, 130, 0, 1321, 1322, 1323, 857, 963,
	1625, 0, 0, 967, 968, 972, 0, 1066, 0, 0,
	1072, 0, 1079, 1098, 1032, 1217, 1223, 1232, 1234, 1235,
	0, 1247, 1248, 1249, 1251, 962, 962, 962, 962, 1168,
	677, 0, 1011, 0, 99, 0, 101, 103, 104, 1190,
	112, 113, 119, 128, 1332, 0, 965, 0, 1042, 0,
	1044, 0, 0, 0, 0, 0, 1076, 0, 1218, 1236,
	0, 1237, 0, 0, 0, 1159, 1161, 1165, 1167, 679,
	88, 89, 0, 100, 0, 0, 964, 966, 0, 1046,
	0, 1067, 0, 0, 0, 0, 0, 0, 0, 1238,
	1240, 1241, 0, 0, 1239, 0, 0, 102, 1191, 1043,
	1040, 0, 1078, 1068, 0, 1070, 0, 0, 0, 0,
	1242, 1244, 1243, 90, 91, 92, 0, 0, 1048, 0,
	1064, 1069, 1071, 1073, 0, 1077, 1075, 1192, 1047, 0,
	1060, 1045, 0, 1074, 1049, -2, 0, 1065, 1050, -2,
	0, 1058, 0, 0, 1051, 1059, 0, 1054, 0, 0,
	0, 1053, 0, -2, 1061, 0, 0, 1055, -2, 0,
	1063, 1062,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 113, 3, 3, 3, 144, 136, 3,
	81, 82, 141, 139, 154, 140, 153, 142, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 601, 598,
	123, 122, 124, 3, 602, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 146, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 599, 135, 600, 147,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 83,
	84, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	94, 95, 96, 97, 98, 99, 100, 101, 102, 103,
	104, 105, 106, 107, 108, 109, 110, 111, 112, 114,
	115, 116, 117, 118, 119, 120, 121, 125, 126, 127,
	128, 129, 130, 131, 132, 133, 134, 137, 138, 143,
	145, 148, 149, 150, 151, 152, 155, 156, 157, 158,
	159, 160, 161, 162, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 174, 175, 176, 177, 178,
	179, 180, 181, 182, 183, 184, 185, 186, 187, 188,
	189, 190, 191, 192, 193, 194, 195, 196, 197, 198,
	199, 200, 201, 202, 203, 204, 205, 206, 207, 208,
	209, 210, 211, 212, 213, 214, 215, 216, 217, 218,
	219, 220, 221, 222, 223, 224, 225, 226, 227, 228,
	229, 230, 231, 232, 233, 234, 235, 236, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	249, 250, 251, 252, 253, 254, 255, 256, 257, 258,
	259, 260, 261, 262, 263, 264, 265, 266, 267, 268,
	269, 270, 271, 272, 273, 274,
}

var yyTok3 = [...]int{
	57600, 275, 57601, 276, 57602, 277, 57603, 278, 57604, 279,
	57605, 280, 57606, 281, 57607, 282, 57608, 283, 57609, 284,
	57610, 285, 57611, 286, 57612, 287, 57613, 288, 57614, 289,
	57615, 290, 57616, 291, 57617, 292, 57618, 293, 57619, 294,
	57620, 295, 57621, 296, 57622, 297, 57623, 298, 57624, 299,
	57625, 300, 57626, 301, 57627, 302, 57628, 303, 57629, 304,
	57630, 305, 57631, 306, 57632, 307, 57633, 308, 57634, 309,
	57635, 310, 57636, 311, 57637, 312, 57638, 313, 57639, 314,
	57640, 315, 57641, 316, 57642, 317, 57643, 318, 57644, 319,
	57645, 320, 57646, 321, 57647, 322, 57648, 323, 57649, 324,
	57650, 325, 57651, 326, 57652, 327, 57653, 328, 57654, 329,
	57655, 330, 57656, 331, 57657, 332, 57658, 333, 57659, 334,
	57660, 335, 57661, 336, 57662, 337, 57663, 338, 57664, 339,
	57665, 340, 57666, 341, 57667, 342, 57668, 343, 57669, 344,
	57670, 345, 57671, 346, 57672, 347, 57673, 348, 57674, 349,
	57675, 350, 57676, 351, 57677, 352, 57678, 353, 57679, 354,
	57680, 355, 57681, 356, 57682, 357, 57683, 358, 57684, 359,
	57685, 360, 57686, 361, 57687, 362, 57688, 363, 57689, 364,
	57690, 365, 57691, 366, 57692, 367, 57693, 368, 57694, 369,
	57695, 370, 57696, 371, 57697, 372, 57698, 373, 57699, 374,
	57700, 375, 57701, 376, 57702, 377, 57703, 378, 57704, 379,
	57705, 380, 57706, 381, 57707, 382, 57708, 383, 57709, 384,
	57710, 385, 57711, 386, 57712, 387, 57713, 388, 57714, 389,
	57715, 390, 57716, 391, 57717, 392, 57718, 393, 57719, 394,
	57720, 395, 57721, 396, 57722, 397, 57723, 398, 57724, 399,
	57725, 400, 57726, 401, 57727, 402, 57728, 403, 57729, 404,
	57730, 405, 57731, 406, 57732, 407, 57733, 408, 57734, 409,
	57735, 410, 57736, 411, 57737, 412, 57738, 413, 57739, 414,
	57740, 415, 57741, 416, 57742, 417, 57743, 418, 57744, 419,
	57745, 420, 57746, 421, 57747, 422, 57748, 423, 57749, 424,
	57750, 425, 57751, 426, 57752, 427, 57753, 428, 57754, 429,
	57755, 430, 57756, 431, 57757, 432, 57758, 433, 57759, 434,
	57760, 435, 57761, 436, 57762, 437, 57763, 438, 57764, 439,
	57765, 440, 57766, 441, 57767, 442, 57768, 443, 57769, 444,
	57770, 445, 57771, 446, 57772, 447, 57773, 448, 57774, 449,
	57775, 450, 57776, 451, 57777, 452, 57778, 453, 57779, 454,
	57780, 455, 57781, 456, 57782, 457, 57783, 458, 57784, 459,
	57785, 460, 57786, 461, 57787, 462, 57788, 463, 57789, 464,
	57790, 465, 57791, 466, 57792, 467, 57793, 468, 57794, 469,
	57795, 470, 57796, 471, 57797, 472, 57798, 473, 57799, 474,
	57800, 475, 57801, 476, 57802, 477, 57803, 478, 57804, 479,
	57805, 480, 57806, 481, 57807, 482, 57808, 483, 57809, 484,
	57810, 485, 57811, 486, 57812, 487, 57813, 488, 57814, 489,
	57815, 490, 57816, 491, 57817, 492, 57818, 493, 57819, 494,
	57820, 495, 57821, 496, 57822, 497, 57823, 498, 57824, 499,
	57825, 500, 57826, 501, 57827, 502, 57828, 503, 57829, 504,
	57830, 505, 57831, 506, 57832, 507, 57833, 508, 57834, 509,
	57835, 510, 57836, 511, 57837, 512, 57838, 513, 57839, 514,
	57840, 515, 57841, 516, 57842, 517, 57843, 518, 57844, 519,
	57845, 520, 57846, 521, 57847, 522, 57848, 523, 57849, 524,
	57850, 525, 57851, 526, 57852, 527, 57853, 528, 57854, 529,
	57855, 530, 57856, 531, 57857, 532, 57858, 533, 57859, 534,
	57860, 535, 57861, 536, 57862, 537, 57863, 538, 57864, 539,
	57865, 540, 57866, 541, 57867, 542, 57868, 543, 57869, 544,
	57870, 545, 57871, 546, 57872, 547, 57873, 548, 57874, 549,
	57875, 550, 57876, 551, 57877, 552, 57878, 553, 57879, 554,
	57880, 555, 57881, 556, 57882, 557, 57883, 558, 57884, 559,
	57885, 560, 57886, 561, 57887, 562, 57888, 563, 57889, 564,
	57890, 565, 57891, 566, 57892, 567, 57893, 568, 57894, 569,
	57895, 570, 57896, 571, 57897, 572, 57898, 573, 57899, 574,
	57900, 575, 57901, 576, 57902, 577, 57903, 578, 57904, 579,
	57905, 580, 57906, 581, 57907, 582, 57908, 583, 57909, 584,
	57910, 585, 57911, 586, 57912, 587, 57913, 588, 57914, 589,
	57915, 590, 57916, 591, 57917, 592, 57918, 593, 57919, 594,
	57920, 595, 57921, 596, 57922, 597, 0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

//line yaccpar:1

/*	parser for yacc output	*/

func yyIaddr(v interface{}) __yyunsafe__.Pointer {
	type h struct {
		t __yyunsafe__.Pointer
		p __yyunsafe__.Pointer
	}
	return (*h)(__yyunsafe__.Pointer(&v)).p
}

var (
	yyDebug        = 0
	yyErrorVerbose = false
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:752
		{
			yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:759
		{
			if yyDollar[1].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[1].statementUnion())
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:765
		{
			if yyDollar[3].statementUnion() != nil {
				yylex.(*Lexer).AppendStmt(yyDollar[3].statementUnion())
			}
		}
	case 6:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:773
		{
			yyLOCAL = tree.NewCompoundStmt(yyDollar[2].statementsUnion())
		}
		yyVAL.union = yyLOCAL
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:779
		{
			yyLOCAL = []tree.Statement{yyDollar[1].statementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 8:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:783
		{
			yyLOCAL = append(yyDollar[1].statementsUnion(), yyDollar[3].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:798
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 19:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:802
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:808
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:813
		{
			yyLOCAL = yyDollar[1].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 23:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:817
		{
			yyLOCAL = tree.Statement(nil)
		}
		yyVAL.union = yyLOCAL
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:850
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:858
		{
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 55:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:864
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      false,
				Dir:       yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 56:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:872
		{
			yyLOCAL = &tree.BackupStart{
				Timestamp: yyDollar[2].str,
				IsS3:      true,
				Option:    yyDollar[5].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 57:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:882
		{
			var connectionId uint64
			switch v := yyDollar[3].item.(type) {
			case uint64:
				connectionId = v
			case int64:
				connectionId = uint64(v)
			default:
				yylex.Error("parse integral fail")
				return 1
			}

			yyLOCAL = &tree.Kill{
				Option:       yyDollar[2].killOptionUnion(),
				ConnectionId: connectionId,
				StmtOption:   yyDollar[4].statementOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 58:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:902
		{
			yyLOCAL = tree.KillOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:908
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeConnection,
			}
		}
		yyVAL.union = yyLOCAL
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.KillOption
//line mysql_sql.y:915
		{
			yyLOCAL = tree.KillOption{
				Exist: true,
				Typ:   tree.KillTypeQuery,
			}
		}
		yyVAL.union = yyLOCAL
	case 61:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:923
		{
			yyLOCAL = tree.StatementOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.StatementOption
//line mysql_sql.y:929
		{
			yyLOCAL = tree.StatementOption{
				Exist:       true,
				StatementId: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 63:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:938
		{
			yyLOCAL = &tree.CallStmt{
				Name: yyDollar[2].procNameUnion(),
				Args: yyDollar[4].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 64:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:948
		{
			yyLOCAL = &tree.LeaveStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 65:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:956
		{
			yyLOCAL = &tree.IterateStmt{
				Name: tree.Identifier(yyDollar[2].cstrUnion().ToLower()),
			}
		}
		yyVAL.union = yyLOCAL
	case 66:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:964
		{
			yyLOCAL = &tree.WhileStmt{
				Name: "",
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 67:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:972
		{
			yyLOCAL = &tree.WhileStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Cond: yyDollar[4].exprUnion(),
				Body: yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 68:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:982
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
				Cond: yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 69:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:990
		{
			yyLOCAL = &tree.RepeatStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
				Cond: yyDollar[6].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 70:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1000
		{
			yyLOCAL = &tree.LoopStmt{
				Name: "",
				Body: yyDollar[2].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 71:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1007
		{
			yyLOCAL = &tree.LoopStmt{
				Name: tree.Identifier(yyDollar[1].cstrUnion().ToLower()),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 72:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1016
		{
			yyLOCAL = &tree.IfStmt{
				Cond:  yyDollar[2].exprUnion(),
				Body:  yyDollar[4].statementsUnion(),
				Elifs: yyDollar[5].elseIfClauseListUnion(),
				Else:  yyDollar[6].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 73:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1030
		{
			yyLOCAL = yyDollar[1].elseIfClauseListUnion()
		}
		yyVAL.union = yyLOCAL
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1036
		{
			yyLOCAL = []*tree.ElseIfStmt{yyDollar[1].elseIfClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 76:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.ElseIfStmt
//line mysql_sql.y:1040
		{
			yyLOCAL = append(yyDollar[1].elseIfClauseListUnion(), yyDollar[2].elseIfClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 77:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ElseIfStmt
//line mysql_sql.y:1046
		{
			yyLOCAL = &tree.ElseIfStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 78:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1055
		{
			yyLOCAL = &tree.CaseStmt{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseList2Union(),
				Else:  yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1065
		{
			yyLOCAL = []*tree.WhenStmt{yyDollar[1].whenClause2Union()}
		}
		yyVAL.union = yyLOCAL
	case 80:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.WhenStmt
//line mysql_sql.y:1069
		{
			yyLOCAL = append(yyDollar[1].whenClauseList2Union(), yyDollar[2].whenClause2Union())
		}
		yyVAL.union = yyLOCAL
	case 81:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.WhenStmt
//line mysql_sql.y:1075
		{
			yyLOCAL = &tree.WhenStmt{
				Cond: yyDollar[2].exprUnion(),
				Body: yyDollar[4].statementsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 82:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1084
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 83:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.Statement
//line mysql_sql.y:1088
		{
			yyLOCAL = yyDollar[2].statementsUnion()
		}
		yyVAL.union = yyLOCAL
	case 84:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1094
		{
			ep := &tree.ExportParam{
				Outfile:     true,
				QueryId:     yyDollar[3].str,
				FilePath:    yyDollar[5].str,
				Fields:      yyDollar[6].fieldsUnion(),
				Lines:       yyDollar[7].linesUnion(),
				Header:      yyDollar[8].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[9].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[10].strsUnion(),
			}
			yyLOCAL = &tree.MoDump{
				ExportParams: ep,
			}
		}
		yyVAL.union = yyLOCAL
	case 85:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1115
		{
			yyLOCAL = &tree.Load{
				Local:             yyDollar[3].boolValUnion(),
				Param:             yyDollar[4].loadParamUnion(),
				DuplicateHandling: yyDollar[5].duplicateKeyUnion(),
				Table:             yyDollar[8].tableNameUnion(),
			}
			yyLOCAL.(*tree.Load).Param.Tail = yyDollar[9].tailParamUnion()
			yyLOCAL.(*tree.Load).Param.Parallel = yyDollar[10].unsignedOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 86:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1128
		{
			yyLOCAL = &tree.LoadExtension{
				Name: tree.Identifier(yyDollar[2].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1135
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 88:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1139
		{
			yyLOCAL = yyDollar[2].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1145
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 90:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:1149
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 91:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1155
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 92:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:1162
		{
			yyLOCAL = &tree.UpdateExpr{
				Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()},
				Expr:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 93:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1170
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 94:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1174
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error parallel flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1188
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1192
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 97:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:1196
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 98:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1201
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1205
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1209
		{
			yyLOCAL = yyDollar[2].loadColumnsUnion()
		}
		yyVAL.union = yyLOCAL
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1215
		{
			switch yyDollar[1].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.UnresolvedName)}
			case *tree.VarExpr:
				yyLOCAL = []tree.LoadColumn{yyDollar[1].loadColumnUnion().(*tree.VarExpr)}
			}
		}
		yyVAL.union = yyLOCAL
	case 102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.LoadColumn
//line mysql_sql.y:1224
		{
			switch yyDollar[3].loadColumnUnion().(type) {
			case *tree.UnresolvedName:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.UnresolvedName))
			case *tree.VarExpr:
				yyLOCAL = append(yyDollar[1].loadColumnsUnion(), yyDollar[3].loadColumnUnion().(*tree.VarExpr))
			}
		}
		yyVAL.union = yyLOCAL
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1235
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 104:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.LoadColumn
//line mysql_sql.y:1239
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1245
		{
			yyLOCAL = []*tree.VarExpr{yyDollar[1].varExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarExpr
//line mysql_sql.y:1249
		{
			yyLOCAL = append(yyDollar[1].varExprsUnion(), yyDollar[3].varExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1255
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1259
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 109:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1265
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarExpr{
				Name:   r,
				System: true,
				Global: isGlobal,
			}
		}
		yyVAL.union = yyLOCAL
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.VarExpr
//line mysql_sql.y:1289
		{
			//        vs := strings.Split($1, ".")
			//        var r string
			//        if len(vs) == 2 {
			//           r = vs[1]
			//        } else if len(vs) == 1 {
			//           r = vs[0]
			//        } else {
			//            yylex.Error("variable syntax error")
			//            return 1
			//        }
			yyLOCAL = &tree.VarExpr{
				Name:   yyDollar[1].str,
				System: false,
				Global: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 111:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1308
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1312
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:1316
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 114:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1321
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1325
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[2].str,
				TerminatedBy: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:1332
		{
			yyLOCAL = &tree.Lines{
				StartingBy:   yyDollar[3].str,
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 117:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1340
		{
			yyVAL.str = ""
		}
	case 119:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1347
		{
			yyVAL.str = yyDollar[3].str
		}
	case 120:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:1352
		{
			yyVAL.str = "\n"
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:1359
		{
			yyVAL.str = yyDollar[3].str
		}
	case 123:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1364
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 124:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1368
		{
			res := &tree.Fields{
				Terminated: "\t",
				EscapedBy:  0,
			}
			for _, f := range yyDollar[2].fieldsListUnion() {
				if f.Terminated != "" {
					res.Terminated = f.Terminated
				}
				if f.Optionally {
					res.Optionally = f.Optionally
				}
				if f.EnclosedBy != 0 {
					res.EnclosedBy = f.EnclosedBy
				}
				if f.EscapedBy != 0 {
					res.EscapedBy = f.EscapedBy
				}
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1392
		{
			yyLOCAL = []*tree.Fields{yyDollar[1].fieldsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 126:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Fields
//line mysql_sql.y:1396
		{
			yyLOCAL = append(yyDollar[1].fieldsListUnion(), yyDollar[2].fieldsUnion())
		}
		yyVAL.union = yyLOCAL
	case 127:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1402
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1408
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Optionally: true,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 129:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1426
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 130:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:1443
		{
			str := yyDollar[3].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				EscapedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 132:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1466
		{
			yyLOCAL = &tree.DuplicateKeyError{}
		}
		yyVAL.union = yyLOCAL
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1470
		{
			yyLOCAL = &tree.DuplicateKeyIgnore{}
		}
		yyVAL.union = yyLOCAL
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.DuplicateKey
//line mysql_sql.y:1474
		{
			yyLOCAL = &tree.DuplicateKeyReplace{}
		}
		yyVAL.union = yyLOCAL
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1479
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1483
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 137:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1489
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypePrivilege,
				GrantPrivilege: tree.GrantPrivilege{
					Privileges:  yyDollar[2].privilegesUnion(),
					ObjType:     yyDollar[4].objectTypeUnion(),
					Level:       yyDollar[5].privilegeLevelUnion(),
					Roles:       yyDollar[7].rolesUnion(),
					GrantOption: yyDollar[8].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1502
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeRole,
				GrantRole: tree.GrantRole{
					Roles:       yyDollar[2].rolesUnion(),
					Users:       yyDollar[4].usersUnion(),
					GrantOption: yyDollar[5].boolValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 139:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1513
		{
			yyLOCAL = &tree.Grant{
				Typ: tree.GrantTypeProxy,
				GrantProxy: tree.GrantProxy{
					ProxyUser:   yyDollar[4].userUnion(),
					Users:       yyDollar[6].usersUnion(),
					GrantOption: yyDollar[7].boolValUnion(),
				},
			}

		}
		yyVAL.union = yyLOCAL
	case 140:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1526
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:1530
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 142:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1540
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypePrivilege,
				RevokePrivilege: tree.RevokePrivilege{
					IfExists:   yyDollar[2].boolValUnion(),
					Privileges: yyDollar[3].privilegesUnion(),
					ObjType:    yyDollar[5].objectTypeUnion(),
					Level:      yyDollar[6].privilegeLevelUnion(),
					Roles:      yyDollar[8].rolesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 143:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1553
		{
			yyLOCAL = &tree.Revoke{
				Typ: tree.RevokeTypeRole,
				RevokeRole: tree.RevokeRole{
					IfExists: yyDollar[2].boolValUnion(),
					Roles:    yyDollar[3].rolesUnion(),
					Users:    yyDollar[5].usersUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 144:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1566
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1572
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level: tree.PRIVILEGE_LEVEL_TYPE_STAR_STAR,
			}
		}
		yyVAL.union = yyLOCAL
	case 146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1578
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:  tree.PRIVILEGE_LEVEL_TYPE_DATABASE_STAR,
				DbName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 147:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1585
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_DATABASE_TABLE,
				DbName:  yyDollar[1].cstrUnion().Compare(),
				TabName: yyDollar[3].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.PrivilegeLevel
//line mysql_sql.y:1593
		{
			yyLOCAL = &tree.PrivilegeLevel{
				Level:   tree.PRIVILEGE_LEVEL_TYPE_TABLE,
				TabName: yyDollar[1].cstrUnion().Compare(),
			}
		}
		yyVAL.union = yyLOCAL
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1602
		{
			yyLOCAL = tree.OBJECT_TYPE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1606
		{
			yyLOCAL = tree.OBJECT_TYPE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1610
		{
			yyLOCAL = tree.OBJECT_TYPE_FUNCTION
		}
		yyVAL.union = yyLOCAL
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1614
		{
			yyLOCAL = tree.OBJECT_TYPE_PROCEDURE
		}
		yyVAL.union = yyLOCAL
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1618
		{
			yyLOCAL = tree.OBJECT_TYPE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ObjectType
//line mysql_sql.y:1622
		{
			yyLOCAL = tree.OBJECT_TYPE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1629
		{
			yyLOCAL = []*tree.Privilege{yyDollar[1].privilegeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 156:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Privilege
//line mysql_sql.y:1633
		{
			yyLOCAL = append(yyDollar[1].privilegesUnion(), yyDollar[3].privilegeUnion())
		}
		yyVAL.union = yyLOCAL
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1639
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 158:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Privilege
//line mysql_sql.y:1646
		{
			yyLOCAL = &tree.Privilege{
				Type:       yyDollar[1].privilegeTypeUnion(),
				ColumnList: yyDollar[3].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1655
		{
			yyLOCAL = []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.UnresolvedName
//line mysql_sql.y:1659
		{
			yyLOCAL = append(yyDollar[1].unresolveNamesUnion(), yyDollar[3].unresolvedNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1665
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1669
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1673
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 164:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1677
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ACCOUNT
		}
		yyVAL.union = yyLOCAL
	case 165:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1681
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALL
		}
		yyVAL.union = yyLOCAL
	case 166:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1685
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_TABLE
		}
		yyVAL.union = yyLOCAL
	case 167:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1689
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_VIEW
		}
		yyVAL.union = yyLOCAL
	case 168:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1693
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE
		}
		yyVAL.union = yyLOCAL
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1697
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_USER
		}
		yyVAL.union = yyLOCAL
	case 170:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1701
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_USER
		}
		yyVAL.union = yyLOCAL
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1705
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_USER
		}
		yyVAL.union = yyLOCAL
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1709
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLESPACE
		}
		yyVAL.union = yyLOCAL
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1713
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRIGGER
		}
		yyVAL.union = yyLOCAL
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1717
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DELETE
		}
		yyVAL.union = yyLOCAL
	case 175:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1721
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_TABLE
		}
		yyVAL.union = yyLOCAL
	case 176:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1725
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_VIEW
		}
		yyVAL.union = yyLOCAL
	case 177:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1729
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EXECUTE
		}
		yyVAL.union = yyLOCAL
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1733
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INDEX
		}
		yyVAL.union = yyLOCAL
	case 179:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1737
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_INSERT
		}
		yyVAL.union = yyLOCAL
	case 180:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1741
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SELECT
		}
		yyVAL.union = yyLOCAL
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1745
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SUPER
		}
		yyVAL.union = yyLOCAL
	case 182:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1749
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1753
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_DATABASE
		}
		yyVAL.union = yyLOCAL
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1757
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_DATABASES
		}
		yyVAL.union = yyLOCAL
	case 185:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1761
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CONNECT
		}
		yyVAL.union = yyLOCAL
	case 186:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1765
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_MANAGE_GRANTS
		}
		yyVAL.union = yyLOCAL
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1769
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_OWNERSHIP
		}
		yyVAL.union = yyLOCAL
	case 188:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1773
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_TABLES
		}
		yyVAL.union = yyLOCAL
	case 189:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1777
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TABLE
		}
		yyVAL.union = yyLOCAL
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1781
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_UPDATE
		}
		yyVAL.union = yyLOCAL
	case 191:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1785
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_GRANT_OPTION
		}
		yyVAL.union = yyLOCAL
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1789
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCES
		}
		yyVAL.union = yyLOCAL
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1793
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REFERENCE
		}
		yyVAL.union = yyLOCAL
	case 194:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1797
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_SLAVE
		}
		yyVAL.union = yyLOCAL
	case 195:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1801
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_REPLICATION_CLIENT
		}
		yyVAL.union = yyLOCAL
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1805
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_USAGE
		}
		yyVAL.union = yyLOCAL
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1809
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_RELOAD
		}
		yyVAL.union = yyLOCAL
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1813
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_FILE
		}
		yyVAL.union = yyLOCAL
	case 199:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1817
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_TEMPORARY_TABLES
		}
		yyVAL.union = yyLOCAL
	case 200:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1821
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_LOCK_TABLES
		}
		yyVAL.union = yyLOCAL
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1825
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_VIEW
		}
		yyVAL.union = yyLOCAL
	case 202:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1829
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHOW_VIEW
		}
		yyVAL.union = yyLOCAL
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1833
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROLE
		}
		yyVAL.union = yyLOCAL
	case 204:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1837
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_DROP_ROLE
		}
		yyVAL.union = yyLOCAL
	case 205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1841
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROLE
		}
		yyVAL.union = yyLOCAL
	case 206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1845
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_CREATE_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 207:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1849
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_ALTER_ROUTINE
		}
		yyVAL.union = yyLOCAL
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1853
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_EVENT
		}
		yyVAL.union = yyLOCAL
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1857
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_SHUTDOWN
		}
		yyVAL.union = yyLOCAL
	case 210:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.PrivilegeType
//line mysql_sql.y:1861
		{
			yyLOCAL = tree.PRIVILEGE_TYPE_STATIC_TRUNCATE
		}
		yyVAL.union = yyLOCAL
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1874
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[3].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1881
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        true,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 218:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1888
		{
			yyLOCAL = &tree.SetTransaction{
				Global:        false,
				CharacterList: yyDollar[4].transactionCharacteristicListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1898
		{
			yyLOCAL = []*tree.TransactionCharacteristic{yyDollar[1].transactionCharacteristicUnion()}
		}
		yyVAL.union = yyLOCAL
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.TransactionCharacteristic
//line mysql_sql.y:1902
		{
			yyLOCAL = append(yyDollar[1].transactionCharacteristicListUnion(), yyDollar[3].transactionCharacteristicUnion())
		}
		yyVAL.union = yyLOCAL
	case 221:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1908
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				IsLevel:   true,
				Isolation: yyDollar[3].isolationLevelUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TransactionCharacteristic
//line mysql_sql.y:1915
		{
			yyLOCAL = &tree.TransactionCharacteristic{
				Access: yyDollar[1].accessModeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 223:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1923
		{
			yyLOCAL = tree.ISOLATION_LEVEL_REPEATABLE_READ
		}
		yyVAL.union = yyLOCAL
	case 224:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1927
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_COMMITTED
		}
		yyVAL.union = yyLOCAL
	case 225:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1931
		{
			yyLOCAL = tree.ISOLATION_LEVEL_READ_UNCOMMITTED
		}
		yyVAL.union = yyLOCAL
	case 226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IsolationLevelType
//line mysql_sql.y:1935
		{
			yyLOCAL = tree.ISOLATION_LEVEL_SERIALIZABLE
		}
		yyVAL.union = yyLOCAL
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1941
		{
			yyLOCAL = tree.ACCESS_MODE_READ_WRITE
		}
		yyVAL.union = yyLOCAL
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccessModeType
//line mysql_sql.y:1945
		{
			yyLOCAL = tree.ACCESS_MODE_READ_ONLY
		}
		yyVAL.union = yyLOCAL
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1951
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1958
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1965
		{
			yyLOCAL = &tree.SetRole{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:1974
		{
			dr := yyDollar[4].setDefaultRoleUnion()
			dr.Users = yyDollar[6].usersUnion()
			yyLOCAL = dr
		}
		yyVAL.union = yyLOCAL
	case 233:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2004
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NONE, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2008
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_ALL, Roles: nil}
		}
		yyVAL.union = yyLOCAL
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.SetDefaultRole
//line mysql_sql.y:2012
		{
			yyLOCAL = &tree.SetDefaultRole{Type: tree.SET_DEFAULT_ROLE_TYPE_NORMAL, Roles: yyDollar[1].rolesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2018
		{
			yyLOCAL = &tree.SetVar{Assignments: yyDollar[2].varAssignmentExprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 237:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2024
		{
			yyLOCAL = &tree.SetPassword{Password: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 238:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2028
		{
			yyLOCAL = &tree.SetPassword{User: yyDollar[4].userUnion(), Password: yyDollar[6].str}
		}
		yyVAL.union = yyLOCAL
	case 240:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:2035
		{
			yyVAL.str = yyDollar[3].str
		}
	case 241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2041
		{
			yyLOCAL = []*tree.VarAssignmentExpr{yyDollar[1].varAssignmentExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.VarAssignmentExpr
//line mysql_sql.y:2045
		{
			yyLOCAL = append(yyDollar[1].varAssignmentExprsUnion(), yyDollar[3].varAssignmentExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2051
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[1].str,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2059
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 245:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2068
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 246:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2077
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 247:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2085
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Name:   yyDollar[2].str,
				Value:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2093
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: false,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 249:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2116
		{
			vs := strings.Split(yyDollar[1].str, ".")
			var isGlobal bool
			if strings.ToLower(vs[0]) == "global" {
				isGlobal = true
			}
			var r string
			if len(vs) == 2 {
				r = vs[1]
			} else if len(vs) == 1 {
				r = vs[0]
			} else {
				yylex.Error("variable syntax error")
				return 1
			}
			yyLOCAL = &tree.VarAssignmentExpr{
				System: true,
				Global: isGlobal,
				Name:   r,
				Value:  yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2139
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 251:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2146
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 252:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2153
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:     strings.ToLower(yyDollar[1].str),
				Value:    tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
				Reserved: tree.NewNumValWithType(constant.MakeString(yyDollar[4].str), yyDollar[4].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2161
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2168
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char),
			}
		}
		yyVAL.union = yyLOCAL
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.VarAssignmentExpr
//line mysql_sql.y:2175
		{
			yyLOCAL = &tree.VarAssignmentExpr{
				Name:  strings.ToLower(yyDollar[1].str),
				Value: &tree.DefaultVal{},
			}
		}
		yyVAL.union = yyLOCAL
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2184
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2188
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 258:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:2192
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 259:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2198
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2202
		{
			yyVAL.str = yyDollar[1].str
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2208
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:2212
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare() + "." + yyDollar[3].cstrUnion().Compare()
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2218
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:2222
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 268:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2233
		{
			yyLOCAL = &tree.RollbackTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 269:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2239
		{
			yyLOCAL = &tree.CommitTransaction{Type: yyDollar[2].completionTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 270:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2244
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 271:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2248
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 272:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2252
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2256
		{
			yyLOCAL = tree.COMPLETION_TYPE_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 274:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2260
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2264
		{
			yyLOCAL = tree.COMPLETION_TYPE_RELEASE
		}
		yyVAL.union = yyLOCAL
	case 276:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2268
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2272
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.CompletionType
//line mysql_sql.y:2276
		{
			yyLOCAL = tree.COMPLETION_TYPE_NO_CHAIN
		}
		yyVAL.union = yyLOCAL
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2282
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2286
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2290
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 282:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2294
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_WRITE)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 283:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2299
		{
			m := tree.MakeTransactionModes(tree.READ_WRITE_MODE_READ_ONLY)
			yyLOCAL = &tree.BeginTransaction{Modes: m}
		}
		yyVAL.union = yyLOCAL
	case 284:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2304
		{
			yyLOCAL = &tree.BeginTransaction{}
		}
		yyVAL.union = yyLOCAL
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2310
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Name:          yyDollar[2].cstrUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 286:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2317
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2323
		{
			yyLOCAL = &tree.Use{
				SecondaryRole: false,
				Role:          yyDollar[3].roleUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 288:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2330
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeAll,
			}
		}
		yyVAL.union = yyLOCAL
	case 289:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2337
		{
			yyLOCAL = &tree.Use{
				SecondaryRole:     true,
				SecondaryRoleType: tree.SecondaryRoleTypeNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2347
		{
			yyDollar[2].statementUnion().(*tree.Update).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 292:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2354
		{
			// Single-table syntax
			yyLOCAL = &tree.Update{
				Tables:  tree.TableExprs{yyDollar[4].tableExprUnion()},
				Exprs:   yyDollar[6].updateExprsUnion(),
				Where:   yyDollar[7].whereUnion(),
				OrderBy: yyDollar[8].orderByUnion(),
				Limit:   yyDollar[9].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 293:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2365
		{
			// Multiple-table syntax
			yyLOCAL = &tree.Update{
				Tables: tree.TableExprs{yyDollar[4].joinTableExprUnion()},
				Exprs:  yyDollar[6].updateExprsUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2376
		{
			yyLOCAL = tree.UpdateExprs{yyDollar[1].updateExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 295:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:2380
		{
			yyLOCAL = append(yyDollar[1].updateExprsUnion(), yyDollar[3].updateExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UpdateExpr
//line mysql_sql.y:2386
		{
			yyLOCAL = &tree.UpdateExpr{Names: []*tree.UnresolvedName{yyDollar[1].unresolvedNameUnion()}, Expr: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2396
		{
			yyLOCAL = &tree.LockTableStmt{TableLocks: yyDollar[3].tableLocksUnion()}
		}
		yyVAL.union = yyLOCAL
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2402
		{
			yyLOCAL = []tree.TableLock{yyDollar[1].tableLockUnion()}
		}
		yyVAL.union = yyLOCAL
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableLock
//line mysql_sql.y:2406
		{
			yyLOCAL = append(yyDollar[1].tableLocksUnion(), yyDollar[3].tableLockUnion())
		}
		yyVAL.union = yyLOCAL
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLock
//line mysql_sql.y:2412
		{
			yyLOCAL = tree.TableLock{Table: *yyDollar[1].tableNameUnion(), LockType: yyDollar[2].tableLockTypeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2418
		{
			yyLOCAL = tree.TableLockRead
		}
		yyVAL.union = yyLOCAL
	case 304:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2422
		{
			yyLOCAL = tree.TableLockReadLocal
		}
		yyVAL.union = yyLOCAL
	case 305:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2426
		{
			yyLOCAL = tree.TableLockWrite
		}
		yyVAL.union = yyLOCAL
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableLockType
//line mysql_sql.y:2430
		{
			yyLOCAL = tree.TableLockLowPriorityWrite
		}
		yyVAL.union = yyLOCAL
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2436
		{
			yyLOCAL = &tree.UnLockTableStmt{}
		}
		yyVAL.union = yyLOCAL
	case 314:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2448
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 315:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2454
		{
			yyLOCAL = tree.NewPrepareStmt(tree.Identifier(yyDollar[2].str), yyDollar[4].statementUnion())
		}
		yyVAL.union = yyLOCAL
	case 316:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2458
		{
			yyLOCAL = tree.NewPrepareString(tree.Identifier(yyDollar[2].str), yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2464
		{
			yyLOCAL = tree.NewExecute(tree.Identifier(yyDollar[2].str))
		}
		yyVAL.union = yyLOCAL
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2468
		{
			yyLOCAL = tree.NewExecuteWithVariables(tree.Identifier(yyDollar[2].str), yyDollar[4].varExprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2474
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), false)
		}
		yyVAL.union = yyLOCAL
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2480
		{
			yyLOCAL = tree.NewReset(tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 326:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2491
		{
			yyLOCAL = yyDollar[1].selectUnion()
		}
		yyVAL.union = yyLOCAL
	case 327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2497
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2501
		{
			yyLOCAL = &tree.ShowColumns{Table: yyDollar[2].unresolvedObjectNameUnion(), ColName: yyDollar[3].unresolvedNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2505
		{
			yyLOCAL = tree.NewExplainFor("", uint64(yyDollar[4].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 330:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2509
		{
			yyLOCAL = tree.NewExplainFor(yyDollar[4].str, uint64(yyDollar[7].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2513
		{
			yyLOCAL = tree.NewExplainStmt(yyDollar[2].statementUnion(), "text")
		}
		yyVAL.union = yyLOCAL
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2517
		{
			explainStmt := tree.NewExplainStmt(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2525
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[3].statementUnion(), "text")
			optionElem := tree.MakeOptionElem("analyze", "NULL")
			options := tree.MakeOptions(optionElem)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 334:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2533
		{
			explainStmt := tree.NewExplainAnalyze(yyDollar[4].statementUnion(), "text")
			optionElem1 := tree.MakeOptionElem("analyze", "NULL")
			optionElem2 := tree.MakeOptionElem("verbose", "NULL")
			options := tree.MakeOptions(optionElem1)
			options = append(options, optionElem2)
			explainStmt.Options = options
			yyLOCAL = explainStmt
		}
		yyVAL.union = yyLOCAL
	case 335:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2543
		{
			if tree.IsContainAnalyze(yyDollar[3].epxlainOptionsUnion()) {
				explainStmt := tree.NewExplainAnalyze(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			} else {
				explainStmt := tree.NewExplainStmt(yyDollar[5].statementUnion(), "text")
				explainStmt.Options = yyDollar[3].epxlainOptionsUnion()
				yyLOCAL = explainStmt
			}
		}
		yyVAL.union = yyLOCAL
	case 348:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2584
		{
			yyLOCAL = tree.MakeOptions(yyDollar[1].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.OptionElem
//line mysql_sql.y:2588
		{
			yyLOCAL = append(yyDollar[1].epxlainOptionsUnion(), yyDollar[3].epxlainOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 350:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.OptionElem
//line mysql_sql.y:2594
		{
			yyLOCAL = tree.MakeOptionElem(yyDollar[1].str, yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 351:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2600
		{
			yyVAL.str = yyDollar[1].str
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2605
		{
			yyVAL.str = "true"
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2606
		{
			yyVAL.str = "false"
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2607
		{
			yyVAL.str = yyDollar[1].str
		}
	case 355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2612
		{
			yyLOCAL = tree.NewAnalyzeStmt(yyDollar[3].tableNameUnion(), yyDollar[5].identifierListUnion())
		}
		yyVAL.union = yyLOCAL
	case 363:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2628
		{
			yyLOCAL = &tree.AlterView{
				Name:     yyDollar[4].tableNameUnion(),
				ColNames: yyDollar[5].identifierListUnion(),
				AsSource: yyDollar[7].selectUnion(),
				IfExists: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 364:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2639
		{
			yyLOCAL = &tree.AlterTable{
				Table:   yyDollar[3].tableNameUnion(),
				Options: yyDollar[4].alterTableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 365:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2648
		{
			yyLOCAL = []tree.AlterTableOption{yyDollar[1].alterTableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOptions
//line mysql_sql.y:2652
		{
			yyLOCAL = append(yyDollar[1].alterTableOptionsUnion(), yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 367:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2658
		{
			opt := &tree.AlterOptionAdd{
				Def: yyDollar[2].tableDefUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 368:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2665
		{
			opt := &tree.AlterTableModifyColumnClause{
				Typ:       tree.AlterTableModifyColumn,
				NewColumn: yyDollar[3].columnTableDefUnion(),
				Position:  yyDollar[4].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2674
		{
			opt := &tree.AlterTableChangeColumnClause{
				Typ:           tree.AlterTableChangeColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumn:     yyDollar[4].columnTableDefUnion(),
				Position:      yyDollar[5].alterColPositionUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 370:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2684
		{
			opt := &tree.AlterTableRenameColumnClause{
				Typ:           tree.AlterTableRenameColumn,
				OldColumnName: yyDollar[3].unresolvedNameUnion(),
				NewColumnName: yyDollar[5].unresolvedNameUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 371:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2693
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:         tree.AlterTableAlterColumn,
				ColumnName:  yyDollar[3].unresolvedNameUnion(),
				DefalutExpr: tree.NewAttributeDefault(yyDollar[6].exprUnion()),
				OptionType:  tree.AlterColumnOptionSetDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 372:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2703
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				Visibility: yyDollar[5].indexVisibilityUnion(),
				OptionType: tree.AlterColumnOptionSetVisibility,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 373:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2713
		{
			opt := &tree.AlterTableAlterColumnClause{
				Typ:        tree.AlterTableAlterColumn,
				ColumnName: yyDollar[3].unresolvedNameUnion(),
				OptionType: tree.AlterColumnOptionDropDefault,
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2722
		{
			opt := &tree.AlterTableOrderByColumnClause{
				Typ:              tree.AlterTableOrderByColumn,
				AlterOrderByList: yyDollar[3].alterColumnOrderByUnion(),
			}
			yyLOCAL = tree.AlterTableOption(opt)
		}
		yyVAL.union = yyLOCAL
	case 375:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2730
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 376:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2734
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[2].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2738
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[1].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2742
		{
			yyLOCAL = tree.AlterTableOption(yyDollar[3].alterTableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2746
		{
			yyLOCAL = tree.AlterTableOption(
				&tree.AlterAddCol{
					Column:   yyDollar[3].columnTableDefUnion(),
					Position: yyDollar[4].alterColPositionUnion(),
				},
			)
		}
		yyVAL.union = yyLOCAL
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2755
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type: yyDollar[1].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 381:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2761
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 382:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2765
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 383:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2769
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[5].str)
		}
		yyVAL.union = yyLOCAL
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2773
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2777
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 386:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2781
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2785
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2789
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 389:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2794
		{
			yyVAL.str = ""
		}
	case 406:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:2825
		{
			yyVAL.str = ""
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:2829
		{
			yyVAL.str = string("COLUMN")
		}
	case 408:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2834
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionNone,
			}
		}
		yyVAL.union = yyLOCAL
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2840
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ: tree.ColumnPositionFirst,
			}
		}
		yyVAL.union = yyLOCAL
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ColumnPosition
//line mysql_sql.y:2846
		{
			yyLOCAL = &tree.ColumnPosition{
				Typ:            tree.ColumnPositionAfter,
				RelativeColumn: yyDollar[2].unresolvedNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2855
		{
			yyLOCAL = []*tree.AlterColumnOrder{yyDollar[1].alterColumnOrderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.AlterColumnOrder
//line mysql_sql.y:2859
		{
			yyLOCAL = append(yyDollar[1].alterColumnOrderByUnion(), yyDollar[3].alterColumnOrderUnion())
		}
		yyVAL.union = yyLOCAL
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AlterColumnOrder
//line mysql_sql.y:2865
		{
			yyLOCAL = &tree.AlterColumnOrder{Column: yyDollar[1].unresolvedNameUnion(), Direction: yyDollar[2].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2872
		{
			yyLOCAL = &tree.AlterTableName{
				Name: yyDollar[1].unresolvedObjectNameUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 415:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2880
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropIndex,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2887
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropKey,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2894
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[1].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 418:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2901
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropColumn,
				Name: tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2908
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ:  tree.AlterTableDropForeignKey,
				Name: tree.Identifier(yyDollar[3].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2915
		{
			yyLOCAL = &tree.AlterOptionDrop{
				Typ: tree.AlterTableDropPrimaryKey,
			}
		}
		yyVAL.union = yyLOCAL
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2923
		{
			yyLOCAL = &tree.AlterOptionAlterIndex{
				Visibility: yyDollar[3].indexVisibilityUnion(),
				Name:       tree.Identifier(yyDollar[2].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2930
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 423:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AlterTableOption
//line mysql_sql.y:2937
		{
			yyLOCAL = &tree.AlterOptionAlterCheck{
				Type:    yyDollar[1].str,
				Enforce: yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2946
		{
			yyLOCAL = tree.VISIBLE_TYPE_VISIBLE
		}
		yyVAL.union = yyLOCAL
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.VisibleType
//line mysql_sql.y:2950
		{
			yyLOCAL = tree.VISIBLE_TYPE_INVISIBLE
		}
		yyVAL.union = yyLOCAL
	case 426:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2957
		{
			yyLOCAL = &tree.AlterAccount{
				IfExists:     yyDollar[3].boolValUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].alterAccountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 427:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2969
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				DbName:         yyDollar[3].str,
				UpdateConfig:   yyDollar[7].str,
				IsAccountLevel: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 428:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2977
		{
			yyLOCAL = &tree.AlterDataBaseConfig{
				AccountName:    yyDollar[4].str,
				UpdateConfig:   yyDollar[8].str,
				IsAccountLevel: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 429:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:2985
		{
			assignments := []*tree.VarAssignmentExpr{
				&tree.VarAssignmentExpr{
					System: true,
					Global: true,
					Name:   yyDollar[6].str,
					Value:  yyDollar[8].exprUnion(),
				},
			}
			yyLOCAL = &tree.SetVar{Assignments: assignments}
		}
		yyVAL.union = yyLOCAL
	case 430:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:2998
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 431:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AlterAccountAuthOption
//line mysql_sql.y:3004
		{
			yyLOCAL = tree.AlterAccountAuthOption{
				Exist:          true,
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 432:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3015
		{
			yyLOCAL = &tree.AlterUser{
				IfExists:           yyDollar[3].boolValUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 433:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3026
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 434:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:3030
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 435:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3035
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3039
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 437:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3044
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3048
		{
			yyLOCAL = yyDollar[1].userMiscOptionUnion()
		}
		yyVAL.union = yyLOCAL
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3064
		{
			yyLOCAL = &tree.UserMiscOptionAccountUnlock{}
		}
		yyVAL.union = yyLOCAL
	case 440:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3068
		{
			yyLOCAL = &tree.UserMiscOptionAccountLock{}
		}
		yyVAL.union = yyLOCAL
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3072
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNone{}
		}
		yyVAL.union = yyLOCAL
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3076
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireInterval{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3080
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireNever{}
		}
		yyVAL.union = yyLOCAL
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3084
		{
			yyLOCAL = &tree.UserMiscOptionPasswordExpireDefault{}
		}
		yyVAL.union = yyLOCAL
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3088
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryDefault{}
		}
		yyVAL.union = yyLOCAL
	case 446:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3092
		{
			yyLOCAL = &tree.UserMiscOptionPasswordHistoryCount{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3096
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalDefault{}
		}
		yyVAL.union = yyLOCAL
	case 448:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3100
		{
			yyLOCAL = &tree.UserMiscOptionPasswordReuseIntervalCount{Value: yyDollar[4].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3104
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentNone{}
		}
		yyVAL.union = yyLOCAL
	case 450:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3108
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentDefault{}
		}
		yyVAL.union = yyLOCAL
	case 451:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3112
		{
			yyLOCAL = &tree.UserMiscOptionPasswordRequireCurrentOptional{}
		}
		yyVAL.union = yyLOCAL
	case 452:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3116
		{
			yyLOCAL = &tree.UserMiscOptionFailedLoginAttempts{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 453:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3120
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeCount{Value: yyDollar[2].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 454:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.UserMiscOption
//line mysql_sql.y:3124
		{
			yyLOCAL = &tree.UserMiscOptionPasswordLockTimeUnbounded{}
		}
		yyVAL.union = yyLOCAL
	case 455:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:3130
		{
			yyVAL.item = nil
		}
	case 456:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3135
		{
			yyVAL.item = nil
		}
	case 487:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3175
		{
			yyLOCAL = &tree.ShowCollation{}
		}
		yyVAL.union = yyLOCAL
	case 488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3181
		{
			yyLOCAL = &tree.ShowStages{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 489:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3189
		{
			yyLOCAL = &tree.ShowGrants{ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 490:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3193
		{
			yyLOCAL = &tree.ShowGrants{Username: yyDollar[4].usernameRecordUnion().Username, Hostname: yyDollar[4].usernameRecordUnion().Hostname, Roles: yyDollar[5].rolesUnion(), ShowGrantType: tree.GrantForUser}
		}
		yyVAL.union = yyLOCAL
	case 491:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3197
		{
			s := &tree.ShowGrants{}
			roles := []*tree.Role{tree.NewRole(yyDollar[5].cstrUnion().Compare())}
			s.Roles = roles
			s.ShowGrantType = tree.GrantForRole
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 492:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3206
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 493:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:3210
		{
			yyLOCAL = yyDollar[2].rolesUnion()
		}
		yyVAL.union = yyLOCAL
	case 494:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3216
		{
			yyLOCAL = &tree.ShowTableStatus{DbName: yyDollar[5].str, Like: yyDollar[6].comparisionExprUnion(), Where: yyDollar[7].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 495:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3221
		{
		}
	case 497:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3225
		{
		}
	case 499:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3230
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 500:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3240
		{
			yyLOCAL = &tree.ShowFunctionOrProcedureStatus{
				Like:       yyDollar[4].comparisionExprUnion(),
				Where:      yyDollar[5].whereUnion(),
				IsFunction: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3250
		{
			yyLOCAL = &tree.ShowRolesStmt{
				Like: yyDollar[3].comparisionExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 502:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3258
		{
			yyLOCAL = &tree.ShowNodeList{}
		}
		yyVAL.union = yyLOCAL
	case 503:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3264
		{
			yyLOCAL = &tree.ShowLocks{}
		}
		yyVAL.union = yyLOCAL
	case 504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3270
		{
			yyLOCAL = &tree.ShowTableNumber{DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3276
		{
			yyLOCAL = &tree.ShowColumnNumber{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3282
		{
			yyLOCAL = &tree.ShowTableValues{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3288
		{
			yyLOCAL = &tree.ShowTableSize{Table: yyDollar[3].unresolvedObjectNameUnion(), DbName: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3294
		{
			s := yyDollar[2].statementUnion().(*tree.ShowTarget)
			s.Like = yyDollar[3].comparisionExprUnion()
			s.Where = yyDollar[4].whereUnion()
			yyLOCAL = s
		}
		yyVAL.union = yyLOCAL
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3303
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowConfig}
		}
		yyVAL.union = yyLOCAL
	case 510:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3307
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowCharset}
		}
		yyVAL.union = yyLOCAL
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3311
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowEngines}
		}
		yyVAL.union = yyLOCAL
	case 512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3315
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowTriggers}
		}
		yyVAL.union = yyLOCAL
	case 513:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3319
		{
			yyLOCAL = &tree.ShowTarget{DbName: yyDollar[3].str, Type: tree.ShowEvents}
		}
		yyVAL.union = yyLOCAL
	case 514:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3323
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPlugins}
		}
		yyVAL.union = yyLOCAL
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3327
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowPrivileges}
		}
		yyVAL.union = yyLOCAL
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3331
		{
			yyLOCAL = &tree.ShowTarget{Type: tree.ShowProfiles}
		}
		yyVAL.union = yyLOCAL
	case 517:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3337
		{
			yyLOCAL = &tree.ShowIndex{
				TableName: *yyDollar[5].tableNameUnion(),
				Where:     yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 518:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3344
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[7].cstrUnion().Compare()), ExplicitSchema: true}
			tbl := tree.NewTableName(tree.Identifier(yyDollar[5].cstrUnion().Compare()), prefix)
			yyLOCAL = &tree.ShowIndex{
				TableName: *tbl,
				Where:     yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 519:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3354
		{
		}
	case 520:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3356
		{
		}
	case 524:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3365
		{
			yyLOCAL = &tree.ShowVariables{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 525:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3375
		{
			yyLOCAL = &tree.ShowStatus{
				Global: yyDollar[2].boolValUnion(),
				Like:   yyDollar[4].comparisionExprUnion(),
				Where:  yyDollar[5].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 526:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3384
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3388
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3392
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3398
		{
			yyLOCAL = &tree.ShowWarnings{}
		}
		yyVAL.union = yyLOCAL
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3404
		{
			yyLOCAL = &tree.ShowErrors{}
		}
		yyVAL.union = yyLOCAL
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3410
		{
			yyLOCAL = &tree.ShowProcessList{Full: yyDollar[2].fullOptUnion()}
		}
		yyVAL.union = yyLOCAL
	case 532:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3416
		{
			yyLOCAL = &tree.ShowSequences{
				DBName: yyDollar[3].str,
				Where:  yyDollar[4].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 533:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3425
		{
			yyLOCAL = &tree.ShowTables{
				Open:   false,
				Full:   yyDollar[2].fullOptUnion(),
				DBName: yyDollar[4].str,
				Like:   yyDollar[5].comparisionExprUnion(),
				Where:  yyDollar[6].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 534:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3435
		{
			yyLOCAL = &tree.ShowTables{
				Open:   true,
				Full:   yyDollar[3].fullOptUnion(),
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 535:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3447
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 536:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3451
		{
			yyLOCAL = &tree.ShowDatabases{Like: yyDollar[3].comparisionExprUnion(), Where: yyDollar[4].whereUnion()}
		}
		yyVAL.union = yyLOCAL
	case 537:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3457
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   false,
				Full:  yyDollar[2].fullOptUnion(),
				Table: yyDollar[4].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[5].str,
				Like:   yyDollar[6].comparisionExprUnion(),
				Where:  yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 538:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3469
		{
			yyLOCAL = &tree.ShowColumns{
				Ext:   true,
				Full:  yyDollar[3].fullOptUnion(),
				Table: yyDollar[5].unresolvedObjectNameUnion(),
				// colName: $3,
				DBName: yyDollar[6].str,
				Like:   yyDollar[7].comparisionExprUnion(),
				Where:  yyDollar[8].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 539:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3483
		{
			yyLOCAL = &tree.ShowAccounts{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 540:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3489
		{
			yyLOCAL = &tree.ShowPublications{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 541:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3496
		{
			yyLOCAL = &tree.ShowSubscriptions{Like: yyDollar[3].comparisionExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 542:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3501
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 543:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3505
		{
			yyLOCAL = tree.NewComparisonExpr(tree.LIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 544:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ComparisonExpr
//line mysql_sql.y:3509
		{
			yyLOCAL = tree.NewComparisonExpr(tree.ILIKE, nil, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 545:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3514
		{
			yyVAL.str = ""
		}
	case 546:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3518
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3524
		{
			yyLOCAL = yyDollar[2].unresolvedObjectNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 552:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3537
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:3541
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 554:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3547
		{
			yyLOCAL = &tree.ShowCreateTable{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 555:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3552
		{
			yyLOCAL = &tree.ShowCreateView{Name: yyDollar[4].unresolvedObjectNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 556:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3556
		{
			yyLOCAL = &tree.ShowCreateDatabase{IfNotExists: yyDollar[4].ifNotExistsUnion(), Name: yyDollar[5].str}
		}
		yyVAL.union = yyLOCAL
	case 557:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3560
		{
			yyLOCAL = &tree.ShowCreatePublications{Name: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3566
		{
			yyLOCAL = &tree.ShowBackendServers{}
		}
		yyVAL.union = yyLOCAL
	case 559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3572
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3576
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 561:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:3582
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3588
		{
			yyLOCAL = tree.SetUnresolvedObjectName(1, [3]string{yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 563:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3592
		{
			yyLOCAL = tree.SetUnresolvedObjectName(2, [3]string{yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 564:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedObjectName
//line mysql_sql.y:3596
		{
			yyLOCAL = tree.SetUnresolvedObjectName(3, [3]string{yyDollar[5].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare()})
		}
		yyVAL.union = yyLOCAL
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3602
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[2].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 566:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3606
		{
			yyLOCAL = tree.NewTruncateTable(yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 581:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3630
		{
			yyLOCAL = &tree.DropSequence{
				IfExists: yyDollar[3].boolValUnion(),
				Names:    yyDollar[4].tableNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 582:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3639
		{
			yyLOCAL = &tree.DropAccount{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     yyDollar[4].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 583:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3648
		{
			yyLOCAL = &tree.DropUser{
				IfExists: yyDollar[3].boolValUnion(),
				Users:    yyDollar[4].usersUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3657
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 585:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:3661
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:3667
		{
			yyLOCAL = &tree.User{
				Username: yyDollar[1].usernameRecordUnion().Username,
				Hostname: yyDollar[1].usernameRecordUnion().Hostname,
			}
		}
		yyVAL.union = yyLOCAL
	case 587:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3676
		{
			yyLOCAL = &tree.DropRole{
				IfExists: yyDollar[3].boolValUnion(),
				Roles:    yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 588:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3685
		{
			yyLOCAL = &tree.DropIndex{
				Name:      tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				TableName: *yyDollar[6].tableNameUnion(),
				IfExists:  yyDollar[3].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 589:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3695
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[4].boolValUnion(), Names: yyDollar[5].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 590:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3699
		{
			yyLOCAL = &tree.DropTable{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 591:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3705
		{
			yyLOCAL = &tree.DropConnector{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 592:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3711
		{
			yyLOCAL = &tree.DropView{IfExists: yyDollar[3].boolValUnion(), Names: yyDollar[4].tableNamesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 593:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3717
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 594:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3721
		{
			yyLOCAL = &tree.DropDatabase{Name: tree.Identifier(yyDollar[4].cstrUnion().Compare()), IfExists: yyDollar[3].boolValUnion()}
		}
		yyVAL.union = yyLOCAL
	case 595:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3727
		{
			yyLOCAL = tree.NewDeallocate(tree.Identifier(yyDollar[3].str), true)
		}
		yyVAL.union = yyLOCAL
	case 596:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3733
		{
			yyLOCAL = &tree.DropFunction{
				Name: yyDollar[3].functionNameUnion(),
				Args: yyDollar[5].funcArgsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 597:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3742
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[3].procNameUnion(),
				IfExists: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 598:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3749
		{
			yyLOCAL = &tree.DropProcedure{
				Name:     yyDollar[5].procNameUnion(),
				IfExists: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 601:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3760
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 602:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3765
		{
			yyDollar[2].statementUnion().(*tree.Delete).With = yyDollar[1].withClauseUnion()
			yyLOCAL = yyDollar[2].statementUnion()
		}
		yyVAL.union = yyLOCAL
	case 603:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3772
		{
			// Single-Table Syntax
			t := &tree.AliasedTableExpr{
				Expr: yyDollar[6].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[8].str),
				},
			}
			yyLOCAL = &tree.Delete{
				Tables:  tree.TableExprs{t},
				Where:   yyDollar[9].whereUnion(),
				OrderBy: yyDollar[10].orderByUnion(),
				Limit:   yyDollar[11].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 604:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3788
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[5].tableExprsUnion(),
				Where:     yyDollar[8].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[7].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 605:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3801
		{
			// Multiple-Table Syntax
			yyLOCAL = &tree.Delete{
				Tables:    yyDollar[6].tableExprsUnion(),
				Where:     yyDollar[9].whereUnion(),
				TableRefs: tree.TableExprs{yyDollar[8].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 606:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3812
		{
			yyLOCAL = tree.TableExprs{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExprs
//line mysql_sql.y:3816
		{
			yyLOCAL = append(yyDollar[1].tableExprsUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 608:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3822
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 609:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:3827
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 610:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3834
		{
		}
	case 611:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:3836
		{
		}
	case 612:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3839
		{
		}
	case 617:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3848
		{
		}
	case 619:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:3852
		{
		}
	case 621:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3857
		{
			rep := yyDollar[4].replaceUnion()
			rep.Table = yyDollar[2].tableExprUnion()
			rep.PartitionNames = yyDollar[3].identifierListUnion()
			yyLOCAL = rep
		}
		yyVAL.union = yyLOCAL
	case 622:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3866
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 623:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3873
		{
			yyLOCAL = &tree.Replace{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 624:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3879
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 625:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3887
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Replace{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 626:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3894
		{
			yyLOCAL = &tree.Replace{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 627:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Replace
//line mysql_sql.y:3901
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of replace can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Replace{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 628:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:3921
		{
			ins := yyDollar[4].insertUnion()
			ins.Table = yyDollar[2].tableExprUnion()
			ins.PartitionNames = yyDollar[3].identifierListUnion()
			ins.OnDuplicateUpdate = yyDollar[5].updateExprsUnion()
			yyLOCAL = ins
		}
		yyVAL.union = yyLOCAL
	case 629:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3931
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 630:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:3935
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 631:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3941
		{
			vc := tree.NewValuesClause(yyDollar[2].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 632:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3948
		{
			yyLOCAL = &tree.Insert{
				Rows: yyDollar[1].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 633:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3954
		{
			vc := tree.NewValuesClause(yyDollar[5].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 634:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3962
		{
			vc := tree.NewValuesClause(yyDollar[4].rowsExprsUnion())
			yyLOCAL = &tree.Insert{
				Rows: tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 635:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3969
		{
			yyLOCAL = &tree.Insert{
				Columns: yyDollar[2].identifierListUnion(),
				Rows:    yyDollar[4].selectUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 636:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Insert
//line mysql_sql.y:3976
		{
			if yyDollar[2].assignmentsUnion() == nil {
				yylex.Error("the set list of insert can not be empty")
				return 1
			}
			var identList tree.IdentifierList
			var valueList tree.Exprs
			for _, a := range yyDollar[2].assignmentsUnion() {
				identList = append(identList, a.Column)
				valueList = append(valueList, a.Expr)
			}
			vc := tree.NewValuesClause([]tree.Exprs{valueList})
			yyLOCAL = &tree.Insert{
				Columns: identList,
				Rows:    tree.NewSelect(vc, nil, nil),
			}
		}
		yyVAL.union = yyLOCAL
	case 637:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3995
		{
			yyLOCAL = []*tree.UpdateExpr{}
		}
		yyVAL.union = yyLOCAL
	case 638:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.UpdateExprs
//line mysql_sql.y:3999
		{
			yyLOCAL = yyDollar[5].updateExprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 639:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4004
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 640:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4008
		{
			yyLOCAL = []*tree.Assignment{yyDollar[1].assignmentUnion()}
		}
		yyVAL.union = yyLOCAL
	case 641:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Assignment
//line mysql_sql.y:4012
		{
			yyLOCAL = append(yyDollar[1].assignmentsUnion(), yyDollar[3].assignmentUnion())
		}
		yyVAL.union = yyLOCAL
	case 642:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Assignment
//line mysql_sql.y:4018
		{
			yyLOCAL = &tree.Assignment{
				Column: tree.Identifier(yyDollar[1].str),
				Expr:   yyDollar[3].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 643:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4027
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].str)}
		}
		yyVAL.union = yyLOCAL
	case 644:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4031
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].str))
		}
		yyVAL.union = yyLOCAL
	case 645:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4037
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 646:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4041
		{
			yyVAL.str = yyDollar[3].cstrUnion().Compare()
		}
	case 647:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4047
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 648:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4051
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 649:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4057
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 650:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:4062
		{
		}
	case 652:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4066
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 654:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4073
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 655:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4077
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 657:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:4084
		{
			yyLOCAL = &tree.DefaultVal{}
		}
		yyVAL.union = yyLOCAL
	case 658:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4089
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 659:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4093
		{
			yyLOCAL = yyDollar[3].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 660:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4099
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 661:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4103
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 662:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4109
		{
			yyLOCAL = yyDollar[2].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 663:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4113
		{
			yyLOCAL = yyDollar[1].tableNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 664:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4118
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 665:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.ExportParam
//line mysql_sql.y:4122
		{
			yyLOCAL = &tree.ExportParam{
				Outfile:     true,
				FilePath:    yyDollar[3].str,
				Fields:      yyDollar[4].fieldsUnion(),
				Lines:       yyDollar[5].linesUnion(),
				Header:      yyDollar[6].unsignedOptUnion(),
				MaxFileSize: uint64(yyDollar[7].int64ValUnion()) * 1024,
				ForceQuote:  yyDollar[8].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 666:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4135
		{
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 667:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4142
		{
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: '"',
			}
		}
		yyVAL.union = yyLOCAL
	case 668:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4149
		{
			str := yyDollar[7].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export1 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: yyDollar[4].str,
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 669:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Fields
//line mysql_sql.y:4167
		{
			str := yyDollar[4].str
			if str != "\\" && len(str) > 1 {
				yylex.Error("export2 error field terminator")
				return 1
			}
			var b byte
			if len(str) != 0 {
				b = byte(str[0])
			} else {
				b = 0
			}
			yyLOCAL = &tree.Fields{
				Terminated: ",",
				EnclosedBy: b,
			}
		}
		yyVAL.union = yyLOCAL
	case 670:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4186
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: "\n",
			}
		}
		yyVAL.union = yyLOCAL
	case 671:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Lines
//line mysql_sql.y:4192
		{
			yyLOCAL = &tree.Lines{
				TerminatedBy: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 672:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4199
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 673:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4203
		{
			str := strings.ToLower(yyDollar[2].str)
			if str == "true" {
				yyLOCAL = true
			} else if str == "false" {
				yyLOCAL = false
			} else {
				yylex.Error("error header flag")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 674:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4216
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 675:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:4220
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 676:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4225
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 677:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4229
		{
			yyLOCAL = yyDollar[3].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 678:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4236
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 679:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:4241
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 681:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4248
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion()}
		}
		yyVAL.union = yyLOCAL
	case 682:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4254
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion(), SelectLockInfo: yyDollar[5].selectLockInfoUnion()}
		}
		yyVAL.union = yyLOCAL
	case 683:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4258
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Ep: yyDollar[3].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 684:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4262
		{
			yyLOCAL = &tree.Select{Select: yyDollar[1].selectStatementUnion(), OrderBy: yyDollar[2].orderByUnion(), Limit: yyDollar[3].limitUnion(), Ep: yyDollar[4].exportParmUnion()}
		}
		yyVAL.union = yyLOCAL
	case 685:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4266
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), SelectLockInfo: yyDollar[6].selectLockInfoUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 686:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4270
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Ep: yyDollar[4].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 687:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Select
//line mysql_sql.y:4274
		{
			yyLOCAL = &tree.Select{Select: yyDollar[2].selectStatementUnion(), OrderBy: yyDollar[3].orderByUnion(), Limit: yyDollar[4].limitUnion(), Ep: yyDollar[5].exportParmUnion(), With: yyDollar[1].withClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 688:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4280
		{
			yyLOCAL = &tree.With{
				IsRecursive: false,
				CTEs:        yyDollar[2].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 689:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.With
//line mysql_sql.y:4287
		{
			yyLOCAL = &tree.With{
				IsRecursive: true,
				CTEs:        yyDollar[3].cteListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 690:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4296
		{
			yyLOCAL = []*tree.CTE{yyDollar[1].cteUnion()}
		}
		yyVAL.union = yyLOCAL
	case 691:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.CTE
//line mysql_sql.y:4300
		{
			yyLOCAL = append(yyDollar[1].cteListUnion(), yyDollar[3].cteUnion())
		}
		yyVAL.union = yyLOCAL
	case 692:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.CTE
//line mysql_sql.y:4306
		{
			yyLOCAL = &tree.CTE{
				Name: &tree.AliasClause{Alias: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Cols: yyDollar[2].identifierListUnion()},
				Stmt: yyDollar[5].statementUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 693:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4314
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 694:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4318
		{
			yyLOCAL = yyDollar[2].identifierListUnion()
		}
		yyVAL.union = yyLOCAL
	case 695:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4323
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 696:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4327
		{
			yyLOCAL = yyDollar[1].limitUnion()
		}
		yyVAL.union = yyLOCAL
	case 697:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4333
		{
			yyLOCAL = &tree.Limit{Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 698:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4337
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[2].exprUnion(), Count: yyDollar[4].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 699:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Limit
//line mysql_sql.y:4341
		{
			yyLOCAL = &tree.Limit{Offset: yyDollar[4].exprUnion(), Count: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 700:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4346
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 701:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4350
		{
			yyLOCAL = yyDollar[1].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 702:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4356
		{
			yyLOCAL = yyDollar[3].orderByUnion()
		}
		yyVAL.union = yyLOCAL
	case 703:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4362
		{
			yyLOCAL = tree.OrderBy{yyDollar[1].orderUnion()}
		}
		yyVAL.union = yyLOCAL
	case 704:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.OrderBy
//line mysql_sql.y:4366
		{
			yyLOCAL = append(yyDollar[1].orderByUnion(), yyDollar[3].orderUnion())
		}
		yyVAL.union = yyLOCAL
	case 705:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Order
//line mysql_sql.y:4372
		{
			yyLOCAL = &tree.Order{Expr: yyDollar[1].exprUnion(), Direction: yyDollar[2].directionUnion(), NullsPosition: yyDollar[3].nullsPositionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 706:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4377
		{
			yyLOCAL = tree.DefaultDirection
		}
		yyVAL.union = yyLOCAL
	case 707:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4381
		{
			yyLOCAL = tree.Ascending
		}
		yyVAL.union = yyLOCAL
	case 708:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Direction
//line mysql_sql.y:4385
		{
			yyLOCAL = tree.Descending
		}
		yyVAL.union = yyLOCAL
	case 709:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4390
		{
			yyLOCAL = tree.DefaultNullsPosition
		}
		yyVAL.union = yyLOCAL
	case 710:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4394
		{
			yyLOCAL = tree.NullsFirst
		}
		yyVAL.union = yyLOCAL
	case 711:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.NullsPosition
//line mysql_sql.y:4398
		{
			yyLOCAL = tree.NullsLast
		}
		yyVAL.union = yyLOCAL
	case 712:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4403
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 713:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SelectLockInfo
//line mysql_sql.y:4407
		{
			yyLOCAL = &tree.SelectLockInfo{
				LockType: tree.SelectLockForUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 714:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4415
		{
			yyLOCAL = &tree.ParenSelect{Select: yyDollar[2].selectUnion()}
		}
		yyVAL.union = yyLOCAL
	case 715:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4419
		{
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{Select: yyDollar[2].selectStatementUnion()}}
		}
		yyVAL.union = yyLOCAL
	case 716:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4423
		{
			valuesStmt := yyDollar[2].statementUnion().(*tree.ValuesStatement)
			yyLOCAL = &tree.ParenSelect{Select: &tree.Select{
				Select: &tree.ValuesClause{
					Rows:    valuesStmt.Rows,
					RowWord: true,
				},
				OrderBy: valuesStmt.OrderBy,
				Limit:   valuesStmt.Limit,
			}}
		}
		yyVAL.union = yyLOCAL
	case 717:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4437
		{
			yyLOCAL = yyDollar[1].selectStatementUnion()
		}
		yyVAL.union = yyLOCAL
	case 718:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4441
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 719:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4451
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 720:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4461
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 721:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4471
		{
			yyLOCAL = &tree.UnionClause{
				Type:     yyDollar[2].unionTypeRecordUnion().Type,
				Left:     yyDollar[1].selectStatementUnion(),
				Right:    yyDollar[3].selectStatementUnion(),
				All:      yyDollar[2].unionTypeRecordUnion().All,
				Distinct: yyDollar[2].unionTypeRecordUnion().Distinct,
			}
		}
		yyVAL.union = yyLOCAL
	case 722:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4483
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 723:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4491
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 724:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4499
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UNION,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 725:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4508
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 726:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4516
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 727:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4524
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.EXCEPT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 728:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4532
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 729:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4540
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 730:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4548
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.INTERSECT,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 731:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4556
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 732:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4564
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      true,
				Distinct: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 733:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UnionTypeRecord
//line mysql_sql.y:4572
		{
			yyLOCAL = &tree.UnionTypeRecord{
				Type:     tree.UT_MINUS,
				All:      false,
				Distinct: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 734:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4582
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: yyDollar[2].boolValUnion(),
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 735:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.SelectStatement
//line mysql_sql.y:4593
		{
			yyLOCAL = &tree.SelectClause{
				Distinct: false,
				Exprs:    yyDollar[3].selectExprsUnion(),
				From:     yyDollar[4].fromUnion(),
				Where:    yyDollar[5].whereUnion(),
				GroupBy:  yyDollar[6].groupByUnion(),
				Having:   yyDollar[7].whereUnion(),
				Option:   yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 736:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4607
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 737:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4611
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 738:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4615
		{
			yyVAL.str = strings.ToLower(yyDollar[1].str)
		}
	case 739:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4620
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 740:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4624
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 741:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:4628
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 744:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4637
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 745:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4641
		{
			yyLOCAL = &tree.Where{Type: tree.AstHaving, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 746:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4646
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 747:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.GroupBy
//line mysql_sql.y:4650
		{
			yyLOCAL = tree.GroupBy(yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 748:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4655
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 749:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.Where
//line mysql_sql.y:4659
		{
			yyLOCAL = &tree.Where{Type: tree.AstWhere, Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 750:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4665
		{
			yyLOCAL = tree.SelectExprs{yyDollar[1].selectExprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 751:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExprs
//line mysql_sql.y:4669
		{
			yyLOCAL = append(yyDollar[1].selectExprsUnion(), yyDollar[3].selectExprUnion())
		}
		yyVAL.union = yyLOCAL
	case 752:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4675
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.StarExpr()}
		}
		yyVAL.union = yyLOCAL
	case 753:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4679
		{
			yyDollar[2].cstrUnion().SetConfig(0)
			yyLOCAL = tree.SelectExpr{Expr: yyDollar[1].exprUnion(), As: yyDollar[2].cstrUnion()}
		}
		yyVAL.union = yyLOCAL
	case 754:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4684
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 755:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.SelectExpr
//line mysql_sql.y:4688
		{
			yyLOCAL = tree.SelectExpr{Expr: tree.SetUnresolvedNameWithStar(yyDollar[3].cstrUnion().Compare(), yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 756:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4693
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			tn := tree.NewTableName(tree.Identifier(""), prefix)
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{&tree.AliasedTableExpr{Expr: tn}},
			}
		}
		yyVAL.union = yyLOCAL
	case 757:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4701
		{
			yyLOCAL = yyDollar[1].fromUnion()
		}
		yyVAL.union = yyLOCAL
	case 758:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.From
//line mysql_sql.y:4707
		{
			yyLOCAL = &tree.From{
				Tables: tree.TableExprs{yyDollar[2].joinTableExprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 759:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4715
		{
			if t, ok := yyDollar[1].tableExprUnion().(*tree.JoinTableExpr); ok {
				yyLOCAL = t
			} else {
				yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].tableExprUnion(), Right: nil, JoinType: tree.JOIN_TYPE_CROSS}
			}
		}
		yyVAL.union = yyLOCAL
	case 760:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4723
		{
			yyLOCAL = &tree.JoinTableExpr{Left: yyDollar[1].joinTableExprUnion(), Right: yyDollar[3].tableExprUnion(), JoinType: tree.JOIN_TYPE_CROSS}
		}
		yyVAL.union = yyLOCAL
	case 763:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4733
		{
			yyLOCAL = yyDollar[1].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 764:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4739
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 765:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4748
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 766:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4757
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
				Cond:     yyDollar[4].joinCondUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 767:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.JoinTableExpr
//line mysql_sql.y:4766
		{
			yyLOCAL = &tree.JoinTableExpr{
				Left:     yyDollar[1].tableExprUnion(),
				JoinType: yyDollar[2].str,
				Right:    yyDollar[3].tableExprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 768:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4776
		{
			yyVAL.str = tree.JOIN_TYPE_NATURAL
		}
	case 769:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4780
		{
			if yyDollar[2].str == tree.JOIN_TYPE_LEFT {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_LEFT
			} else {
				yyVAL.str = tree.JOIN_TYPE_NATURAL_RIGHT
			}
		}
	case 770:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4790
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 771:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4794
		{
			yyVAL.str = tree.JOIN_TYPE_LEFT
		}
	case 772:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4798
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 773:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:4802
		{
			yyVAL.str = tree.JOIN_TYPE_RIGHT
		}
	case 774:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:4808
		{
			yyLOCAL = &tree.ValuesStatement{
				Rows:    yyDollar[2].rowsExprsUnion(),
				OrderBy: yyDollar[3].orderByUnion(),
				Limit:   yyDollar[4].limitUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 775:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4818
		{
			yyLOCAL = []tree.Exprs{yyDollar[1].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 776:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Exprs
//line mysql_sql.y:4822
		{
			yyLOCAL = append(yyDollar[1].rowsExprsUnion(), yyDollar[3].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 777:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:4828
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 778:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4834
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 779:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4838
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 780:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4844
		{
			yyVAL.str = tree.JOIN_TYPE_STRAIGHT
		}
	case 781:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:4850
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 782:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4854
		{
			yyVAL.str = tree.JOIN_TYPE_INNER
		}
	case 783:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:4858
		{
			yyVAL.str = tree.JOIN_TYPE_CROSS
		}
	case 784:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4864
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 785:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4868
		{
			yyLOCAL = yyDollar[1].joinCondUnion()
		}
		yyVAL.union = yyLOCAL
	case 786:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4874
		{
			yyLOCAL = &tree.OnJoinCond{Expr: yyDollar[2].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 787:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.JoinCond
//line mysql_sql.y:4878
		{
			yyLOCAL = &tree.UsingJoinCond{Cols: yyDollar[3].identifierListUnion()}
		}
		yyVAL.union = yyLOCAL
	case 788:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4884
		{
			yyLOCAL = tree.IdentifierList{tree.Identifier(yyDollar[1].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 789:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IdentifierList
//line mysql_sql.y:4888
		{
			yyLOCAL = append(yyDollar[1].identifierListUnion(), tree.Identifier(yyDollar[3].cstrUnion().Compare()))
		}
		yyVAL.union = yyLOCAL
	case 790:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4894
		{
			yyLOCAL = yyDollar[1].aliasedTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 791:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4898
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].parenTableExprUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
					Cols:  yyDollar[3].identifierListUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 792:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4908
		{
			if yyDollar[2].str != "" {
				yyLOCAL = &tree.AliasedTableExpr{
					Expr: yyDollar[1].tableExprUnion(),
					As: tree.AliasClause{
						Alias: tree.Identifier(yyDollar[2].str),
					},
				}
			} else {
				yyLOCAL = yyDollar[1].tableExprUnion()
			}
		}
		yyVAL.union = yyLOCAL
	case 793:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4921
		{
			yyLOCAL = yyDollar[2].joinTableExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 794:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ParenTableExpr
//line mysql_sql.y:4927
		{
			yyLOCAL = &tree.ParenTableExpr{Expr: yyDollar[1].selectStatementUnion().(*tree.ParenSelect).Select}
		}
		yyVAL.union = yyLOCAL
	case 795:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableExpr
//line mysql_sql.y:4933
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].cstrUnion().Compare()))
			yyLOCAL = &tree.TableFunction{
				Func: &tree.FuncExpr{
					Func:  tree.FuncName2ResolvableFunctionReference(name),
					Exprs: yyDollar[3].exprsUnion(),
					Type:  tree.FUNC_TYPE_TABLE,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 796:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AliasedTableExpr
//line mysql_sql.y:4946
		{
			yyLOCAL = &tree.AliasedTableExpr{
				Expr: yyDollar[1].tableNameUnion(),
				As: tree.AliasClause{
					Alias: tree.Identifier(yyDollar[2].str),
				},
				IndexHints: yyDollar[3].indexHintListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 797:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4957
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 799:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4964
		{
			yyLOCAL = []*tree.IndexHint{yyDollar[1].indexHintUnion()}
		}
		yyVAL.union = yyLOCAL
	case 800:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.IndexHint
//line mysql_sql.y:4968
		{
			yyLOCAL = append(yyDollar[1].indexHintListUnion(), yyDollar[2].indexHintUnion())
		}
		yyVAL.union = yyLOCAL
	case 801:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.IndexHint
//line mysql_sql.y:4974
		{
			yyLOCAL = &tree.IndexHint{
				IndexNames: yyDollar[4].strsUnion(),
				HintType:   yyDollar[1].indexHintTypeUnion(),
				HintScope:  yyDollar[2].indexHintScopeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 802:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4984
		{
			yyLOCAL = tree.HintUse
		}
		yyVAL.union = yyLOCAL
	case 803:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4988
		{
			yyLOCAL = tree.HintIgnore
		}
		yyVAL.union = yyLOCAL
	case 804:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintType
//line mysql_sql.y:4992
		{
			yyLOCAL = tree.HintForce
		}
		yyVAL.union = yyLOCAL
	case 805:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:4997
		{
			yyLOCAL = tree.HintForScan
		}
		yyVAL.union = yyLOCAL
	case 806:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5001
		{
			yyLOCAL = tree.HintForJoin
		}
		yyVAL.union = yyLOCAL
	case 807:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5005
		{
			yyLOCAL = tree.HintForOrderBy
		}
		yyVAL.union = yyLOCAL
	case 808:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.IndexHintScope
//line mysql_sql.y:5009
		{
			yyLOCAL = tree.HintForGroupBy
		}
		yyVAL.union = yyLOCAL
	case 809:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5014
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 810:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5018
		{
			yyLOCAL = []string{yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 811:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5022
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 812:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5026
		{
			yyLOCAL = []string{yyDollar[1].str}
		}
		yyVAL.union = yyLOCAL
	case 813:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5030
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 814:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5035
		{
			yyVAL.str = ""
		}
	case 815:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5039
		{
			yyVAL.str = yyDollar[1].str
		}
	case 816:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5043
		{
			yyVAL.str = yyDollar[2].str
		}
	case 817:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5049
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 819:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5055
		{
			yyLOCAL = tree.NewCStr("", yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 820:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5059
		{
			yyLOCAL = yyDollar[1].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 821:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5063
		{
			yyLOCAL = yyDollar[2].cstrUnion()
		}
		yyVAL.union = yyLOCAL
	case 822:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5067
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 823:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5071
		{
			yyLOCAL = tree.NewCStr(yyDollar[2].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 824:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5077
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 841:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5113
		{
			yyLOCAL = &tree.CreateExtension{
				Language: yyDollar[3].str,
				Name:     tree.Identifier(yyDollar[5].str),
				Filename: tree.Identifier(yyDollar[7].str),
			}
		}
		yyVAL.union = yyLOCAL
	case 842:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5123
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 843:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5129
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 844:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5135
		{
			yyLOCAL = &tree.CreateProcedure{
				Name: yyDollar[3].procNameUnion(),
				Args: yyDollar[5].procArgsUnion(),
				Body: yyDollar[7].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 845:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5145
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[1].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 846:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureName
//line mysql_sql.y:5150
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().ToLower()), ExplicitSchema: true}
			yyLOCAL = tree.NewProcedureName(tree.Identifier(yyDollar[3].cstrUnion().ToLower()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 847:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5156
		{
			yyLOCAL = tree.ProcedureArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 849:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5163
		{
			yyLOCAL = tree.ProcedureArgs{yyDollar[1].procArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 850:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ProcedureArgs
//line mysql_sql.y:5167
		{
			yyLOCAL = append(yyDollar[1].procArgsUnion(), yyDollar[3].procArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 851:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ProcedureArg
//line mysql_sql.y:5173
		{
			yyLOCAL = tree.ProcedureArg(yyDollar[1].procArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 852:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ProcedureArgDecl
//line mysql_sql.y:5179
		{
			yyLOCAL = tree.NewProcedureArgDecl(yyDollar[1].procArgTypeUnion(), yyDollar[2].unresolvedNameUnion(), yyDollar[3].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 853:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5184
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 854:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5188
		{
			yyLOCAL = tree.TYPE_IN
		}
		yyVAL.union = yyLOCAL
	case 855:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5192
		{
			yyLOCAL = tree.TYPE_OUT
		}
		yyVAL.union = yyLOCAL
	case 856:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.InOutArgType
//line mysql_sql.y:5196
		{
			yyLOCAL = tree.TYPE_INOUT
		}
		yyVAL.union = yyLOCAL
	case 857:
		yyDollar = yyS[yypt-12 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5203
		{
			yyLOCAL = &tree.CreateFunction{
				Name:       yyDollar[3].functionNameUnion(),
				Args:       yyDollar[5].funcArgsUnion(),
				ReturnType: yyDollar[8].funcReturnUnion(),
				Language:   yyDollar[10].str,
				Body:       yyDollar[12].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 858:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5215
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 859:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FunctionName
//line mysql_sql.y:5220
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewFuncName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 860:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5226
		{
			yyLOCAL = tree.FunctionArgs(nil)
		}
		yyVAL.union = yyLOCAL
	case 862:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5233
		{
			yyLOCAL = tree.FunctionArgs{yyDollar[1].funcArgUnion()}
		}
		yyVAL.union = yyLOCAL
	case 863:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.FunctionArgs
//line mysql_sql.y:5237
		{
			yyLOCAL = append(yyDollar[1].funcArgsUnion(), yyDollar[3].funcArgUnion())
		}
		yyVAL.union = yyLOCAL
	case 864:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FunctionArg
//line mysql_sql.y:5243
		{
			yyLOCAL = tree.FunctionArg(yyDollar[1].funcArgDeclUnion())
		}
		yyVAL.union = yyLOCAL
	case 865:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5249
		{
			yyLOCAL = tree.NewFunctionArgDecl(nil, yyDollar[1].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 866:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5253
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), nil)
		}
		yyVAL.union = yyLOCAL
	case 867:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FunctionArgDecl
//line mysql_sql.y:5257
		{
			yyLOCAL = tree.NewFunctionArgDecl(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 868:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5263
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 869:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReturnType
//line mysql_sql.y:5269
		{
			yyLOCAL = tree.NewReturnType(yyDollar[1].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 870:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5275
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[5].tableNameUnion(),
				ColNames:    yyDollar[6].identifierListUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 871:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5284
		{
			yyLOCAL = &tree.CreateView{
				Name:        yyDollar[4].tableNameUnion(),
				ColNames:    yyDollar[5].identifierListUnion(),
				AsSource:    yyDollar[7].selectUnion(),
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 872:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5295
		{
			yyLOCAL = &tree.CreateAccount{
				IfNotExists:  yyDollar[3].ifNotExistsUnion(),
				Name:         yyDollar[4].str,
				AuthOption:   yyDollar[5].accountAuthOptionUnion(),
				StatusOption: yyDollar[6].accountStatusUnion(),
				Comment:      yyDollar[7].accountCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 873:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5307
		{
			yyVAL.str = yyDollar[1].str
		}
	case 874:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5311
		{
			yyVAL.str = yyVAL.str + yyDollar[2].str
		}
	case 875:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5317
		{
			yyVAL.str = "OR REPLACE"
		}
	case 876:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5321
		{
			yyVAL.str = "ALGORITHM = " + yyDollar[3].str
		}
	case 877:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5325
		{
			yyVAL.str = "DEFINER = "
		}
	case 878:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5329
		{
			yyVAL.str = "SQL SECURITY " + yyDollar[3].str
		}
	case 879:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5334
		{
			yyVAL.str = ""
		}
	case 880:
		yyDollar = yyS[yypt-4 : yypt+1]
//line mysql_sql.y:5338
		{
			yyVAL.str = "WITH " + yyDollar[2].str + " CHECK OPTION"
		}
	case 886:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5352
		{
			yyVAL.str = ""
		}
	case 889:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5360
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 890:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountAuthOption
//line mysql_sql.y:5366
		{
			yyLOCAL = tree.AccountAuthOption{
				Equal:          yyDollar[2].str,
				AdminName:      yyDollar[3].str,
				IdentifiedType: yyDollar[4].accountIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 891:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5376
		{
			yyVAL.str = yyDollar[1].str
		}
	case 892:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5380
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 893:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5386
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 894:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5393
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 895:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.AccountIdentified
//line mysql_sql.y:5399
		{
			yyLOCAL = tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 896:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5407
		{
			yyLOCAL = tree.AccountStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 897:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5413
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusOpen,
			}
		}
		yyVAL.union = yyLOCAL
	case 898:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5420
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusSuspend,
			}
		}
		yyVAL.union = yyLOCAL
	case 899:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.AccountStatus
//line mysql_sql.y:5427
		{
			yyLOCAL = tree.AccountStatus{
				Exist:  true,
				Option: tree.AccountStatusRestricted,
			}
		}
		yyVAL.union = yyLOCAL
	case 900:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5435
		{
			yyLOCAL = tree.AccountComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 901:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountComment
//line mysql_sql.y:5441
		{
			yyLOCAL = tree.AccountComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 902:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5450
		{
			yyLOCAL = &tree.CreateUser{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Users:              yyDollar[4].usersUnion(),
				Role:               yyDollar[5].accountRoleUnion(),
				MiscOpt:            yyDollar[6].userMiscOptionUnion(),
				CommentOrAttribute: yyDollar[7].accountCommentOrAttributeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 903:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5462
		{
			yyLOCAL = &tree.CreatePublication{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Database:    tree.Identifier(yyDollar[6].cstrUnion().Compare()),
				AccountsSet: yyDollar[7].accountsSetOptionUnion(),
				Comment:     yyDollar[8].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 904:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5474
		{
			yyLOCAL = &tree.CreateStage{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Url:         yyDollar[5].str,
				Credentials: yyDollar[6].stageCredentialsUnion(),
				Status:      yyDollar[7].stageStatusUnion(),
				Comment:     yyDollar[8].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 905:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5486
		{
			yyLOCAL = tree.StageStatus{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 906:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5492
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusEnabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 907:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageStatus
//line mysql_sql.y:5499
		{
			yyLOCAL = tree.StageStatus{
				Exist:  true,
				Option: tree.StageStatusDisabled,
			}
		}
		yyVAL.union = yyLOCAL
	case 908:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5507
		{
			yyLOCAL = tree.StageComment{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 909:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.StageComment
//line mysql_sql.y:5513
		{
			yyLOCAL = tree.StageComment{
				Exist:   true,
				Comment: yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 910:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5521
		{
			yyLOCAL = tree.StageUrl{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 911:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.StageUrl
//line mysql_sql.y:5527
		{
			yyLOCAL = tree.StageUrl{
				Exist: true,
				Url:   yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 912:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5535
		{
			yyLOCAL = tree.StageCredentials{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 913:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.StageCredentials
//line mysql_sql.y:5541
		{
			yyLOCAL = tree.StageCredentials{
				Exist:       true,
				Credentials: yyDollar[4].strsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 914:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5550
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 915:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5554
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 916:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5559
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 917:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:5563
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 918:
		yyDollar = yyS[yypt-3 : yypt+1]
//line mysql_sql.y:5570
		{
			yyVAL.str = yyDollar[3].str
		}
	case 919:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:5575
		{
			yyVAL.str = ""
		}
	case 920:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:5579
		{
			yyVAL.str = yyDollar[2].str
		}
	case 921:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5585
		{
			yyLOCAL = &tree.AlterStage{
				IfNotExists:       yyDollar[3].boolValUnion(),
				Name:              tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				UrlOption:         yyDollar[6].stageUrlUnion(),
				CredentialsOption: yyDollar[7].stageCredentialsUnion(),
				StatusOption:      yyDollar[8].stageStatusUnion(),
				Comment:           yyDollar[9].stageCommentUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 922:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5599
		{
			yyLOCAL = &tree.AlterPublication{
				IfExists:    yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				AccountsSet: yyDollar[5].accountsSetOptionUnion(),
				Comment:     yyDollar[6].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 923:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5609
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 924:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5613
		{
			yyLOCAL = &tree.AccountsSetOption{
				All: true,
			}
		}
		yyVAL.union = yyLOCAL
	case 925:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5619
		{
			yyLOCAL = &tree.AccountsSetOption{
				SetAccounts: yyDollar[2].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 926:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5625
		{
			yyLOCAL = &tree.AccountsSetOption{
				AddAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 927:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountsSetOption
//line mysql_sql.y:5631
		{
			yyLOCAL = &tree.AccountsSetOption{
				DropAccounts: yyDollar[3].identifierListUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 928:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5640
		{
			yyLOCAL = &tree.DropPublication{
				IfExists: yyDollar[3].boolValUnion(),
				Name:     tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 929:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5649
		{
			yyLOCAL = &tree.DropStage{
				IfNotExists: yyDollar[3].boolValUnion(),
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
			}
		}
		yyVAL.union = yyLOCAL
	case 930:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5658
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 931:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5663
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist: false,
			}
		}
		yyVAL.union = yyLOCAL
	case 932:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5669
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: true,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 933:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.AccountCommentOrAttribute
//line mysql_sql.y:5677
		{
			yyLOCAL = tree.AccountCommentOrAttribute{
				Exist:     true,
				IsComment: false,
				Str:       yyDollar[2].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 934:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5783
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 935:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5787
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 936:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5793
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 937:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5803
		{
			yyLOCAL = []*tree.User{yyDollar[1].userUnion()}
		}
		yyVAL.union = yyLOCAL
	case 938:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.User
//line mysql_sql.y:5807
		{
			yyLOCAL = append(yyDollar[1].usersUnion(), yyDollar[3].userUnion())
		}
		yyVAL.union = yyLOCAL
	case 939:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.User
//line mysql_sql.y:5813
		{
			yyLOCAL = &tree.User{
				Username:   yyDollar[1].usernameRecordUnion().Username,
				Hostname:   yyDollar[1].usernameRecordUnion().Hostname,
				AuthOption: yyDollar[2].userIdentifiedUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 940:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5823
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: "%"}
		}
		yyVAL.union = yyLOCAL
	case 941:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5827
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 942:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.UsernameRecord
//line mysql_sql.y:5831
		{
			yyLOCAL = &tree.UsernameRecord{Username: yyDollar[1].str, Hostname: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 943:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5836
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 944:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5840
		{
			yyLOCAL = yyDollar[1].userIdentifiedUnion()
		}
		yyVAL.union = yyLOCAL
	case 945:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5846
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByPassword,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 946:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5853
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedByRandomPassword,
			}
		}
		yyVAL.union = yyLOCAL
	case 947:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.AccountIdentified
//line mysql_sql.y:5859
		{
			yyLOCAL = &tree.AccountIdentified{
				Typ: tree.AccountIdentifiedWithSSL,
				Str: yyDollar[3].str,
			}
		}
		yyVAL.union = yyLOCAL
	case 948:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:5868
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 950:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5875
		{
			yyLOCAL = &tree.CreateRole{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Roles:       yyDollar[4].rolesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 951:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5884
		{
			yyLOCAL = []*tree.Role{yyDollar[1].roleUnion()}
		}
		yyVAL.union = yyLOCAL
	case 952:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Role
//line mysql_sql.y:5888
		{
			yyLOCAL = append(yyDollar[1].rolesUnion(), yyDollar[3].roleUnion())
		}
		yyVAL.union = yyLOCAL
	case 953:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Role
//line mysql_sql.y:5894
		{
			yyLOCAL = &tree.Role{UserName: yyDollar[1].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 954:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5908
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 955:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5912
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 956:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:5916
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 957:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5921
		{
			yyLOCAL = tree.INDEX_CATEGORY_NONE
		}
		yyVAL.union = yyLOCAL
	case 958:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5925
		{
			yyLOCAL = tree.INDEX_CATEGORY_FULLTEXT
		}
		yyVAL.union = yyLOCAL
	case 959:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5929
		{
			yyLOCAL = tree.INDEX_CATEGORY_SPATIAL
		}
		yyVAL.union = yyLOCAL
	case 960:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.IndexCategory
//line mysql_sql.y:5933
		{
			yyLOCAL = tree.INDEX_CATEGORY_UNIQUE
		}
		yyVAL.union = yyLOCAL
	case 961:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:5939
		{
			var io *tree.IndexOption = nil
			if yyDollar[11].indexOptionUnion() == nil && yyDollar[5].indexTypeUnion() != tree.INDEX_TYPE_INVALID {
				io = &tree.IndexOption{IType: yyDollar[5].indexTypeUnion()}
			} else if yyDollar[11].indexOptionUnion() != nil {
				io = yyDollar[11].indexOptionUnion()
				io.IType = yyDollar[5].indexTypeUnion()
			}
			yyLOCAL = &tree.CreateIndex{
				Name:        tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				Table:       *yyDollar[7].tableNameUnion(),
				IndexCat:    yyDollar[2].indexCategoryUnion(),
				KeyParts:    yyDollar[9].keyPartsUnion(),
				IndexOption: io,
				MiscOption:  nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 962:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5958
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 963:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5962
		{
			// Merge the options
			if yyDollar[1].indexOptionUnion() == nil {
				yyLOCAL = yyDollar[2].indexOptionUnion()
			} else {
				opt1 := yyDollar[1].indexOptionUnion()
				opt2 := yyDollar[2].indexOptionUnion()
				if len(opt2.Comment) > 0 {
					opt1.Comment = opt2.Comment
				} else if opt2.KeyBlockSize > 0 {
					opt1.KeyBlockSize = opt2.KeyBlockSize
				} else if len(opt2.ParserName) > 0 {
					opt1.ParserName = opt2.ParserName
				} else if opt2.Visible != tree.VISIBLE_TYPE_INVALID {
					opt1.Visible = opt2.Visible
				}
				yyLOCAL = opt1
			}
		}
		yyVAL.union = yyLOCAL
	case 964:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5984
		{
			yyLOCAL = &tree.IndexOption{KeyBlockSize: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 965:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5988
		{
			yyLOCAL = &tree.IndexOption{Comment: yyDollar[2].str}
		}
		yyVAL.union = yyLOCAL
	case 966:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5992
		{
			yyLOCAL = &tree.IndexOption{ParserName: yyDollar[3].cstrUnion().Compare()}
		}
		yyVAL.union = yyLOCAL
	case 967:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:5996
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_VISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 968:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.IndexOption
//line mysql_sql.y:6000
		{
			yyLOCAL = &tree.IndexOption{Visible: tree.VISIBLE_TYPE_INVISIBLE}
		}
		yyVAL.union = yyLOCAL
	case 969:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6006
		{
			yyLOCAL = []*tree.KeyPart{yyDollar[1].keyPartUnion()}
		}
		yyVAL.union = yyLOCAL
	case 970:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:6010
		{
			yyLOCAL = append(yyDollar[1].keyPartsUnion(), yyDollar[3].keyPartUnion())
		}
		yyVAL.union = yyLOCAL
	case 971:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6016
		{
			// Order is parsed but just ignored as MySQL dtree.
			yyLOCAL = &tree.KeyPart{ColName: yyDollar[1].unresolvedNameUnion(), Length: int(yyDollar[2].lengthOptUnion()), Direction: yyDollar[3].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 972:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.KeyPart
//line mysql_sql.y:6021
		{
			yyLOCAL = &tree.KeyPart{Expr: yyDollar[2].exprUnion(), Direction: yyDollar[4].directionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 973:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6026
		{
			yyLOCAL = tree.INDEX_TYPE_INVALID
		}
		yyVAL.union = yyLOCAL
	case 974:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6030
		{
			yyLOCAL = tree.INDEX_TYPE_BTREE
		}
		yyVAL.union = yyLOCAL
	case 975:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6034
		{
			yyLOCAL = tree.INDEX_TYPE_HASH
		}
		yyVAL.union = yyLOCAL
	case 976:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6038
		{
			yyLOCAL = tree.INDEX_TYPE_RTREE
		}
		yyVAL.union = yyLOCAL
	case 977:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.IndexType
//line mysql_sql.y:6042
		{
			yyLOCAL = tree.INDEX_TYPE_BSI
		}
		yyVAL.union = yyLOCAL
	case 978:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6048
		{
			yyLOCAL = &tree.CreateDatabase{
				IfNotExists:        yyDollar[3].ifNotExistsUnion(),
				Name:               tree.Identifier(yyDollar[4].cstrUnion().Compare()),
				SubscriptionOption: yyDollar[5].subscriptionOptionUnion(),
				CreateOptions:      yyDollar[6].createOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 979:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 980:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.SubscriptionOption
//line mysql_sql.y:6063
		{
			yyLOCAL = &tree.SubscriptionOption{From: tree.Identifier(yyDollar[2].str), Publication: tree.Identifier(yyDollar[4].cstrUnion().Compare())}
		}
		yyVAL.union = yyLOCAL
	case 983:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6073
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 984:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6077
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 985:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6082
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 986:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6086
		{
			yyLOCAL = yyDollar[1].createOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 987:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6092
		{
			yyLOCAL = []tree.CreateOption{yyDollar[1].createOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 988:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.CreateOption
//line mysql_sql.y:6096
		{
			yyLOCAL = append(yyDollar[1].createOptionsUnion(), yyDollar[2].createOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 989:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6102
		{
			yyLOCAL = &tree.CreateOptionCharset{IsDefault: yyDollar[1].defaultOptionalUnion(), Charset: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 990:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6106
		{
			yyLOCAL = &tree.CreateOptionCollate{IsDefault: yyDollar[1].defaultOptionalUnion(), Collate: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 991:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.CreateOption
//line mysql_sql.y:6110
		{
			yyLOCAL = &tree.CreateOptionEncryption{Encrypt: yyDollar[4].str}
		}
		yyVAL.union = yyLOCAL
	case 992:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6115
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 993:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6119
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 994:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6125
		{
			yyLOCAL = &tree.CreateConnector{
				ConnectorName: yyDollar[3].tableNameUnion(),
				Options:       yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 995:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6134
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      false,
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Options:     yyDollar[9].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 996:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6145
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				Source:      true,
				IfNotExists: yyDollar[5].ifNotExistsUnion(),
				StreamName:  yyDollar[6].tableNameUnion(),
				Defs:        yyDollar[8].tableDefsUnion(),
				Options:     yyDollar[10].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 997:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6156
		{
			yyLOCAL = &tree.CreateStream{
				Replace:     yyDollar[2].streamOptionalUnion(),
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				StreamName:  yyDollar[5].tableNameUnion(),
				AsSource:    yyDollar[8].selectUnion(),
				Options:     yyDollar[6].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 998:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6167
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 999:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6171
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1000:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6177
		{
			yyLOCAL = &tree.CreateTable{
				Temporary:       yyDollar[2].boolValUnion(),
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1001:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6189
		{
			yyLOCAL = &tree.CreateTable{
				IfNotExists: yyDollar[4].ifNotExistsUnion(),
				Table:       *yyDollar[5].tableNameUnion(),
				Defs:        yyDollar[7].tableDefsUnion(),
				Param:       yyDollar[9].loadParamUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1002:
		yyDollar = yyS[yypt-11 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6198
		{
			yyLOCAL = &tree.CreateTable{
				IsClusterTable:  true,
				IfNotExists:     yyDollar[4].ifNotExistsUnion(),
				Table:           *yyDollar[5].tableNameUnion(),
				Defs:            yyDollar[7].tableDefsUnion(),
				Options:         yyDollar[9].tableOptionsUnion(),
				PartitionOption: yyDollar[10].partitionOptionUnion(),
				ClusterByOption: yyDollar[11].clusterByOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1003:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6211
		{
			yyLOCAL = yyDollar[1].loadParamUnion()
			yyLOCAL.Tail = yyDollar[2].tailParamUnion()
		}
		yyVAL.union = yyLOCAL
	case 1004:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6218
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Filepath:     yyDollar[2].str,
					CompressType: tree.AUTO,
					Format:       tree.CSV,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1005:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6228
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					Option: yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1006:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ExternParam
//line mysql_sql.y:6236
		{
			yyLOCAL = &tree.ExternParam{
				ExParamConst: tree.ExParamConst{
					ScanType: tree.S3,
					Option:   yyDollar[4].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1007:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6247
		{
			yyLOCAL = yyDollar[1].strsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1008:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6251
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].strsUnion()...)
		}
		yyVAL.union = yyLOCAL
	case 1009:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6256
		{
			yyLOCAL = []string{}
		}
		yyVAL.union = yyLOCAL
	case 1010:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:6260
		{
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
			yyLOCAL = append(yyLOCAL, yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1011:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.TailParameter
//line mysql_sql.y:6267
		{
			yyLOCAL = &tree.TailParameter{
				Fields:       yyDollar[1].fieldsUnion(),
				Lines:        yyDollar[2].linesUnion(),
				IgnoredLines: uint64(yyDollar[3].int64ValUnion()),
				ColumnList:   yyDollar[4].loadColumnsUnion(),
				Assignments:  yyDollar[5].updateExprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1012:
		yyDollar = yyS[yypt-10 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:6278
		{
			yyLOCAL = &tree.CreateSequence{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				Name:        yyDollar[4].tableNameUnion(),
				Type:        yyDollar[5].columnTypeUnion(),
				IncrementBy: yyDollar[6].incrementByOptionUnion(),
				MinValue:    yyDollar[7].minValueOptionUnion(),
				MaxValue:    yyDollar[8].maxValueOptionUnion(),
				StartWith:   yyDollar[9].startWithOptionUnion(),
				Cycle:       yyDollar[10].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1013:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6291
		{
			locale := ""
			fstr := "bigint"
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: fstr,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1014:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:6305
		{
			yyLOCAL = yyDollar[2].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1015:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6309
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1016:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6313
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1017:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6320
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1018:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6327
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1019:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.IncrementByOption
//line mysql_sql.y:6334
		{
			yyLOCAL = &tree.IncrementByOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1020:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6341
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1021:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6345
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1022:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6349
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1023:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6353
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1024:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6357
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1025:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MinValueOption
//line mysql_sql.y:6364
		{
			yyLOCAL = &tree.MinValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1026:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6371
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1027:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6375
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1028:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.MaxValueOption
//line mysql_sql.y:6382
		{
			yyLOCAL = &tree.MaxValueOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1029:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6389
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1030:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6393
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1031:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6400
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: false,
				Num:   yyDollar[2].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1032:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6407
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[4].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1033:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.StartWithOption
//line mysql_sql.y:6414
		{
			yyLOCAL = &tree.StartWithOption{
				Minus: true,
				Num:   yyDollar[3].item,
			}
		}
		yyVAL.union = yyLOCAL
	case 1034:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6421
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1035:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6425
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1036:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6430
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1037:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6434
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1038:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6438
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1039:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6443
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1040:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionOption
//line mysql_sql.y:6447
		{
			yyDollar[3].partitionByUnion().Num = uint64(yyDollar[4].int64ValUnion())
			yyLOCAL = &tree.PartitionOption{
				PartBy:     *yyDollar[3].partitionByUnion(),
				SubPartBy:  yyDollar[5].partitionByUnion(),
				Partitions: yyDollar[6].partitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1041:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6457
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1042:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6461
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: []*tree.UnresolvedName{yyDollar[3].unresolvedNameUnion()},
			}

		}
		yyVAL.union = yyLOCAL
	case 1043:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.ClusterByOption
//line mysql_sql.y:6468
		{
			yyLOCAL = &tree.ClusterByOption{
				ColumnList: yyDollar[4].unresolveNamesUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1044:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6475
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1045:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6479
		{
			yyLOCAL = &tree.PartitionBy{
				IsSubPartition: true,
				PType:          yyDollar[3].partitionByUnion(),
				Num:            uint64(yyDollar[4].int64ValUnion()),
			}
		}
		yyVAL.union = yyLOCAL
	case 1046:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6488
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1047:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6492
		{
			yyLOCAL = yyDollar[2].partitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1048:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6498
		{
			yyLOCAL = []*tree.Partition{yyDollar[1].partitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1049:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.Partition
//line mysql_sql.y:6502
		{
			yyLOCAL = append(yyDollar[1].partitionsUnion(), yyDollar[3].partitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1050:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6508
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: nil,
				Subs:    yyDollar[4].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1051:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.Partition
//line mysql_sql.y:6517
		{
			yyLOCAL = &tree.Partition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Values:  yyDollar[3].valuesUnion(),
				Options: yyDollar[4].tableOptionsUnion(),
				Subs:    yyDollar[5].subPartitionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1052:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6527
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1053:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6531
		{
			yyLOCAL = yyDollar[2].subPartitionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1054:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6537
		{
			yyLOCAL = []*tree.SubPartition{yyDollar[1].subPartitionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1055:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.SubPartition
//line mysql_sql.y:6541
		{
			yyLOCAL = append(yyDollar[1].subPartitionsUnion(), yyDollar[3].subPartitionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1056:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6547
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1057:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.SubPartition
//line mysql_sql.y:6554
		{
			yyLOCAL = &tree.SubPartition{
				Name:    tree.Identifier(yyDollar[2].cstrUnion().Compare()),
				Options: yyDollar[3].tableOptionsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1058:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6563
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1059:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6567
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1060:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6572
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1061:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6576
		{
			expr := tree.NewMaxValue()
			yyLOCAL = &tree.ValuesLessThan{ValueList: tree.Exprs{expr}}
		}
		yyVAL.union = yyLOCAL
	case 1062:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6581
		{
			yyLOCAL = &tree.ValuesLessThan{ValueList: yyDollar[5].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1063:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Values
//line mysql_sql.y:6585
		{
			yyLOCAL = &tree.ValuesIn{ValueList: yyDollar[4].exprsUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1064:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6590
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1065:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6594
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1066:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6604
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1067:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6608
		{
			res := yyDollar[2].item.(int64)
			if res == 0 {
				yylex.Error("partitions can not be 0")
				return 1
			}
			yyLOCAL = res
		}
		yyVAL.union = yyLOCAL
	case 1068:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6619
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1069:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6627
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.RangeType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1070:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6635
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					Expr: yyDollar[3].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1071:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6643
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.ListType{
					ColumnList: yyDollar[4].unresolveNamesUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1073:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6654
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:    yyDollar[1].boolValUnion(),
					Algorithm: yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1074:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6663
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.KeyType{
					Linear:     yyDollar[1].boolValUnion(),
					ColumnList: yyDollar[5].unresolveNamesUnion(),
					Algorithm:  yyDollar[3].int64ValUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1075:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.PartitionBy
//line mysql_sql.y:6673
		{
			yyLOCAL = &tree.PartitionBy{
				PType: &tree.HashType{
					Linear: yyDollar[1].boolValUnion(),
					Expr:   yyDollar[4].exprUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1076:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6683
		{
			yyLOCAL = 2
		}
		yyVAL.union = yyLOCAL
	case 1077:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:6687
		{
			yyLOCAL = yyDollar[3].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1078:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6692
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1079:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:6696
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1080:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6702
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1081:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6706
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1082:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6712
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1083:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6716
		{
			yyLOCAL = &tree.CreateConnectorWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1084:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6721
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1085:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6725
		{
			yyLOCAL = yyDollar[3].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1086:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6731
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1087:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6735
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1088:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6741
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].cstrUnion().Compare()), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1089:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6745
		{
			yyLOCAL = &tree.CreateStreamWithOption{Key: tree.Identifier(yyDollar[1].str), Val: yyDollar[3].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1090:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6750
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1091:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6754
		{
			yyLOCAL = yyDollar[1].tableOptionsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1092:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6760
		{
			yyLOCAL = []tree.TableOption{yyDollar[1].tableOptionUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1093:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6764
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[3].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1094:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.TableOption
//line mysql_sql.y:6768
		{
			yyLOCAL = append(yyDollar[1].tableOptionsUnion(), yyDollar[2].tableOptionUnion())
		}
		yyVAL.union = yyLOCAL
	case 1095:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6774
		{
			yyLOCAL = tree.NewTableOptionAUTOEXTEND_SIZE(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1096:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6778
		{
			yyLOCAL = tree.NewTableOptionAutoIncrement(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1097:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6782
		{
			yyLOCAL = tree.NewTableOptionAvgRowLength(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1098:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6786
		{
			yyLOCAL = tree.NewTableOptionCharset(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1099:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6790
		{
			yyLOCAL = tree.NewTableOptionCollate(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1100:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6794
		{
			yyLOCAL = tree.NewTableOptionChecksum(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1101:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6798
		{
			str := util.DealCommentString(yyDollar[3].str)
			yyLOCAL = tree.NewTableOptionComment(str)
		}
		yyVAL.union = yyLOCAL
	case 1102:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6803
		{
			yyLOCAL = tree.NewTableOptionCompression(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1103:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6807
		{
			yyLOCAL = tree.NewTableOptionConnection(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1104:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6811
		{
			yyLOCAL = tree.NewTableOptionDataDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1105:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6815
		{
			yyLOCAL = tree.NewTableOptionIndexDirectory(yyDollar[4].str)
		}
		yyVAL.union = yyLOCAL
	case 1106:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6819
		{
			yyLOCAL = tree.NewTableOptionDelayKeyWrite(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1107:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6823
		{
			yyLOCAL = tree.NewTableOptionEncryption(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1108:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6827
		{
			yyLOCAL = tree.NewTableOptionEngine(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1109:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6831
		{
			yyLOCAL = tree.NewTableOptionEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1110:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6835
		{
			yyLOCAL = tree.NewTableOptionInsertMethod(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1111:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6839
		{
			yyLOCAL = tree.NewTableOptionKeyBlockSize(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1112:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6843
		{
			yyLOCAL = tree.NewTableOptionMaxRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1113:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6847
		{
			yyLOCAL = tree.NewTableOptionMinRows(uint64(yyDollar[3].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1114:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6851
		{
			yyLOCAL = &tree.TableOptionPackKeys{Value: yyDollar[3].item.(int64)}
		}
		yyVAL.union = yyLOCAL
	case 1115:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6855
		{
			yyLOCAL = &tree.TableOptionPackKeys{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1116:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6859
		{
			yyLOCAL = tree.NewTableOptionPassword(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1117:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6863
		{
			yyLOCAL = tree.NewTableOptionRowFormat(yyDollar[3].rowFormatTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1118:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6867
		{
			yyLOCAL = tree.NewTTableOptionStartTrans(true)
		}
		yyVAL.union = yyLOCAL
	case 1119:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6871
		{
			yyLOCAL = tree.NewTTableOptionSecondaryEngineAttr(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1120:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6875
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1121:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6879
		{
			yyLOCAL = &tree.TableOptionStatsAutoRecalc{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1122:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6883
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1123:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6887
		{
			yyLOCAL = &tree.TableOptionStatsPersistent{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1124:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6891
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Value: uint64(yyDollar[3].item.(int64))}
		}
		yyVAL.union = yyLOCAL
	case 1125:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6895
		{
			yyLOCAL = &tree.TableOptionStatsSamplePages{Default: true}
		}
		yyVAL.union = yyLOCAL
	case 1126:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6899
		{
			yyLOCAL = tree.NewTableOptionTablespace(yyDollar[3].cstrUnion().Compare(), "")
		}
		yyVAL.union = yyLOCAL
	case 1127:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6903
		{
			yyLOCAL = tree.NewTableOptionTablespace("", yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1128:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6907
		{
			yyLOCAL = tree.NewTableOptionUnion(yyDollar[4].tableNamesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1129:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.TableOption
//line mysql_sql.y:6911
		{
			yyLOCAL = &tree.TableOptionProperties{Preperties: yyDollar[3].propertiesUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1130:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6917
		{
			yyLOCAL = []tree.Property{yyDollar[1].propertyUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1131:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []tree.Property
//line mysql_sql.y:6921
		{
			yyLOCAL = append(yyDollar[1].propertiesUnion(), yyDollar[3].propertyUnion())
		}
		yyVAL.union = yyLOCAL
	case 1132:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Property
//line mysql_sql.y:6927
		{
			yyLOCAL = tree.Property{Key: yyDollar[1].str, Value: yyDollar[3].str}
		}
		yyVAL.union = yyLOCAL
	case 1133:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6933
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1134:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:6937
		{
			yyVAL.str = " " + yyDollar[1].str + " " + yyDollar[2].str
		}
	case 1135:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6943
		{
			yyLOCAL = tree.ROW_FORMAT_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1136:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6947
		{
			yyLOCAL = tree.ROW_FORMAT_DYNAMIC
		}
		yyVAL.union = yyLOCAL
	case 1137:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6951
		{
			yyLOCAL = tree.ROW_FORMAT_FIXED
		}
		yyVAL.union = yyLOCAL
	case 1138:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6955
		{
			yyLOCAL = tree.ROW_FORMAT_COMPRESSED
		}
		yyVAL.union = yyLOCAL
	case 1139:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6959
		{
			yyLOCAL = tree.ROW_FORMAT_REDUNDANT
		}
		yyVAL.union = yyLOCAL
	case 1140:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.RowFormatType
//line mysql_sql.y:6963
		{
			yyLOCAL = tree.ROW_FORMAT_COMPACT
		}
		yyVAL.union = yyLOCAL
	case 1145:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6977
		{
			yyLOCAL = tree.TableNames{yyDollar[1].tableNameUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1146:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableNames
//line mysql_sql.y:6981
		{
			yyLOCAL = append(yyDollar[1].tableNamesUnion(), yyDollar[3].tableNameUnion())
		}
		yyVAL.union = yyLOCAL
	case 1147:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6990
		{
			prefix := tree.ObjectNamePrefix{ExplicitSchema: false}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[1].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1148:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.TableName
//line mysql_sql.y:6995
		{
			prefix := tree.ObjectNamePrefix{SchemaName: tree.Identifier(yyDollar[1].cstrUnion().Compare()), ExplicitSchema: true}
			yyLOCAL = tree.NewTableName(tree.Identifier(yyDollar[3].cstrUnion().Compare()), prefix)
		}
		yyVAL.union = yyLOCAL
	case 1149:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7001
		{
			yyLOCAL = tree.TableDefs(nil)
		}
		yyVAL.union = yyLOCAL
	case 1151:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7008
		{
			yyLOCAL = tree.TableDefs{yyDollar[1].tableDefUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1152:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.TableDefs
//line mysql_sql.y:7012
		{
			yyLOCAL = append(yyDollar[1].tableDefsUnion(), yyDollar[3].tableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1153:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7018
		{
			yyLOCAL = tree.TableDef(yyDollar[1].columnTableDefUnion())
		}
		yyVAL.union = yyLOCAL
	case 1154:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7022
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1155:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7026
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1156:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7032
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1157:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7036
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1158:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7042
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1159:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7051
		{
			yyLOCAL = &tree.FullTextIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].str,
				Empty:       true,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1160:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7060
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1161:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7083
		{
			keyTyp := tree.INDEX_TYPE_INVALID
			if yyDollar[3].strsUnion()[1] != "" {
				t := strings.ToLower(yyDollar[3].strsUnion()[1])
				switch t {
				case "zonemap":
					keyTyp = tree.INDEX_TYPE_ZONEMAP
				case "bsi":
					keyTyp = tree.INDEX_TYPE_BSI
				default:
					yylex.Error("Invail the type of index")
					return 1
				}
			}
			yyLOCAL = &tree.Index{
				IfNotExists: yyDollar[2].ifNotExistsUnion(),
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				KeyType:     keyTyp,
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1162:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7108
		{
			if yyDollar[1].str != "" {
				switch v := yyDollar[2].tableDefUnion().(type) {
				case *tree.PrimaryKeyIndex:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.ForeignKey:
					v.ConstraintSymbol = yyDollar[1].str
				case *tree.UniqueIndex:
					v.ConstraintSymbol = yyDollar[1].str
				}
			}
			yyLOCAL = yyDollar[2].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1163:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7122
		{
			yyLOCAL = yyDollar[1].tableDefUnion()
		}
		yyVAL.union = yyLOCAL
	case 1164:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7128
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1165:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7137
		{
			yyLOCAL = &tree.PrimaryKeyIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1166:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7146
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[7].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1167:
		yyDollar = yyS[yypt-9 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7155
		{
			yyLOCAL = &tree.UniqueIndex{
				KeyParts:    yyDollar[5].keyPartsUnion(),
				Name:        yyDollar[3].strsUnion()[0],
				Empty:       yyDollar[3].strsUnion()[1] == "",
				IndexOption: yyDollar[9].indexOptionUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1168:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7164
		{
			yyLOCAL = &tree.ForeignKey{
				IfNotExists: yyDollar[3].ifNotExistsUnion(),
				KeyParts:    yyDollar[6].keyPartsUnion(),
				Name:        yyDollar[4].str,
				Refer:       yyDollar[8].attributeReferenceUnion(),
				Empty:       true,
			}
		}
		yyVAL.union = yyLOCAL
	case 1169:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.TableDef
//line mysql_sql.y:7174
		{
			yyLOCAL = &tree.CheckIndex{
				Expr:     yyDollar[3].exprUnion(),
				Enforced: yyDollar[5].boolValUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1170:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7182
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1172:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7188
		{
			yyVAL.str = ""
		}
	case 1173:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7192
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1176:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7202
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = ""
		}
		yyVAL.union = yyLOCAL
	case 1177:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7208
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].str
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1178:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:7214
		{
			yyLOCAL = make([]string, 2)
			yyLOCAL[0] = yyDollar[1].cstrUnion().Compare()
			yyLOCAL[1] = yyDollar[3].str
		}
		yyVAL.union = yyLOCAL
	case 1187:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7233
		{
			yyVAL.str = ""
		}
	case 1188:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7237
		{
			yyVAL.str = yyDollar[1].cstrUnion().Compare()
		}
	case 1189:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.ColumnTableDef
//line mysql_sql.y:7243
		{
			yyLOCAL = tree.NewColumnTableDef(yyDollar[1].unresolvedNameUnion(), yyDollar[2].columnTypeUnion(), yyDollar[3].columnAttributesUnion())
		}
		yyVAL.union = yyLOCAL
	case 1190:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7249
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1191:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7253
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1192:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7257
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1193:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7263
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1194:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7267
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1195:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7271
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1196:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.CStr
//line mysql_sql.y:7275
		{
			yyLOCAL = tree.NewCStr(yyDollar[1].str, yylex.(*Lexer).lower)
		}
		yyVAL.union = yyLOCAL
	case 1197:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7281
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1198:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7285
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1199:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.UnresolvedName
//line mysql_sql.y:7289
		{
			yyLOCAL = tree.SetUnresolvedName(yyDollar[1].cstrUnion().Compare(), yyDollar[3].cstrUnion().Compare(), yyDollar[5].cstrUnion().Compare())
		}
		yyVAL.union = yyLOCAL
	case 1200:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7294
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1201:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7298
		{
			yyLOCAL = yyDollar[1].columnAttributesUnion()
		}
		yyVAL.union = yyLOCAL
	case 1202:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7304
		{
			yyLOCAL = []tree.ColumnAttribute{yyDollar[1].columnAttributeUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1203:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []tree.ColumnAttribute
//line mysql_sql.y:7308
		{
			yyLOCAL = append(yyDollar[1].columnAttributesUnion(), yyDollar[2].columnAttributeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1204:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7314
		{
			yyLOCAL = tree.NewAttributeNull(true)
		}
		yyVAL.union = yyLOCAL
	case 1205:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7318
		{
			yyLOCAL = tree.NewAttributeNull(false)
		}
		yyVAL.union = yyLOCAL
	case 1206:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7322
		{
			yyLOCAL = tree.NewAttributeDefault(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1207:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7326
		{
			yyLOCAL = tree.NewAttributeAutoIncrement()
		}
		yyVAL.union = yyLOCAL
	case 1208:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7330
		{
			yyLOCAL = yyDollar[1].columnAttributeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1209:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7334
		{
			str := util.DealCommentString(yyDollar[2].str)
			yyLOCAL = tree.NewAttributeComment(tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char))
		}
		yyVAL.union = yyLOCAL
	case 1210:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7339
		{
			yyLOCAL = tree.NewAttributeCollate(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1211:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7343
		{
			yyLOCAL = tree.NewAttributeColumnFormat(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1212:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7347
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1213:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7351
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1214:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7355
		{
			yyLOCAL = tree.NewAttributeStorage(yyDollar[2].str)
		}
		yyVAL.union = yyLOCAL
	case 1215:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7359
		{
			yyLOCAL = tree.NewAttributeAutoRandom(int(yyDollar[2].int64ValUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1216:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7363
		{
			yyLOCAL = yyDollar[1].attributeReferenceUnion()
		}
		yyVAL.union = yyLOCAL
	case 1217:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7367
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), false, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1218:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7371
		{
			yyLOCAL = tree.NewAttributeCheck(yyDollar[4].exprUnion(), yyDollar[6].boolValUnion(), yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1219:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7375
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			var es tree.Exprs = nil
			if yyDollar[4].exprUnion() != nil {
				es = append(es, yyDollar[4].exprUnion())
			}
			expr := &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
			yyLOCAL = tree.NewAttributeOnUpdate(expr)
		}
		yyVAL.union = yyLOCAL
	case 1220:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7388
		{
			yyLOCAL = tree.NewAttributeLowCardinality()
		}
		yyVAL.union = yyLOCAL
	case 1221:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7392
		{
			yyLOCAL = tree.NewAttributeVisable(true)
		}
		yyVAL.union = yyLOCAL
	case 1222:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7396
		{
			yyLOCAL = tree.NewAttributeVisable(false)
		}
		yyVAL.union = yyLOCAL
	case 1223:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7400
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1224:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7404
		{
			yyLOCAL = tree.NewAttributeHeader(yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1225:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:7408
		{
			yyLOCAL = tree.NewAttributeHeaders()
		}
		yyVAL.union = yyLOCAL
	case 1226:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7414
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1227:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:7418
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1228:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7423
		{
			yyVAL.str = ""
		}
	case 1229:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7427
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1230:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7433
		{
			yyVAL.str = ""
		}
	case 1231:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:7437
		{
			yyVAL.str = yyDollar[2].cstrUnion().Compare()
		}
	case 1232:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.AttributeReference
//line mysql_sql.y:7443
		{
			yyLOCAL = &tree.AttributeReference{
				TableName: yyDollar[2].tableNameUnion(),
				KeyParts:  yyDollar[3].keyPartsUnion(),
				Match:     yyDollar[4].matchTypeUnion(),
				OnDelete:  yyDollar[5].referenceOnRecordUnion().OnDelete,
				OnUpdate:  yyDollar[5].referenceOnRecordUnion().OnUpdate,
			}
		}
		yyVAL.union = yyLOCAL
	case 1233:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7455
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1234:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7462
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: tree.REFERENCE_OPTION_INVALID,
			}
		}
		yyVAL.union = yyLOCAL
	case 1235:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7469
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: tree.REFERENCE_OPTION_INVALID,
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1236:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7476
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[1].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[2].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1237:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.ReferenceOnRecord
//line mysql_sql.y:7483
		{
			yyLOCAL = &tree.ReferenceOnRecord{
				OnDelete: yyDollar[2].referenceOptionTypeUnion(),
				OnUpdate: yyDollar[1].referenceOptionTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1238:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7492
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1239:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7498
		{
			yyLOCAL = yyDollar[3].referenceOptionTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1240:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7504
		{
			yyLOCAL = tree.REFERENCE_OPTION_RESTRICT
		}
		yyVAL.union = yyLOCAL
	case 1241:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7508
		{
			yyLOCAL = tree.REFERENCE_OPTION_CASCADE
		}
		yyVAL.union = yyLOCAL
	case 1242:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7512
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_NULL
		}
		yyVAL.union = yyLOCAL
	case 1243:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7516
		{
			yyLOCAL = tree.REFERENCE_OPTION_NO_ACTION
		}
		yyVAL.union = yyLOCAL
	case 1244:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ReferenceOptionType
//line mysql_sql.y:7520
		{
			yyLOCAL = tree.REFERENCE_OPTION_SET_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1245:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7525
		{
			yyLOCAL = tree.MATCH_INVALID
		}
		yyVAL.union = yyLOCAL
	case 1247:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7532
		{
			yyLOCAL = tree.MATCH_FULL
		}
		yyVAL.union = yyLOCAL
	case 1248:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7536
		{
			yyLOCAL = tree.MATCH_PARTIAL
		}
		yyVAL.union = yyLOCAL
	case 1249:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.MatchType
//line mysql_sql.y:7540
		{
			yyLOCAL = tree.MATCH_SIMPLE
		}
		yyVAL.union = yyLOCAL
	case 1250:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7545
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1251:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []*tree.KeyPart
//line mysql_sql.y:7549
		{
			yyLOCAL = yyDollar[2].keyPartsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1252:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7554
		{
			yyLOCAL = -1
		}
		yyVAL.union = yyLOCAL
	case 1253:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int64
//line mysql_sql.y:7558
		{
			yyLOCAL = yyDollar[2].item.(int64)
		}
		yyVAL.union = yyLOCAL
	case 1260:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.Subquery
//line mysql_sql.y:7574
		{
			yyLOCAL = &tree.Subquery{Select: yyDollar[1].selectStatementUnion(), Exists: false}
		}
		yyVAL.union = yyLOCAL
	case 1261:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7580
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_AND, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1262:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7584
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_OR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1263:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7588
		{
			yyLOCAL = tree.NewBinaryExpr(tree.BIT_XOR, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1264:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7592
		{
			yyLOCAL = tree.NewBinaryExpr(tree.PLUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1265:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7596
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MINUS, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1266:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7600
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MULTI, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1267:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7604
		{
			yyLOCAL = tree.NewBinaryExpr(tree.DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1268:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7608
		{
			yyLOCAL = tree.NewBinaryExpr(tree.INTEGER_DIV, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1269:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7612
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1270:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7616
		{
			yyLOCAL = tree.NewBinaryExpr(tree.MOD, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1271:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7620
		{
			yyLOCAL = tree.NewBinaryExpr(tree.LEFT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1272:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7624
		{
			yyLOCAL = tree.NewBinaryExpr(tree.RIGHT_SHIFT, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1273:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7628
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1274:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7634
		{
			yyLOCAL = yyDollar[1].unresolvedNameUnion()
		}
		yyVAL.union = yyLOCAL
	case 1275:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7638
		{
			yyLOCAL = yyDollar[1].varExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1276:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7642
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1277:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7646
		{
			yyLOCAL = tree.NewParenExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1278:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7650
		{
			yyLOCAL = tree.NewTuple(append(yyDollar[2].exprsUnion(), yyDollar[4].exprUnion()))
		}
		yyVAL.union = yyLOCAL
	case 1279:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7654
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_PLUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1280:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7658
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MINUS, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1281:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7662
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_TILDE, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1282:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7666
		{
			yyLOCAL = tree.NewUnaryExpr(tree.UNARY_MARK, yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1283:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7670
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1284:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7674
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1285:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7678
		{
			yyDollar[2].subqueryUnion().Exists = true
			yyLOCAL = yyDollar[2].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1286:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7683
		{
			yyLOCAL = &tree.CaseExpr{
				Expr:  yyDollar[2].exprUnion(),
				Whens: yyDollar[3].whenClauseListUnion(),
				Else:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1287:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7691
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1288:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7696
		{
			yyLOCAL = tree.NewCastExpr(yyDollar[3].exprUnion(), yyDollar[5].columnTypeUnion())
		}
		yyVAL.union = yyLOCAL
	case 1289:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7700
		{
			name := tree.SetUnresolvedName("convert")
			es := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), es},
			}
		}
		yyVAL.union = yyLOCAL
	case 1290:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7709
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1291:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7713
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1292:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7717
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1293:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7721
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1294:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7725
		{
			yyLOCAL = yyDollar[1].funcExprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1295:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7731
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1296:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7739
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1297:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:7747
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				WindowSpec: yyDollar[4].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1298:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7756
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1299:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7760
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1300:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7765
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1301:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:7769
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1302:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7775
		{
			yyLOCAL = []*tree.When{yyDollar[1].whenClauseUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1303:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL []*tree.When
//line mysql_sql.y:7779
		{
			yyLOCAL = append(yyDollar[1].whenClauseListUnion(), yyDollar[2].whenClauseUnion())
		}
		yyVAL.union = yyLOCAL
	case 1304:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.When
//line mysql_sql.y:7785
		{
			yyLOCAL = &tree.When{
				Cond: yyDollar[2].exprUnion(),
				Val:  yyDollar[4].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1305:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:7794
		{
			t := yyVAL.columnTypeUnion()
			str := strings.ToLower(t.InternalType.FamilyString)
			if str == "binary" {
				t.InternalType.Scale = -1
			} else if str == "char" {
				if t.InternalType.DisplayWith == -1 {
					t.InternalType.FamilyString = "varchar"
					t.InternalType.Oid = uint32(defines.MYSQL_TYPE_VARCHAR)
				}
			}
		}
	case 1306:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7806
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1307:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7823
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1309:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7840
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1310:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7853
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1311:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7866
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1312:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7878
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1313:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7892
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimestampFamily,
					Scale:              yyDollar[2].lengthOptUnion(),
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1314:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7907
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:             tree.TimeFamily,
					FamilyString:       yyDollar[1].str,
					DisplayWith:        yyDollar[2].lengthOptUnion(),
					Scale:              yyDollar[2].lengthOptUnion(),
					TimePrecisionIsSet: false,
					Locale:             &locale,
					Oid:                uint32(defines.MYSQL_TYPE_TIME),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1315:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7922
		{
			name := yyDollar[1].str
			if yyDollar[2].str != "" {
				name = yyDollar[2].str
			}
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: name,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1316:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:7939
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[2].str,
					Width:        64,
					Locale:       &locale,
					Unsigned:     true,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1317:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:7954
		{
		}
	case 1321:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7961
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1322:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7965
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1323:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7969
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Following, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1324:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7975
		{
			yyLOCAL = &tree.FrameBound{Type: tree.CurrentRow}
		}
		yyVAL.union = yyLOCAL
	case 1325:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7979
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
		}
		yyVAL.union = yyLOCAL
	case 1326:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7983
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1327:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameBound
//line mysql_sql.y:7987
		{
			yyLOCAL = &tree.FrameBound{Type: tree.Preceding, Expr: yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1328:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7993
		{
			yyLOCAL = tree.Rows
		}
		yyVAL.union = yyLOCAL
	case 1329:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:7997
		{
			yyLOCAL = tree.Range
		}
		yyVAL.union = yyLOCAL
	case 1330:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FrameType
//line mysql_sql.y:8001
		{
			yyLOCAL = tree.Groups
		}
		yyVAL.union = yyLOCAL
	case 1331:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8007
		{
			yyLOCAL = &tree.FrameClause{
				Type:  yyDollar[1].frameTypeUnion(),
				Start: yyDollar[2].frameBoundUnion(),
				End:   &tree.FrameBound{Type: tree.CurrentRow},
			}
		}
		yyVAL.union = yyLOCAL
	case 1332:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8015
		{
			yyLOCAL = &tree.FrameClause{
				Type:   yyDollar[1].frameTypeUnion(),
				HasEnd: true,
				Start:  yyDollar[3].frameBoundUnion(),
				End:    yyDollar[5].frameBoundUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1333:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8025
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1334:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.FrameClause
//line mysql_sql.y:8029
		{
			yyLOCAL = yyDollar[1].frameClauseUnion()
		}
		yyVAL.union = yyLOCAL
	case 1335:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8036
		{
			yyLOCAL = yyDollar[3].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1336:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8041
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1337:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8045
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1338:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8050
		{
			yyVAL.str = ","
		}
	case 1339:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8054
		{
			yyVAL.str = yyDollar[2].str
		}
	case 1340:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8059
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1342:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.WindowSpec
//line mysql_sql.y:8066
		{
			hasFrame := true
			var f *tree.FrameClause
			if yyDollar[5].frameClauseUnion() != nil {
				f = yyDollar[5].frameClauseUnion()
			} else {
				hasFrame = false
				f = &tree.FrameClause{Type: tree.Range}
				if yyDollar[4].orderByUnion() == nil {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.Following, UnBounded: true}
				} else {
					f.Start = &tree.FrameBound{Type: tree.Preceding, UnBounded: true}
					f.End = &tree.FrameBound{Type: tree.CurrentRow}
				}
			}
			yyLOCAL = &tree.WindowSpec{
				PartitionBy: yyDollar[3].exprsUnion(),
				OrderBy:     yyDollar[4].orderByUnion(),
				Frame:       f,
				HasFrame:    hasFrame,
			}
		}
		yyVAL.union = yyLOCAL
	case 1343:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8092
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      append(yyDollar[4].exprsUnion(), tree.NewNumValWithType(constant.MakeString(yyDollar[6].str), yyDollar[6].str, false, tree.P_char)),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[8].windowSpecUnion(),
				OrderBy:    yyDollar[5].orderByUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1344:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8103
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1345:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8113
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1346:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8123
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1347:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8133
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1348:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8142
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[3].exprsUnion(),
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1349:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8151
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1350:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8161
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1351:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8171
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1352:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8181
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      yyDollar[4].exprsUnion(),
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1353:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8191
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			es := tree.NewNumValWithType(constant.MakeString("*"), "*", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{es},
				WindowSpec: yyDollar[5].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1354:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8201
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1355:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8211
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1356:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8221
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1357:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8231
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1358:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8241
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1359:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8251
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1360:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8261
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1361:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8271
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:       tree.FuncName2ResolvableFunctionReference(name),
				Exprs:      tree.Exprs{yyDollar[4].exprUnion()},
				Type:       yyDollar[3].funcTypeUnion(),
				WindowSpec: yyDollar[6].windowSpecUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1365:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8290
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1366:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8298
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1367:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8306
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1368:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8314
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[3].exprUnion(), yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1369:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8322
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			timeUinit := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{timeUinit, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1370:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8332
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1371:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8340
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[4].exprUnion()},
				Type:  yyDollar[3].funcTypeUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1372:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8349
		{
			name := tree.SetUnresolvedName("nextval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1373:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8357
		{
			name := tree.SetUnresolvedName("setval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1374:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8365
		{
			name := tree.SetUnresolvedName("currval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1375:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8373
		{
			name := tree.SetUnresolvedName("lastval")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: nil,
			}
		}
		yyVAL.union = yyLOCAL
	case 1376:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8381
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(0), "0", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1377:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8392
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(1), "1", false, tree.P_int64)
			arg1 := tree.NewNumValWithType(constant.MakeString("both"), "both", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[3].exprUnion(), yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1378:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8402
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(2), "2", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			arg2 := tree.NewNumValWithType(constant.MakeString(" "), " ", false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, arg2, yyDollar[5].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1379:
		yyDollar = yyS[yypt-7 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8414
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			arg0 := tree.NewNumValWithType(constant.MakeInt64(3), "3", false, tree.P_int64)
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg0, arg1, yyDollar[4].exprUnion(), yyDollar[6].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1380:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8425
		{
			column := tree.SetUnresolvedName(strings.ToLower(yyDollar[3].str))
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{column},
			}
		}
		yyVAL.union = yyLOCAL
	case 1387:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:8447
		{
			yyVAL.str = yyDollar[1].str
		}
	case 1416:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8483
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1417:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8495
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1418:
		yyDollar = yyS[yypt-8 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8507
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			str := strings.ToLower(yyDollar[3].str)
			arg1 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{arg1, yyDollar[5].exprUnion(), yyDollar[7].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1419:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8518
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1420:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8526
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1421:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8533
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			yyLOCAL = &tree.FuncExpr{
				Func: tree.FuncName2ResolvableFunctionReference(name),
			}
		}
		yyVAL.union = yyLOCAL
	case 1422:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8540
		{
			name := tree.SetUnresolvedName(strings.ToLower(yyDollar[1].str))
			var es tree.Exprs = nil
			if yyDollar[2].exprUnion() != nil {
				es = append(es, yyDollar[2].exprUnion())
			}
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1423:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8552
		{
			name := tree.SetUnresolvedName("binary")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1424:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8560
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].exprUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1425:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8570
		{
			name := tree.SetUnresolvedName("binary")
			exprs := make([]tree.Expr, 1)
			exprs[0] = yyDollar[2].unresolvedNameUnion()
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: exprs,
			}
		}
		yyVAL.union = yyLOCAL
	case 1426:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8580
		{
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1427:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8588
		{
			cn := tree.NewNumValWithType(constant.MakeString(yyDollar[5].str), yyDollar[5].str, false, tree.P_char)
			es := yyDollar[3].exprsUnion()
			es = append(es, cn)
			name := tree.SetUnresolvedName("char")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1428:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8599
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("date")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1429:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8608
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("time")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1430:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8617
		{
			name := tree.SetUnresolvedName("insert")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1431:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8625
		{
			es := tree.Exprs{yyDollar[3].exprUnion()}
			es = append(es, yyDollar[5].exprUnion())
			name := tree.SetUnresolvedName("mod")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: es,
			}
		}
		yyVAL.union = yyLOCAL
	case 1432:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8635
		{
			name := tree.SetUnresolvedName("password")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: yyDollar[3].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1433:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.FuncExpr
//line mysql_sql.y:8643
		{
			val := tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_char)
			name := tree.SetUnresolvedName("timestamp")
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{val},
			}
		}
		yyVAL.union = yyLOCAL
	case 1434:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8653
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1435:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8657
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1436:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8663
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1437:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8667
		{
			ival, errStr := util.GetInt64(yyDollar[2].item)
			if errStr != "" {
				yylex.Error(errStr)
				return 1
			}
			str := fmt.Sprintf("%v", yyDollar[2].item)
			yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(ival), str, false, tree.P_int64)
		}
		yyVAL.union = yyLOCAL
	case 1444:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:8686
		{
		}
	case 1445:
		yyDollar = yyS[yypt-2 : yypt+1]
//line mysql_sql.y:8688
		{
		}
	case 1479:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8729
		{
			name := tree.SetUnresolvedName("interval")
			str := strings.ToLower(yyDollar[3].str)
			arg2 := tree.NewNumValWithType(constant.MakeString(str), str, false, tree.P_char)
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[2].exprUnion(), arg2},
			}
		}
		yyVAL.union = yyLOCAL
	case 1480:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8740
		{
			yyLOCAL = tree.FUNC_TYPE_DEFAULT
		}
		yyVAL.union = yyLOCAL
	case 1481:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8744
		{
			yyLOCAL = tree.FUNC_TYPE_DISTINCT
		}
		yyVAL.union = yyLOCAL
	case 1482:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.FuncType
//line mysql_sql.y:8748
		{
			yyLOCAL = tree.FUNC_TYPE_ALL
		}
		yyVAL.union = yyLOCAL
	case 1483:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.Tuple
//line mysql_sql.y:8754
		{
			yyLOCAL = tree.NewTuple(yyDollar[2].exprsUnion())
		}
		yyVAL.union = yyLOCAL
	case 1484:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8759
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1485:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8763
		{
			yyLOCAL = yyDollar[1].exprsUnion()
		}
		yyVAL.union = yyLOCAL
	case 1486:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8769
		{
			yyLOCAL = tree.Exprs{yyDollar[1].exprUnion()}
		}
		yyVAL.union = yyLOCAL
	case 1487:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Exprs
//line mysql_sql.y:8773
		{
			yyLOCAL = append(yyDollar[1].exprsUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1488:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8780
		{
			yyLOCAL = tree.NewAndExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1489:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8784
		{
			yyLOCAL = tree.NewOrExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1490:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8788
		{
			name := tree.SetUnresolvedName(strings.ToLower("concat"))
			yyLOCAL = &tree.FuncExpr{
				Func:  tree.FuncName2ResolvableFunctionReference(name),
				Exprs: tree.Exprs{yyDollar[1].exprUnion(), yyDollar[3].exprUnion()},
			}
		}
		yyVAL.union = yyLOCAL
	case 1491:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8796
		{
			yyLOCAL = tree.NewXorExpr(yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1492:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8800
		{
			yyLOCAL = tree.NewNotExpr(yyDollar[2].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1493:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8804
		{
			yyLOCAL = tree.NewMaxValue()
		}
		yyVAL.union = yyLOCAL
	case 1494:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8808
		{
			yyLOCAL = yyDollar[1].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1495:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8814
		{
			yyLOCAL = tree.NewIsNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1496:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8818
		{
			yyLOCAL = tree.NewIsNotNullExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1497:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8822
		{
			yyLOCAL = tree.NewIsUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1498:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8826
		{
			yyLOCAL = tree.NewIsNotUnknownExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1499:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8830
		{
			yyLOCAL = tree.NewIsTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1500:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8834
		{
			yyLOCAL = tree.NewIsNotTrueExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1501:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8838
		{
			yyLOCAL = tree.NewIsFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1502:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8842
		{
			yyLOCAL = tree.NewIsNotFalseExpr(yyDollar[1].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1503:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8846
		{
			yyLOCAL = tree.NewComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1504:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8850
		{
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
			yyLOCAL = tree.NewSubqueryComparisonExpr(yyDollar[2].comparisonOpUnion(), yyDollar[3].comparisonOpUnion(), yyDollar[1].exprUnion(), yyDollar[4].subqueryUnion())
		}
		yyVAL.union = yyLOCAL
	case 1506:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8858
		{
			yyLOCAL = tree.NewComparisonExpr(tree.IN, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1507:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8862
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_IN, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1508:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8866
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.LIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1509:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8870
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_LIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1510:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8874
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.ILIKE, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1511:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8878
		{
			yyLOCAL = tree.NewComparisonExprWithEscape(tree.NOT_ILIKE, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1512:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8882
		{
			yyLOCAL = tree.NewComparisonExpr(tree.REG_MATCH, yyDollar[1].exprUnion(), yyDollar[3].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1513:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8886
		{
			yyLOCAL = tree.NewComparisonExpr(tree.NOT_REG_MATCH, yyDollar[1].exprUnion(), yyDollar[4].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1514:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8890
		{
			yyLOCAL = tree.NewRangeCond(false, yyDollar[1].exprUnion(), yyDollar[3].exprUnion(), yyDollar[5].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1515:
		yyDollar = yyS[yypt-6 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8894
		{
			yyLOCAL = tree.NewRangeCond(true, yyDollar[1].exprUnion(), yyDollar[4].exprUnion(), yyDollar[6].exprUnion())
		}
		yyVAL.union = yyLOCAL
	case 1517:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8900
		{
			yyLOCAL = nil
		}
		yyVAL.union = yyLOCAL
	case 1518:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8904
		{
			yyLOCAL = yyDollar[2].exprUnion()
		}
		yyVAL.union = yyLOCAL
	case 1519:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8910
		{
			yyLOCAL = yyDollar[1].tupleUnion()
		}
		yyVAL.union = yyLOCAL
	case 1520:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8914
		{
			yyLOCAL = yyDollar[1].subqueryUnion()
		}
		yyVAL.union = yyLOCAL
	case 1521:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8921
		{
			yyLOCAL = tree.ALL
		}
		yyVAL.union = yyLOCAL
	case 1522:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8925
		{
			yyLOCAL = tree.ANY
		}
		yyVAL.union = yyLOCAL
	case 1523:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8929
		{
			yyLOCAL = tree.SOME
		}
		yyVAL.union = yyLOCAL
	case 1524:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8935
		{
			yyLOCAL = tree.EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1525:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8939
		{
			yyLOCAL = tree.LESS_THAN
		}
		yyVAL.union = yyLOCAL
	case 1526:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8943
		{
			yyLOCAL = tree.GREAT_THAN
		}
		yyVAL.union = yyLOCAL
	case 1527:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8947
		{
			yyLOCAL = tree.LESS_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1528:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8951
		{
			yyLOCAL = tree.GREAT_THAN_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1529:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8955
		{
			yyLOCAL = tree.NOT_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1530:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ComparisonOp
//line mysql_sql.y:8959
		{
			yyLOCAL = tree.NULL_SAFE_EQUAL
		}
		yyVAL.union = yyLOCAL
	case 1531:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8965
		{
			yyLOCAL = tree.NewAttributePrimaryKey()
		}
		yyVAL.union = yyLOCAL
	case 1532:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8969
		{
			yyLOCAL = tree.NewAttributeUniqueKey()
		}
		yyVAL.union = yyLOCAL
	case 1533:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8973
		{
			yyLOCAL = tree.NewAttributeUnique()
		}
		yyVAL.union = yyLOCAL
	case 1534:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.ColumnAttribute
//line mysql_sql.y:8977
		{
			yyLOCAL = tree.NewAttributeKey()
		}
		yyVAL.union = yyLOCAL
	case 1535:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8983
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1536:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:8996
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1537:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9001
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1538:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9007
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_char)
		}
		yyVAL.union = yyLOCAL
	case 1539:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9011
		{
			str := fmt.Sprintf("%v", yyDollar[1].item)
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), str, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), str, false, tree.P_int64)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1540:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9024
		{
			fval := yyDollar[1].item.(float64)
			yyLOCAL = tree.NewNumValWithType(constant.MakeFloat64(fval), yylex.(*Lexer).scanner.LastToken, false, tree.P_float64)
		}
		yyVAL.union = yyLOCAL
	case 1541:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9029
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(true), "true", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1542:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9033
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeBool(false), "false", false, tree.P_bool)
		}
		yyVAL.union = yyLOCAL
	case 1543:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9037
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null)
		}
		yyVAL.union = yyLOCAL
	case 1544:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9041
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_hexnum)
		}
		yyVAL.union = yyLOCAL
	case 1545:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9045
		{
			if strings.HasPrefix(yyDollar[2].str, "0x") {
				yyDollar[2].str = yyDollar[2].str[2:]
			}
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_bit)
		}
		yyVAL.union = yyLOCAL
	case 1546:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9052
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[1].str), yyDollar[1].str, false, tree.P_decimal)
		}
		yyVAL.union = yyLOCAL
	case 1547:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9056
		{
			switch v := yyDollar[1].item.(type) {
			case uint64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeUint64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_uint64)
			case int64:
				yyLOCAL = tree.NewNumValWithType(constant.MakeInt64(v), yylex.(*Lexer).scanner.LastToken, false, tree.P_int64)
			case string:
				yyLOCAL = tree.NewNumValWithType(constant.MakeString(v), v, false, tree.P_bit)
			default:
				yylex.Error("parse integral fail")
				return 1
			}
		}
		yyVAL.union = yyLOCAL
	case 1548:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9070
		{
			yyLOCAL = tree.NewParamExpr(yylex.(*Lexer).GetParamIndex())
		}
		yyVAL.union = yyLOCAL
	case 1549:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Expr
//line mysql_sql.y:9074
		{
			yyLOCAL = tree.NewNumValWithType(constant.MakeString(yyDollar[2].str), yyDollar[2].str, false, tree.P_ScoreBinary)
		}
		yyVAL.union = yyLOCAL
	case 1550:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9081
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.Unsigned = yyDollar[2].unsignedOptUnion()
			yyLOCAL.InternalType.Zerofill = yyDollar[3].zeroFillOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1554:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9092
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
			yyLOCAL.InternalType.DisplayWith = yyDollar[2].lengthOptUnion()
		}
		yyVAL.union = yyLOCAL
	case 1555:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9097
		{
			yyLOCAL = yyDollar[1].columnTypeUnion()
		}
		yyVAL.union = yyLOCAL
	case 1556:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9103
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BitFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BIT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1557:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9115
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1558:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9127
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BoolFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BOOL),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1559:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9139
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1560:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9152
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        8,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1561:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9165
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1562:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9178
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SHORT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1563:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9191
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1564:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9204
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        24,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_INT24),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1565:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9217
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1566:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9230
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1567:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9243
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        32,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1568:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9256
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1569:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9269
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONGLONG),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1570:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9284
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for double out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for double out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1571:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9311
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 255 {
				yylex.Error("Display width for float out of range (max = 255)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale > 30 {
				yylex.Error("Display scale for float out of range (max = 30)")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith >= 24 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        32,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_FLOAT),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1572:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9353
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1573:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9389
		{
			locale := ""
			if yyDollar[2].lengthScaleOptUnion().Scale != tree.NotDefineDec && yyDollar[2].lengthScaleOptUnion().Scale > yyDollar[2].lengthScaleOptUnion().DisplayWith {
				yylex.Error("For float(M,D), double(M,D) or decimal(M,D), M must be >= D (column 'a'))")
				return 1
			}
			if yyDollar[2].lengthScaleOptUnion().DisplayWith > 38 || yyDollar[2].lengthScaleOptUnion().DisplayWith < 0 {
				yylex.Error("For decimal(M), M must between 0 and 38.")
				return 1
			} else if yyDollar[2].lengthScaleOptUnion().DisplayWith <= 16 {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        64,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:       tree.FloatFamily,
						FamilyString: yyDollar[1].str,
						Width:        128,
						Locale:       &locale,
						Oid:          uint32(defines.MYSQL_TYPE_DECIMAL),
						DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
						Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1574:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9425
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.FloatFamily,
					FamilyString: yyDollar[1].str,
					Width:        64,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DOUBLE),
					DisplayWith:  yyDollar[2].lengthScaleOptUnion().DisplayWith,
					Scale:        yyDollar[2].lengthScaleOptUnion().Scale,
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1575:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9442
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.DateFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_DATE),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1576:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9454
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Time(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimeFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1577:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9474
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Timestamp(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_TIMESTAMP),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1578:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9494
		{
			locale := ""
			if yyDollar[2].lengthOptUnion() < 0 || yyDollar[2].lengthOptUnion() > 6 {
				yylex.Error("For Datetime(fsp), fsp must in [0, 6]")
				return 1
			} else {
				yyLOCAL = &tree.T{
					InternalType: tree.InternalType{
						Family:             tree.TimestampFamily,
						Scale:              yyDollar[2].lengthOptUnion(),
						FamilyString:       yyDollar[1].str,
						DisplayWith:        26,
						TimePrecisionIsSet: true,
						Locale:             &locale,
						Oid:                uint32(defines.MYSQL_TYPE_DATETIME),
					},
				}
			}
		}
		yyVAL.union = yyLOCAL
	case 1579:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9514
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.IntFamily,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Width:        16,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_YEAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1580:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9530
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_STRING),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1581:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9543
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1582:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9556
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
					DisplayWith:  yyDollar[2].lengthOptUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1583:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9569
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.StringFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1584:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9582
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1585:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9594
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1586:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9606
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1587:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9618
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TEXT),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1588:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9630
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1589:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9642
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_TINY_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1590:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9654
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_MEDIUM_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1591:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9666
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.BlobFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_LONG_BLOB),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1592:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9678
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.JsonFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_JSON),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1593:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9690
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1594:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9703
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.ArrayFamily,
					Locale:       &locale,
					FamilyString: yyDollar[1].str,
					DisplayWith:  yyDollar[2].lengthOptUnion(),
					Oid:          uint32(defines.MYSQL_TYPE_VARCHAR),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1595:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9716
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.EnumFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_ENUM),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1596:
		yyDollar = yyS[yypt-4 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9729
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.SetFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_SET),
					EnumValues:   yyDollar[3].strsUnion(),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1597:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9742
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.UuidFamily,
					FamilyString: yyDollar[1].str,
					Width:        128,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_UUID),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1598:
		yyDollar = yyS[yypt-2 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9757
		{
			yyLOCAL = &tree.Do{
				Exprs: yyDollar[2].exprsUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1599:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9765
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: tree.NewNumValWithType(constant.MakeUnknown(), "null", false, tree.P_null),
			}
		}
		yyVAL.union = yyLOCAL
	case 1600:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.Statement
//line mysql_sql.y:9774
		{
			yyLOCAL = &tree.Declare{
				Variables:  yyDollar[2].strsUnion(),
				ColumnType: yyDollar[3].columnTypeUnion(),
				DefaultVal: yyDollar[5].exprUnion(),
			}
		}
		yyVAL.union = yyLOCAL
	case 1601:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL *tree.T
//line mysql_sql.y:9784
		{
			locale := ""
			yyLOCAL = &tree.T{
				InternalType: tree.InternalType{
					Family:       tree.GeometryFamily,
					FamilyString: yyDollar[1].str,
					Locale:       &locale,
					Oid:          uint32(defines.MYSQL_TYPE_GEOMETRY),
				},
			}
		}
		yyVAL.union = yyLOCAL
	case 1602:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9807
		{
			yyLOCAL = make([]string, 0, 4)
			yyLOCAL = append(yyLOCAL, yyDollar[1].str)
		}
		yyVAL.union = yyLOCAL
	case 1603:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL []string
//line mysql_sql.y:9812
		{
			yyLOCAL = append(yyDollar[1].strsUnion(), yyDollar[3].str)
		}
		yyVAL.union = yyLOCAL
	case 1604:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9818
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1606:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9825
		{
			yyLOCAL = 0
		}
		yyVAL.union = yyLOCAL
	case 1607:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9829
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1608:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9834
		{
			yyLOCAL = int32(-1)
		}
		yyVAL.union = yyLOCAL
	case 1609:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9838
		{
			yyLOCAL = int32(yyDollar[2].item.(int64))
		}
		yyVAL.union = yyLOCAL
	case 1610:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL int32
//line mysql_sql.y:9844
		{
			yyLOCAL = tree.GetDisplayWith(int32(yyDollar[2].item.(int64)))
		}
		yyVAL.union = yyLOCAL
	case 1611:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9850
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.NotDefineDisplayWidth,
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1612:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9857
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       tree.NotDefineDec,
			}
		}
		yyVAL.union = yyLOCAL
	case 1613:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9864
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1614:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9873
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: 38, // this is the default precision for decimal
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1615:
		yyDollar = yyS[yypt-3 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9880
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       0,
			}
		}
		yyVAL.union = yyLOCAL
	case 1616:
		yyDollar = yyS[yypt-5 : yypt+1]
		var yyLOCAL tree.LengthScaleOpt
//line mysql_sql.y:9887
		{
			yyLOCAL = tree.LengthScaleOpt{
				DisplayWith: tree.GetDisplayWith(int32(yyDollar[2].item.(int64))),
				Scale:       int32(yyDollar[4].item.(int64)),
			}
		}
		yyVAL.union = yyLOCAL
	case 1617:
		yyDollar = yyS[yypt-0 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9896
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1618:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9900
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1619:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9904
		{
			yyLOCAL = false
		}
		yyVAL.union = yyLOCAL
	case 1620:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9910
		{
		}
	case 1621:
		yyDollar = yyS[yypt-1 : yypt+1]
		var yyLOCAL bool
//line mysql_sql.y:9912
		{
			yyLOCAL = true
		}
		yyVAL.union = yyLOCAL
	case 1625:
		yyDollar = yyS[yypt-0 : yypt+1]
//line mysql_sql.y:9922
		{
			yyVAL.str = ""
		}
	case 1626:
		yyDollar = yyS[yypt-1 : yypt+1]
//line mysql_sql.y:9926
		{
			yyVAL.str = string(yyDollar[1].str)
		}
	}
	goto yystack /* stack new state and value */
}
